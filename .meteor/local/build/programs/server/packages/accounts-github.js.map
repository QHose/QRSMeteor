{"version":3,"sources":["meteor://ðŸ’»app/packages/accounts-github/notice.js","meteor://ðŸ’»app/packages/accounts-github/github.js"],"names":["Package","hasOwnProperty","console","warn","Accounts","oauth","registerService","Meteor","isClient","loginWithGithub","options","callback","credentialRequestCompleteCallback","credentialRequestCompleteHandler","Github","requestCredential","registerClientLoginFunction","applyLoginFunction","arguments","addAutopublishFields","forLoggedInUser","forOtherUsers"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,QAAQ,aAAR,KACG,CAACA,QAAQ,uBAAR,CADJ,IAEG,CAACA,QAAQC,cAAR,CAAuB,kBAAvB,CAFR,EAEoD;AAClDC,UAAQC,IAAR,CACE,0DACA,0DADA,GAEA,mCAFA,GAGA,IAHA,GAIA,iCAJA,GAKA,IANF;AAQD,C;;;;;;;;;;;ACXDC,SAASC,KAAT,CAAeC,eAAf,CAA+B,QAA/B;;AAEA,IAAIC,OAAOC,QAAX,EAAqB;AACnB,QAAMC,kBAAkB,UAASC,OAAT,EAAkBC,QAAlB,EAA4B;AAClD;AACA,QAAI,CAAEA,QAAF,IAAc,OAAOD,OAAP,KAAmB,UAArC,EAAiD;AAC/CC,iBAAWD,OAAX;AACAA,gBAAU,IAAV;AACD;;AAED,QAAIE,oCAAoCR,SAASC,KAAT,CAAeQ,gCAAf,CAAgDF,QAAhD,CAAxC;AACAG,WAAOC,iBAAP,CAAyBL,OAAzB,EAAkCE,iCAAlC;AACD,GATD;;AAUAR,WAASY,2BAAT,CAAqC,QAArC,EAA+CP,eAA/C;;AACAF,SAAOE,eAAP,GAAyB,YAAY;AACnC,WAAOL,SAASa,kBAAT,CAA4B,QAA5B,EAAsCC,SAAtC,CAAP;AACD,GAFD;AAGD,CAfD,MAeO;AACLd,WAASe,oBAAT,CAA8B;AAC5B;AACA;AACA;AACAC,qBAAiB,CAAC,iBAAD,CAJW;AAK5BC,mBAAe,CAAC,0BAAD;AALa,GAA9B;AAOD,C","file":"/packages/accounts-github.js","sourcesContent":["if (Package['accounts-ui']\n    && !Package['service-configuration']\n    && !Package.hasOwnProperty('github-config-ui')) {\n  console.warn(\n    \"Note: You're using accounts-ui and accounts-github,\\n\" +\n    \"but didn't install the configuration UI for the GitHub\\n\" +\n    \"OAuth. You can install it with:\\n\" +\n    \"\\n\" +\n    \"    meteor add github-config-ui\" +\n    \"\\n\"\n  );\n}\n","Accounts.oauth.registerService('github');\n\nif (Meteor.isClient) {\n  const loginWithGithub = function(options, callback) {\n    // support a callback without options\n    if (! callback && typeof options === \"function\") {\n      callback = options;\n      options = null;\n    }\n\n    var credentialRequestCompleteCallback = Accounts.oauth.credentialRequestCompleteHandler(callback);\n    Github.requestCredential(options, credentialRequestCompleteCallback);\n  };\n  Accounts.registerClientLoginFunction('github', loginWithGithub);\n  Meteor.loginWithGithub = function () {\n    return Accounts.applyLoginFunction('github', arguments);\n  };\n} else {\n  Accounts.addAutopublishFields({\n    // not sure whether the github api can be used from the browser,\n    // thus not sure if we should be sending access tokens; but we do it\n    // for all other oauth2 providers, and it may come in handy.\n    forLoggedInUser: ['services.github'],\n    forOtherUsers: ['services.github.username']\n  });\n}\n"]}