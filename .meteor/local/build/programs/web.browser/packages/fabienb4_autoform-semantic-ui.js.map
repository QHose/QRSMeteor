{"version":3,"sources":["meteor://ðŸ’»app/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/semantic-ui.js","meteor://ðŸ’»app/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/components/quickForm/quickForm.js","meteor://ðŸ’»app/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/components/afFormGroup/afFormGroup.js","meteor://ðŸ’»app/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/components/afObjectField/afObjectField.js","meteor://ðŸ’»app/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/basic-select/basic-select.js","meteor://ðŸ’»app/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/boolean-checkbox/boolean-checkbox.js","meteor://ðŸ’»app/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/button/button.js","meteor://ðŸ’»app/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/radio/radio.js","meteor://ðŸ’»app/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/reset/reset.js","meteor://ðŸ’»app/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/select/select.js","meteor://ðŸ’»app/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/select-checkbox/select-checkbox.js","meteor://ðŸ’»app/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/select-checkbox-inline/select-checkbox-inline.js","meteor://ðŸ’»app/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/select-radio/select-radio.js","meteor://ðŸ’»app/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/select-radio-inline/select-radio-inline.js","meteor://ðŸ’»app/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/submit/submit.js"],"names":["Template","autoForm","helpers","atts","val","htmlAttributes","context","AutoForm","Utility","addClass","removeProps","hasComponentPrefix","prop","_","any","componentTypeList","indexOf","componentType","hasOwnProperty","contains","isArray","isObject","validation","novalidate","quickForm_semanticUI","fieldGroupLabel","name","Number","isNaN","parseInt","substr","charAt","SimpleSchema","defaultLabel","toUpperCase","slice","quickFieldsAtts","pick","submitButtonAtts","qfAtts","buttonClasses","qfAutoFormContext","ctx","clone","afFormGroup_semanticUI","skipLabel","self","type","getInputType","afFieldInputAtts","requiredClass","required","inputClass","leftLabel","rightLabel","leftIcon","rightIcon","className","afObjectField_semanticUI","addInputType","template","valueOut","valueConverters","stringArray","stringToStringArray","number","stringToNumber","numberArray","stringToNumberArray","stringToBoolean","booleanArray","stringToBooleanArray","date","stringToDate","dateArray","stringToDateArray","contextAdjust","autocomplete","itemAtts","omit","firstOption","items","push","label","value","_id","selected","buildOption","option","htmlAtts","toString","each","selectOptions","optgroup","subOptions","map","afCheckbox_semanticUI","onRendered","$","firstNode","checkbox","data","settings","inputAtts","afInputButton_semanticUI","afRadio_semanticUI","checked","afInputReset_semanticUI","buildItem","item","icon","description","extend","itemGroup","subItems","category","afSelect_semanticUI","divAtts","isString","class","disabled","search","fullTextSearch","multiple","showClearButton","events","event","dropdown","node","allowAdditions","maxSelections","allowCategorySelection","useLabels","autorun","c","currentData","stop","afCheckboxGroup_semanticUI","dsk","find","afCheckboxGroupInline_semanticUI","afRadioGroup_semanticUI","afRadioGroupInline_semanticUI","afInputSubmit_semanticUI"],"mappings":"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","file":"/packages/fabienb4_autoform-semantic-ui.js","sourcesContent":["/* global AutoForm */\n\nTemplate.autoForm.helpers({\n  atts() {\n    // After removing all of the props we know about, everything else should\n    // become a form attribute unless it's an array or object.\n    let val, htmlAttributes = {}, context = this;\n\n    context = AutoForm.Utility.addClass(context, \"ui form\");\n\n    let removeProps = [\n      \"schema\",\n      \"collection\",\n      \"validation\",\n      \"doc\",\n      \"resetOnSuccess\",\n      \"type\",\n      \"template\",\n      \"autosave\",\n      \"autosaveOnKeyup\",\n      \"meteormethod\",\n      \"filter\",\n      \"autoConvert\",\n      \"removeEmptyStrings\",\n      \"trimStrings\"\n    ];\n\n    // Filter out any attributes that have a component prefix\n    function hasComponentPrefix(prop) {\n      return _.any(\n        AutoForm.Utility.componentTypeList,\n        componentType => prop.indexOf(componentType + \"-\") === 0\n      );\n    }\n\n    // Filter out arrays and objects, which are obviously not meant to be\n    // HTML attributes.\n    for (let prop in context) {\n      if (context.hasOwnProperty(prop) && ! _.contains(removeProps, prop) &&\n          ! hasComponentPrefix(prop)) {\n        val = context[prop];\n\n        if (! _.isArray(val) && ! _.isObject(val)) {\n          htmlAttributes[prop] = val;\n        }\n      }\n    }\n\n    // By default, we add the `novalidate=\"novalidate\"` attribute to our form,\n    // unless the user passes `validation=\"browser\"`.\n    if (this.validation !== \"browser\" && ! htmlAttributes.novalidate) {\n      htmlAttributes.novalidate = \"novalidate\";\n    }\n\n    return htmlAttributes;\n  }\n});\n","Template.quickForm_semanticUI.helpers({\n  fieldGroupLabel() {\n    let name = this.name;\n\n    // if field group name is of the form XY_abcde where \"XY\" is a number, remove prefix\n    if (! Number.isNaN(parseInt(name.substr(0,2), 10)) && name.charAt(2) === \"_\") {\n      name = name.substr(3);\n    }\n\n    // if SimpleSchema.defaultLabel is defined, use it\n    if (typeof SimpleSchema.defaultLabel === \"function\") {\n      return SimpleSchema.defaultLabel(name);\n    } else {\n      // else, just capitalise name\n      return name.charAt(0).toUpperCase() + name.slice(1);\n    }\n  },\n  quickFieldsAtts() {\n    // These are the quickForm attributes that we want to forward to\n    // the afQuickFields component.\n    return _.pick(this.atts, \"id-prefix\");\n  },\n  submitButtonAtts() {\n    let qfAtts = this.atts;\n    let atts = {};\n\n    if (typeof qfAtts.buttonClasses === \"string\") {\n      atts[\"class\"] = qfAtts.buttonClasses;\n    } else {\n      atts[\"class\"] = \"ui positive submit button\";\n    }\n\n    return atts;\n  },\n  qfAutoFormContext() {\n    let ctx = _.clone(this.qfAutoFormContext || {});\n\n    ctx = AutoForm.Utility.addClass(ctx, \"ui form\");\n\n    delete ctx[\"id-prefix\"];\n\n    return ctx;\n  }\n});\n","Template.afFormGroup_semanticUI.helpers({\n  skipLabel() {\n    let self = this;\n    let type = AutoForm.getInputType(self.afFieldInputAtts);\n\n    return (self.skipLabel || type === \"boolean-checkbox\");\n  },\n  requiredClass() {\n    if (this.required) {\n      return \"required\";\n    }\n  },\n  inputClass() {\n    let leftLabel  = this.afFieldInputAtts.leftLabel;\n    let rightLabel = this.afFieldInputAtts.rightLabel;\n    let leftIcon   = this.afFieldInputAtts.leftIcon;\n    let rightIcon  = this.afFieldInputAtts.rightIcon;\n\n    if (leftLabel || rightLabel || leftIcon || rightIcon) {\n      let className = \"ui\";\n\n      if (leftLabel && rightIcon) {\n        className += \" labeled icon\";\n      } else if (leftIcon && rightLabel) {\n        className += \" left icon right labeled\";\n      } else if (leftLabel) {\n        className += \" labeled\";\n      } else if (rightLabel) {\n        className += \" right labeled\";\n      } else if (leftIcon) {\n        className += \" left icon\";\n      } else if (rightIcon) {\n        className += \" icon\";\n      }\n\n      return className + \" fluid input\";\n    }\n  },\n  leftLabel() {\n    return this.afFieldInputAtts.leftLabel;\n  },\n  rightLabel() {\n    return this.afFieldInputAtts.rightLabel;\n  },\n  leftIcon() {\n    return this.afFieldInputAtts.leftIcon;\n  },\n  rightIcon() {\n    return this.afFieldInputAtts.rightIcon;\n  }\n});\n","Template.afObjectField_semanticUI.helpers({\n  quickFieldsAtts() {\n    return _.pick(this, \"name\", \"id-prefix\");\n  }\n});\n","AutoForm.addInputType(\"basic-select\", {\n  template: \"afBasicSelect\",\n\tvalueOut() {\n\t\treturn this.val();\n\t},\n\tvalueConverters: {\n    stringArray:  AutoForm.valueConverters.stringToStringArray,\n    number:       AutoForm.valueConverters.stringToNumber,\n    numberArray:  AutoForm.valueConverters.stringToNumberArray,\n    boolean:      AutoForm.valueConverters.stringToBoolean,\n    booleanArray: AutoForm.valueConverters.stringToBooleanArray,\n    date:         AutoForm.valueConverters.stringToDate,\n    dateArray:    AutoForm.valueConverters.stringToDateArray\n\t},\n  contextAdjust(context) {\n    // can fix issues with some browsers selecting the firstOption instead of the selected option\n    context.atts.autocomplete = \"off\";\n\n    let itemAtts    = _.omit(context.atts, \"firstOption\");\n    let firstOption = context.atts.firstOption;\n\n    // build items list\n    context.items = [];\n\n    // If a firstOption was provided, add that to the items list first\n    if (firstOption !== false) {\n      context.items.push({\n        name:  context.name,\n        label: (typeof firstOption === \"string\" ? firstOption : \"(Select One)\"),\n        value: \"\",\n        // _id must be included because it is a special property that\n        // #each uses to track unique list items when adding and removing them\n        // See https://github.com/meteor/meteor/issues/2174\n        //\n        // Setting this to an empty string caused problems if option with value\n        // 1 was in the options list because Spacebars evaluates \"\" to 1 and\n        // considers that a duplicate.\n        // See https://github.com/aldeed/meteor-autoform/issues/656\n        _id:      \"AUTOFORM_EMPTY_FIRST_OPTION\",\n        selected: false,\n        atts:     itemAtts\n      });\n    }\n\n    let buildOption = option => ({\n      name:     context.name,\n      label:    option.label,\n      value:    option.value,\n      htmlAtts: _.omit(option, \"label\", \"value\"),\n      // _id must be included because it is a special property that\n      // #each uses to track unique list items when adding and removing them\n      // See https://github.com/meteor/meteor/issues/2174\n      //\n      // The toString() is necessary because otherwise Spacebars evaluates\n      // any string to 1 if the other values are numbers, and then considers\n      // that a duplicate.\n      // See https://github.com/aldeed/meteor-autoform/issues/656\n      _id:      option.value.toString(),\n      selected: (option.value === context.value),\n      atts:     itemAtts\n    });\n\n    // Add all defined options\n    _.each(context.selectOptions, option => {\n      if (option.optgroup) {\n        let subOptions = _.map(option.items, buildOption);\n\n        context.items.push({\n          optgroup: option.optgroup,\n          items:    subOptions\n        });\n      } else {\n        context.items.push(buildOption(option));\n      }\n    });\n\n    return context;\n  }\n});\n","Template.afCheckbox_semanticUI.onRendered(function() {\n  this.$(this.firstNode).checkbox(this.data.atts.settings);\n});\n\nTemplate.afCheckbox_semanticUI.helpers({\n  inputAtts() {\n    return _.omit(this.atts, \"checkboxType\");\n  }\n});\n","Template.afInputButton_semanticUI.helpers({\n  atts() {\n    let atts = _.clone(this.atts);\n\n    // Add semantic-ui class\n    atts = AutoForm.Utility.addClass(atts, \"ui button\");\n\n    return atts;\n  }\n});\n","Template.afRadio_semanticUI.helpers({\n  atts() {\n    let atts = _.clone(this.atts);\n\n    if (this.selected) {\n      atts.checked = \"\";\n    }\n\n    return atts;\n  }\n});\n\nTemplate.afRadio_semanticUI.onRendered(function() {\n  this.$(this.firstNode).checkbox(this.data.atts.settings);\n});\n","Template.afInputReset_semanticUI.helpers({\n  atts() {\n    let atts = _.clone(this.atts);\n\n    // Add semantic-ui class\n    atts = AutoForm.Utility.addClass(atts, \"ui button\");\n\n    return atts;\n  }\n});\n","AutoForm.addInputType(\"select\", {\n\ttemplate: \"afSelect\",\n\tvalueOut() {\n\t\treturn this.val();\n\t},\n\tvalueConverters: {\n    stringArray : AutoForm.valueConverters.stringToStringArray,\n    number      : AutoForm.valueConverters.stringToNumber,\n    numberArray : AutoForm.valueConverters.stringToNumberArray,\n    boolean     : AutoForm.valueConverters.stringToBoolean,\n    booleanArray: AutoForm.valueConverters.stringToBooleanArray,\n    date        : AutoForm.valueConverters.stringToDate,\n    dateArray   : AutoForm.valueConverters.stringToDateArray\n\t},\n\tcontextAdjust(context) {\n\t\t// can fix issues with some browsers selecting the firstOption instead of the selected option\n\t\tcontext.atts.autocomplete = \"off\";\n\n\t\t// delete eventual option used in other templates\n\t\tdelete context.atts.firstOption;\n\n\t\tlet itemAtts = _.omit(context.atts, \"placeholder\");\n\n\t\t// build items list\n\t\tcontext.items = [];\n\n\t\tlet buildItem = item => ({\n\t\t\tname       : context.name,\n\t\t\tlabel      : item.label,\n\t\t\ticon       : item.icon || false,\n\t\t\tdescription: item.description || false,\n\t\t\tvalue      : item.value,\n\t\t\thtmlAtts   : _.extend(\n\t\t\t\t{ class: \"item\" },\n\t\t\t\t_.omit(item, \"label\", \"value\", \"icon\", \"circularLabel\", \"description\", \"itemGroup\", \"category\", \"items\")\n\t\t\t),\n\t\t\t// _id must be included because it is a special property that\n\t\t\t// #each uses to track unique list items when adding and removing them\n\t\t\t// See https://github.com/meteor/meteor/issues/2174\n\t\t\t//\n\t\t\t// The toString() is necessary because otherwise Spacebars evaluates\n\t\t\t// any string to 1 if the other values are numbers, and then considers\n\t\t\t// that a duplicate.\n\t\t\t// See https://github.com/aldeed/meteor-autoform/issues/656\n\t\t\t_id        : item.value.toString(),\n\t\t\tatts       : itemAtts\n\t\t});\n\n\t\t// Add all defined options\n\t\t_.each(context.selectOptions, item => {\n\t\t\tif (item.itemGroup) {\n\t\t\t\tlet subItems = _.map(item.items, buildItem);\n\n\t\t\t\tcontext.items.push({\n\t\t\t\t\titemGroup: item.itemGroup,\n\t\t\t\t\titems    : subItems\n\t\t\t\t});\n\t\t\t} else if (item.category) {\n\t\t\t\tlet subItems = _.map(item.items, buildItem);\n\n\t\t\t\tcontext.items.push({\n\t\t\t\t\tcategory: item.category,\n\t\t\t\t\titems   : subItems\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcontext.items.push(buildItem(item));\n\t\t\t}\n\t\t});\n\n\t\treturn context;\n\t}\n});\n\nTemplate.afSelect_semanticUI.helpers({\n\tdivAtts() {\n\t\tlet atts = { class: \"ui dropdown\" };\n\n\t\t// Add custom classes or default\n\t\tif (_.isString(this.atts.class)) {\n\t\t\tatts = AutoForm.Utility.addClass(atts, this.atts.class);\n\t\t} else {\n\t\t\tatts = AutoForm.Utility.addClass(atts, \"fluid selection\");\n\t\t}\n\n\t\t// Add the disabled class if required\n\t\tif (this.atts.disabled === \"\") {\n\t\t\tatts = AutoForm.Utility.addClass(atts, \"disabled\");\n\t\t}\n\n\t\t// Add search class, also add selection for proper design\n\t\tif (this.atts.search || this.atts.fullTextSearch) {\n\t\t\tatts = AutoForm.Utility.addClass(atts, \"search selection\");\n\t\t}\n\n\t\t// Add multiple class\n\t\tif (this.atts.multiple) {\n\t\t\tatts = AutoForm.Utility.addClass(atts, \"multiple\");\n\t\t}\n\n\t\treturn atts;\n\t},\n\tinputAtts() {\n\t\treturn _.pick(this.atts, \"name\", \"id\", \"required\", \"data-schema-key\", \"autocomplete\", \"value\");\n\t},\n\tshowClearButton() {\n\t\treturn this.atts.required !== \"\" && ! this.atts.multiple;\n\t}\n});\n\nTemplate.afSelect_semanticUI.events({\n\t\"click .ui.clear.button\"(event, template) {\n\t\ttemplate.$(\".ui.dropdown\").dropdown(\"clear\").dropdown(\"hide\");\n\t}\n});\n\nTemplate.afSelect_semanticUI.onRendered(function() {\n\tlet node = this.$(this.firstNode);\n\n\tnode.dropdown(_.extend({\n\t\tfullTextSearch        : this.data.atts.fullTextSearch || false,\n\t\tallowAdditions        : this.data.atts.allowAdditions || false,\n\t\tmaxSelections         : this.data.atts.maxSelections ||Â false,\n\t\tallowCategorySelection: this.data.atts.allowCategorySelection || false,\n\t\tuseLabels             : this.data.atts.useLabels === false ? false : true\n\t}, this.data.atts.settings));\n\n  this.autorun((c) => {\n    let data = Template.currentData();\n\n    if (data.value) {\n\t\t\tnode.dropdown(\"set selected\", data.value);\n      c.stop();\n    }\n  });\n});\n","Template.afCheckboxGroup_semanticUI.helpers({\n  atts() {\n    let atts = _.clone(this.atts);\n\n    if (this.selected) {\n      atts.checked = \"checked\";\n    }\n\n    // remove data-schema-key attribute because we put it\n    // on the entire group\n    delete atts[\"data-schema-key\"];\n\n    return atts;\n  },\n  dsk() {\n    return {\n      \"data-schema-key\": this.atts[\"data-schema-key\"]\n    };\n  }\n});\n\nTemplate.afCheckboxGroup_semanticUI.onRendered(function() {\n  this.$(this.firstNode).find(\".ui.checkbox\").checkbox(this.data.atts.settings);\n});\n","Template.afCheckboxGroupInline_semanticUI.helpers({\n  atts() {\n    let atts = _.clone(this.atts);\n\n    if (this.selected) {\n      atts.checked = \"checked\";\n    }\n\n    // remove data-schema-key attribute because we put it\n    // on the entire group\n    delete atts[\"data-schema-key\"];\n\n    return atts;\n  },\n  dsk() {\n    return {\n      \"data-schema-key\": this.atts[\"data-schema-key\"]\n    };\n  }\n});\n\nTemplate.afCheckboxGroupInline_semanticUI.onRendered(function() {\n  this.$(this.firstNode).find(\".ui.checkbox\").checkbox(this.data.atts.settings);\n});\n","Template.afRadioGroup_semanticUI.helpers({\n  atts() {\n    let atts = _.clone(this.atts);\n\n    if (this.selected) {\n      atts.checked = \"checked\";\n    }\n\n    // remove data-schema-key attribute because we put it\n    // on the entire group\n    delete atts[\"data-schema-key\"];\n\n    return atts;\n  },\n  dsk() {\n    return {\n      \"data-schema-key\": this.atts[\"data-schema-key\"]\n    };\n  }\n});\n\nTemplate.afRadioGroup_semanticUI.onRendered(function() {\n  this.$(this.firstNode).find(\".ui.radio.checkbox\").checkbox(this.data.atts.settings);\n});\n","Template.afRadioGroupInline_semanticUI.helpers({\n  atts() {\n    let atts = _.clone(this.atts);\n\n    if (this.selected) {\n      atts.checked = \"checked\";\n    }\n\n    // remove data-schema-key attribute because we put it\n    // on the entire group\n    delete atts[\"data-schema-key\"];\n\n    return atts;\n  },\n  dsk() {\n    return {\n      \"data-schema-key\": this.atts[\"data-schema-key\"]\n    };\n  }\n});\n\nTemplate.afRadioGroupInline_semanticUI.onRendered(function() {\n  this.$(this.firstNode).find(\".ui.radio.checkbox\").checkbox(this.data.atts.settings);\n});\n","Template.afInputSubmit_semanticUI.helpers({\n  atts() {\n    let atts = _.clone(this.atts);\n\n    // Add semantic-ui class\n    atts = AutoForm.Utility.addClass(atts, \"ui positive button\");\n\n    return atts;\n  }\n});\n"]}