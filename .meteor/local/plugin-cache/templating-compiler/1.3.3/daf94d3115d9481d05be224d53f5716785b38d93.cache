{"head":"","body":"","js":"\nTemplate.__checkName(\"insertCustomerButtons\");\nTemplate[\"insertCustomerButtons\"] = new Template(\"Template.insertCustomerButtons\", (function() {\n  var view = this;\n  return HTML.Raw('<!-- <div class=\"ui small buttons\"> -->\\n        <!-- <a href=\"{{pathFor \\'users\\'}}\" class=\"ui button insertNewCustomer\">Insert customers</a>\\n        <div class=\"or\"></div> -->\\n        <a href=\"#\" class=\"ui positive button insertDummyCustomers\">Use fictitious customers</a>\\n    <!-- </div> -->');\n}));\n\nTemplate.__checkName(\"users\");\nTemplate[\"users\"] = new Template(\"Template.users\", (function() {\n  var view = this;\n  return [ Spacebars.include(view.lookupTemplate(\"yourSaasPlatformMenu\")), \"\\n\\n    \", Spacebars.include(view.lookupTemplate(\"stepsRow\")), \"\\n    \", HTML.DIV({\n    class: \"ui two column stackable grid\"\n  }, \"\\n        \", HTML.DIV({\n    id: \"insertCustomer\",\n    class: \"ui modal\"\n  }, \"\\n            \", Spacebars.include(view.lookupTemplate(\"insertCustomer\")), \"\\n        \"), \"\\n        \", HTML.DIV({\n    class: \"row\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"column\"\n  }, \"\\n                \", HTML.Raw('<h4 class=\"ui dividing header\">\\n                    Your Saas Platform: Customers\\n                </h4>'), \"\\n                \", HTML.Raw('<!-- <div class=\"ui segment\"> -->'), \"\\n                \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"noCustomers\"));\n  }, function() {\n    return [ \"\\n                    \", HTML.DIV({\n      class: \"ui icon message\"\n    }, \"\\n                        \", HTML.IMG({\n      class: \"icon\",\n      alt: \"\",\n      src: \"images/customers.png\"\n    }), \"\\n                        \", HTML.DIV({\n      class: \"content\"\n    }, \"\\n                            \", HTML.DIV({\n      class: \"header\"\n    }, \"\\n                                \", HTML.H4(\"No customers\"), \"\\n                            \"), \"\\n                            \", HTML.P(\"Please insert some customers.\"), \"\\n                        \"), \"\\n                    \"), \"\\n                    \", Spacebars.include(view.lookupTemplate(\"insertCustomerButtons\")), \"\\n                \" ];\n  }, function() {\n    return [ \"\\n                    \", HTML.DIV({\n      class: \"ui icon message\"\n    }, \"\\n                        \", HTML.IMG({\n      class: \"icon\",\n      alt: \"\",\n      src: \"images/customers.png\"\n    }), \"\\n                        \", HTML.DIV({\n      class: \"content\"\n    }, \"\\n                            \", HTML.DIV({\n      class: \"header\"\n    }, \"\\n                                Customers in your SaaS platform\\n                            \"), \"\\n                            \", HTML.P(\"Note that you don't have to create users or groups in Qlik Sense (See security \", HTML.A({\n      href: function() {\n        return Spacebars.mustache(view.lookup(\"pathFor\"), \"documentation\");\n      },\n      target: \"_blank\",\n      class: \"item\"\n    }, \"\\n                            documentation\"), \" or this \", HTML.A({\n      href: function() {\n        return Spacebars.mustache(view.lookup(\"URL_Youtube_integrated_flow\"));\n      },\n      target: \"_blank\"\n    }, \" video \"), \").\\n                            \"), \"\\n                        \"), \"\\n                    \"), \"\\n                    \", HTML.TABLE({\n      class: \"ui simple table\"\n    }, \"\\n                        \", HTML.THEAD(\"\\n                            \", HTML.TR(\"\\n                                \", HTML.TH(\"Customer\"), \"\\n                                \", HTML.TH(\"Delete customer\"), \"\\n                            \"), \"\\n                        \"), \"\\n                        \", HTML.TBODY(\"\\n                            \", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"customers\"));\n    }, function() {\n      return [ \"\\n                                \", HTML.TR({\n        class: function() {\n          return [ \"customer-row \", Spacebars.mustache(view.lookup(\"active\")) ];\n        }\n      }, \"\\n                                    \", HTML.TD({\n        class: function() {\n          return Spacebars.mustache(view.lookup(\"ribbon\"));\n        }\n      }, \"\\n                                        \", Blaze.View(\"lookup:name\", function() {\n        return Spacebars.mustache(view.lookup(\"name\"));\n      }), \"\\n                                    \"), \"\\n                                    \", HTML.TD({\n        class: \"delete\"\n      }, HTML.I({\n        class: \"remove circle icon\"\n      })), \"\\n                                \"), \"\\n                            \" ];\n    }), \"\\n                        \"), \"\\n                    \"), \"\\n                    \", HTML.DIV({\n      class: \"ui buttons\"\n    }, \"\\n                        \", HTML.Comment(' <a href=\"#\" class=\"ui button insertNewCustomer\">Insert new customer</a>\\n                        <div class=\"or\"></div> '), \"\\n                        \", HTML.A({\n      href: \"#\",\n      class: \"ui positive button backToGeneration\"\n    }, HTML.I({\n      class: \"play icon \"\n    }), \" Go to step 2\"), \"\\n                    \"), \"\\n                \" ];\n  }), \"\\n                \", HTML.Raw(\"<!-- </div> -->\"), \"\\n            \"), \"\\n            \", HTML.DIV({\n    class: \"column\"\n  }, \"\\n                \", HTML.Raw(\"<!-- {{#if isChrome}}\\n                {{#if showUpdateScreen}}\\n                {{> updateUserFormStep1}}\\n                {{/if}}\\n                {{else}} -->\"), \"\\n                \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"showUpdateScreen\"));\n  }, function() {\n    return [ \"\\n                    \", Spacebars.include(view.lookupTemplate(\"displayUsers\")), \"\\n                \" ];\n  }), \"\\n                \", HTML.Raw(\"<!-- {{/if}} -->\"), \"\\n            \"), \"\\n        \"), \"\\n    \") ];\n}));\n\nTemplate.__checkName(\"displayUsers\");\nTemplate[\"displayUsers\"] = new Template(\"Template.displayUsers\", (function() {\n  var view = this;\n  return Spacebars.With(function() {\n    return Spacebars.call(view.lookup(\"selectedCustomerDoc\"));\n  }, function() {\n    return [ \"\\n        \", HTML.H4({\n      class: \"ui dividing header\"\n    }, \"\\n      An overview of the group memberships for customer:  \", Blaze.View(\"lookup:name\", function() {\n      return Spacebars.mustache(view.lookup(\"name\"));\n    }), \"\\n  \"), \"\\n        \", HTML.FORM({\n      class: \"ui form\"\n    }, \"\\n            \", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"users\"));\n    }, function() {\n      return [ \"\\n                \", HTML.DIV({\n        class: \"ui segment\"\n      }, \"\\n                    \", HTML.DIV({\n        class: \"ui form\"\n      }, \"\\n                        \", HTML.DIV({\n        class: \"three fields\"\n      }, \"\\n                            \", HTML.DIV({\n        class: \"field\"\n      }, \"\\n                                \", Blaze.View(\"lookup:name\", function() {\n        return Spacebars.mustache(view.lookup(\"name\"));\n      }), \"\\n                            \"), \"\\n                            \", HTML.DIV({\n        class: \"field\"\n      }, \"\\n                                \", Blaze.View(\"lookup:group\", function() {\n        return Spacebars.mustache(view.lookup(\"group\"));\n      }), \"\\n                            \"), \"\\n                            \", HTML.DIV({\n        class: \"field\"\n      }, \"\\n                                \", Blaze.View(\"lookup:country\", function() {\n        return Spacebars.mustache(view.lookup(\"country\"));\n      }), \"\\n                            \"), \"\\n                        \"), \"\\n                    \"), \"\\n                \"), \"\\n            \" ];\n    }), \"\\n        \"), \"\\n    \" ];\n  });\n}));\n\nTemplate.__checkName(\"updateUserFormStep1\");\nTemplate[\"updateUserFormStep1\"] = new Template(\"Template.updateUserFormStep1\", (function() {\n  var view = this;\n  return Spacebars.With(function() {\n    return Spacebars.call(view.lookup(\"selectedCustomerDoc\"));\n  }, function() {\n    return [ \"\\n        \", HTML.H4({\n      class: \"ui dividing header\"\n    }, \"\\n      Update the group memberships for customer:  \", Blaze.View(\"lookup:name\", function() {\n      return Spacebars.mustache(view.lookup(\"name\"));\n    }), \"\\n  \"), \"\\n        \", HTML.FORM({\n      class: \"ui form\"\n    }, \"\\n            \", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"users\"));\n    }, function() {\n      return [ \"\\n                \", Spacebars.include(view.lookupTemplate(\"updateGroupsFormStep1\")), \"\\n            \" ];\n    }), \"\\n        \"), \"\\n    \" ];\n  });\n}));\n\nTemplate.__checkName(\"updateGroupsFormStep1\");\nTemplate[\"updateGroupsFormStep1\"] = new Template(\"Template.updateGroupsFormStep1\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"ui green segment\"\n  }, \"\\n        \", HTML.DIV({\n    class: \"ui form\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"three fields\"\n  }, \"\\n                \", HTML.DIV({\n    class: \"field\"\n  }, \"\\n                    \", Blaze.View(\"lookup:name\", function() {\n    return Spacebars.mustache(view.lookup(\"name\"));\n  }), \"\\n                \"), \"\\n                \", HTML.DIV({\n    class: \"field\"\n  }, \"\\n                    \", HTML.DIV({\n    class: \"ui fluid selection dropdown\"\n  }, \"\\n                        \", HTML.Raw('<input name=\"group\" type=\"hidden\">'), \"\\n                        \", HTML.Raw('<i class=\"user icon\"></i>'), Blaze.View(\"lookup:group\", function() {\n    return Spacebars.mustache(view.lookup(\"group\"));\n  }), \"\\n                        \", HTML.Raw('<div class=\"default text\"></div>'), \"\\n                        \", HTML.Raw('<i class=\"dropdown icon\"></i>'), \"\\n                        \", HTML.Raw('<div class=\"menu\">\\n                            <div class=\"header\">Users from step 1</div>\\n                            <!-- {{#each groups}}\\n                                <div class=\"item\" data-value=\"{{this}}\" data-text=\"{{this}}\">\\n                                    {{this}}\\n                                </div>\\n                                {{/each}} -->\\n                            <div class=\"item\" data-value=\"Contributor\" data-text=\"Contributor\"></div>\\n                            <div class=\"item\" data-value=\"Developer\" data-text=\"Developer\">Developer</div>\\n                            <!-- <div class=\"item\" data-value=\"Admin\" data-text=\"Admin\">{{../name}} admin</div>\\n                                <div class=\"item\" data-value=\"Global auditor\" data-text=\"Global auditor\">SaaS platform auditor (global display)</div> -->\\n                        </div>'), \"\\n                    \"), \"\\n                \"), \"\\n                \", HTML.DIV({\n    class: \"field\"\n  }, \"\\n                    \", HTML.DIV({\n    class: \"ui dropdown country\"\n  }, \"\\n                        \", HTML.INPUT({\n    type: \"hidden\",\n    name: \"country\",\n    value: function() {\n      return Spacebars.mustache(view.lookup(\"country\"));\n    }\n  }), \"\\n                        \", HTML.Raw('<i class=\"dropdown icon\"></i>'), \"\\n                        \", HTML.DIV({\n    class: \"default text\"\n  }, Blaze.View(\"lookup:country\", function() {\n    return Spacebars.mustache(view.lookup(\"country\"));\n  })), \"\\n                        \", HTML.Raw('<div class=\"menu\">\\n                            <div class=\"item\" data-value=\"Italy\">Italy</div>\\n                            <div class=\"item\" data-value=\"United States\">United States</div>\\n                            <div class=\"item\" data-value=\"Germany\">Germany</div>\\n                        </div>'), \"\\n                    \"), \"\\n                \"), \"\\n            \"), \"\\n        \"), \"\\n    \");\n}));\n\nTemplate.__checkName(\"modalRefresher\");\nTemplate[\"modalRefresher\"] = new Template(\"Template.modalRefresher\", (function() {\n  var view = this;\n  return \"\";\n}));\n\nTemplate.__checkName(\"insertCustomer\");\nTemplate[\"insertCustomer\"] = new Template(\"Template.insertCustomer\", (function() {\n  var view = this;\n  return [ Spacebars.include(view.lookupTemplate(\"sAlert\")), \"\\n    \", Blaze._TemplateWith(function() {\n    return {\n      collection: Spacebars.call(view.lookup(\"Customers\")),\n      id: Spacebars.call(\"insertCustomerForm\"),\n      omitFields: Spacebars.call(\"users.$.currentlyLoggedIn\"),\n      type: Spacebars.call(\"insert\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {\n      return [ \"\\n        \", HTML.FIELDSET(\"\\n            \", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"name\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \" \", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"users\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n        \"), \"\\n        \", HTML.DIV({\n        class: \"ui right floated buttons\"\n      }, \"\\n            \", HTML.BUTTON({\n        type: \"submit\",\n        class: \"ui positive button saveNewCustomer\"\n      }, \"\\n                \", HTML.I({\n        class: \"edit icon \"\n      }), \" Insert customer\"), \"\\n            \", HTML.DIV({\n        class: \"or\"\n      }), \"\\n            \", HTML.BUTTON({\n        type: \"submit\",\n        class: \"ui button closeInsertModal\"\n      }, \"\\n                close\"), \"\\n        \"), \"\\n    \" ];\n    });\n  }) ];\n}));\n","bodyAttrs":{}}