{"head":"","body":"","js":"\nTemplate.__checkName(\"quickForm_bootstrap3-inline\");\nTemplate[\"quickForm_bootstrap3-inline\"] = new Template(\"Template.quickForm_bootstrap3-inline\", (function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return Spacebars.call(view.lookup(\"qfAutoFormContext\"));\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {\n      return [ \"\\n    \", Blaze._TemplateWith(function() {\n        return Spacebars.call(view.lookup(\"quickFieldsAtts\"));\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickFields\"));\n      }), \"\\n    \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"qfShouldRenderButton\"));\n      }, function() {\n        return [ \"\\n    \", HTML.BUTTON(HTML.Attrs({\n          type: \"submit\"\n        }, function() {\n          return Spacebars.attrMustache(view.lookup(\"submitButtonAtts\"));\n        }), \"\\n    \", Spacebars.With(function() {\n          return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"atts\", \"buttonContent\"));\n        }, function() {\n          return [ \"\\n    \", Blaze.View(\"lookup:.\", function() {\n            return Spacebars.mustache(view.lookup(\".\"));\n          }), \"\\n    \" ];\n        }, function() {\n          return \"\\n    Submit\\n    \";\n        }), \"\\n    \"), \"\\n    \" ];\n      }), \"\\n  \" ];\n    });\n  });\n}));\n\nTemplate.__checkName(\"afFormGroup_bootstrap3-inline\");\nTemplate[\"afFormGroup_bootstrap3-inline\"] = new Template(\"Template.afFormGroup_bootstrap3-inline\", (function() {\n  var view = this;\n  return HTML.DIV(HTML.Attrs({\n    class: function() {\n      return [ \"form-group \", Blaze.If(function() {\n        return Spacebars.dataMustache(view.lookup(\"afFieldIsInvalid\"), Spacebars.kw({\n          name: Spacebars.dot(view.lookup(\".\"), \"name\")\n        }));\n      }, function() {\n        return \"has-error\";\n      }), \" \", Spacebars.mustache(view.lookup(\"afFormGroupClass\")) ];\n    },\n    \"data-required\": function() {\n      return Spacebars.mustache(view.lookup(\"required\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"afFormGroupAtts\"));\n  }), \"\\n    \", Blaze.Unless(function() {\n    return Spacebars.call(view.lookup(\"skipLabel\"));\n  }, function() {\n    return [ \"\\n    \", HTML.LABEL(HTML.Attrs(function() {\n      return Spacebars.attrMustache(view.lookup(\"afFieldLabelAtts\"));\n    }), Blaze.If(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"labelText\"));\n    }, function() {\n      return Blaze.View(\"lookup:..labelText\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"labelText\"));\n      });\n    }, function() {\n      return Blaze.View(\"lookup:afFieldLabelText\", function() {\n        return Spacebars.mustache(view.lookup(\"afFieldLabelText\"), Spacebars.kw({\n          name: Spacebars.dot(view.lookup(\".\"), \"name\")\n        }));\n      });\n    })), \"\\n    \" ];\n  }), \"\\n    \", Blaze._TemplateWith(function() {\n    return Spacebars.call(view.lookup(\"afFieldInputAtts\"));\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"afFieldInput\"));\n  }), \"\\n    \", HTML.SPAN({\n    class: \"help-block\"\n  }, Blaze.View(\"lookup:afFieldMessage\", function() {\n    return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"afFieldMessage\"), Spacebars.kw({\n      name: Spacebars.dot(view.lookup(\".\"), \"name\")\n    })));\n  })), \"\\n  \");\n}));\n","bodyAttrs":{}}