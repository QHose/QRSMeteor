{"head":"","body":"","js":"\nTemplate.__checkName(\"sequenceDiagramOverview\");\nTemplate[\"sequenceDiagramOverview\"] = new Template(\"Template.sequenceDiagramOverview\", (function() {\n  var view = this;\n  return HTML.SVG({\n    id: \"mermaidChart0\",\n    width: \"100%\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: \"100%\",\n    style: \"max-width:1300px;\",\n    viewBox: \"-50 -10 1300 1034\"\n  }, \"\\n        \", HTML.STYLE({\n    type: \"text/css\",\n    title: \"mermaid-svg-internal-css\"\n  }, '\\n        /*  */\\n        \\n        *,\\n        ::before,\\n        ::after {\\n            box-sizing: inherit;\\n        }\\n        \\n        .actor {\\n            stroke: rgb(204, 204, 255);\\n            /*fill: rgb(226, 236, 255);*/\\n        }\\n        \\n        text.actor {\\n            fill: black;\\n            stroke: none;\\n            font-size: 12px;\\n        }\\n        \\n        .actor-line {\\n            stroke: grey;\\n        }\\n        \\n        .messageLine0 {\\n            stroke-width: 1.5;\\n            stroke: black;\\n        }\\n        \\n        .messageLine1 {\\n            stroke-width: 1.5;\\n            stroke: black;\\n        }\\n        \\n        #arrowhead {\\n            fill: black;\\n        }\\n        \\n        .messageText {\\n            fill: black;\\n            stroke: none;\\n            font-size: 12px;\\n        }\\n        \\n        .note {\\n            stroke: rgb(204, 204, 255);\\n            fill: rgb(220,220,220);\\n        }\\n        \\n        .noteText {\\n            fill: black;\\n            stroke: none;\\n            font-size: 12px;\\n        }\\n        \\n        .actor {\\n            stroke: rgb(204, 204, 255);\\n            fill: rgb(236, 236, 255);\\n        }\\n        \\n        text.actor {\\n            fill: black;\\n            stroke: none;\\n        }\\n        \\n        .actor-line {\\n            stroke: grey;\\n        }\\n        \\n        .messageLine0 {\\n            stroke-width: 1.5;\\n            stroke: rgb(51, 51, 51);\\n        }\\n        \\n        .messageLine1 {\\n            stroke-width: 1.5;\\n            stroke: rgb(51, 51, 51);\\n        }\\n        \\n        #arrowhead {\\n            fill: rgb(51, 51, 51);\\n        }\\n        \\n        #crosshead path {\\n            fill: rgb(51, 51, 51) !important;\\n            stroke: rgb(51, 51, 51) !important;\\n        }\\n        \\n        .messageText {\\n            fill: rgb(51, 51, 51);\\n            stroke: none;\\n        }\\n        \\n        .note {\\n            /*stroke: rgb(170, 170, 51);*/\\n            fill: rgb(220,220,220);\\n        }\\n        \\n        .noteText {\\n            fill: black;\\n            stroke: none;\\n            font-family: \"trebuchet ms\", verdana, arial;\\n            font-size: 14px;\\n        }\\n        \\n        text {\\n            font-family: \"trebuchet ms\", verdana, arial;\\n            font-size: 14px;\\n        }\\n        /*  */\\n        '), \"\\n        \", HTML.G(), \"\\n        \", HTML.G(\"\\n            \", HTML.LINE({\n    id: \"actor0\",\n    x1: \"75\",\n    y1: \"5\",\n    x2: \"75\",\n    y2: \"1023\",\n    class: \"actor-line\",\n    \"stroke-width\": \"0.5px\",\n    stroke: \"#999\"\n  }), \"\\n            \", HTML.RECT({\n    x: \"0\",\n    y: \"0\",\n    fill: \"#eaeaea\",\n    stroke: \"#666\",\n    width: \"150\",\n    height: \"65\",\n    rx: \"3\",\n    ry: \"3\",\n    class: \"actor\"\n  }), \"\\n            \", HTML.TEXT({\n    x: \"75\",\n    y: \"37.5\",\n    class: \"actor\",\n    style: \"text-anchor: middle;\"\n  }, \"Browser\"), \"\\n        \"), \"\\n        \", HTML.G(\"\\n            \", HTML.LINE({\n    id: \"actor1\",\n    x1: \"275\",\n    y1: \"5\",\n    x2: \"275\",\n    y2: \"1023\",\n    class: \"actor-line\",\n    \"stroke-width\": \"0.5px\",\n    stroke: \"#999\"\n  }), \"\\n            \", HTML.RECT({\n    x: \"200\",\n    y: \"0\",\n    fill: \"#eaeaea\",\n    stroke: \"#666\",\n    width: \"150\",\n    height: \"65\",\n    rx: \"3\",\n    ry: \"3\",\n    class: \"actor\"\n  }), \"\\n            \", HTML.TEXT({\n    x: \"275\",\n    y: \"37.5\",\n    class: \"actor\",\n    style: \"text-anchor: middle;\"\n  }, \"Meteor\"), \"\\n        \"), \"\\n        \", HTML.G(\"\\n            \", HTML.LINE({\n    id: \"actor2\",\n    x1: \"475\",\n    y1: \"5\",\n    x2: \"475\",\n    y2: \"1023\",\n    class: \"actor-line\",\n    \"stroke-width\": \"0.5px\",\n    stroke: \"#999\"\n  }), \"\\n            \", HTML.RECT({\n    x: \"400\",\n    y: \"0\",\n    fill: \"#eaeaea\",\n    stroke: \"#666\",\n    width: \"150\",\n    height: \"65\",\n    rx: \"3\",\n    ry: \"3\",\n    class: \"actor\"\n  }), \"\\n            \", HTML.TEXT({\n    x: \"475\",\n    y: \"37.5\",\n    class: \"actor\",\n    style: \"text-anchor: middle;\"\n  }, \"Generation template\"), \"\\n        \"), \"\\n        \", HTML.G(\"\\n            \", HTML.LINE({\n    id: \"actor3\",\n    x1: \"675\",\n    y1: \"5\",\n    x2: \"675\",\n    y2: \"1023\",\n    class: \"actor-line\",\n    \"stroke-width\": \"0.5px\",\n    stroke: \"#999\"\n  }), \"\\n            \", HTML.RECT({\n    x: \"600\",\n    y: \"0\",\n    fill: \"#eaeaea\",\n    stroke: \"#666\",\n    width: \"150\",\n    height: \"65\",\n    rx: \"3\",\n    ry: \"3\",\n    class: \"actor\"\n  }), \"\\n            \", HTML.TEXT({\n    x: \"675\",\n    y: \"37.5\",\n    class: \"actor\",\n    style: \"text-anchor: middle;\"\n  }, \"Server\"), \"\\n        \"), \"\\n        \", HTML.G(\"\\n            \", HTML.LINE({\n    id: \"actor4\",\n    x1: \"875\",\n    y1: \"5\",\n    x2: \"875\",\n    y2: \"1023\",\n    class: \"actor-line\",\n    \"stroke-width\": \"0.5px\",\n    stroke: \"#999\"\n  }), \"\\n            \", HTML.RECT({\n    x: \"800\",\n    y: \"0\",\n    fill: \"#eaeaea\",\n    stroke: \"#666\",\n    width: \"150\",\n    height: \"65\",\n    rx: \"3\",\n    ry: \"3\",\n    class: \"actor\"\n  }), \"\\n            \", HTML.TEXT({\n    x: \"875\",\n    y: \"37.5\",\n    class: \"actor\",\n    style: \"text-anchor: middle;\"\n  }, \"AppFunctions\"), \"\\n        \"), \"\\n        \", HTML.G(\"\\n            \", HTML.LINE({\n    id: \"actor5\",\n    x1: \"1075\",\n    y1: \"5\",\n    x2: \"1075\",\n    y2: \"1023\",\n    class: \"actor-line\",\n    \"stroke-width\": \"0.5px\",\n    stroke: \"#999\"\n  }), \"\\n            \", HTML.RECT({\n    x: \"1000\",\n    y: \"0\",\n    fill: \"#eaeaea\",\n    stroke: \"#666\",\n    width: \"150\",\n    height: \"65\",\n    rx: \"3\",\n    ry: \"3\",\n    class: \"actor\"\n  }), \"\\n            \", HTML.TEXT({\n    x: \"1075\",\n    y: \"37.5\",\n    class: \"actor\",\n    style: \"text-anchor: middle;\"\n  }, \"Qlik Sense\"), \"\\n        \"), \"\\n        \", HTML.DEFS(\"\\n            \", HTML.MARKER({\n    id: \"arrowhead\",\n    refX: \"5\",\n    refY: \"2\",\n    markerWidth: \"6\",\n    markerHeight: \"4\",\n    orient: \"auto\"\n  }, \"\\n                \", HTML.PATH({\n    d: \"M 0,0 V 4 L6,2 Z\"\n  }), \"\\n            \"), \"\\n        \"), \"\\n        \", HTML.DEFS(\"\\n            \", HTML.MARKER({\n    id: \"crosshead\",\n    markerWidth: \"15\",\n    markerHeight: \"8\",\n    orient: \"auto\",\n    refX: \"16\",\n    refY: \"4\"\n  }, \"\\n                \", HTML.PATH({\n    fill: \"black\",\n    stroke: \"#000000\",\n    \"stroke-width\": \"1px\",\n    d: \"M 9,2 V 6 L16,4 Z\",\n    style: \"stroke-dasharray: 0, 0;\"\n  }), \"\\n                \", HTML.PATH({\n    fill: \"none\",\n    stroke: \"#000000\",\n    \"stroke-width\": \"1px\",\n    d: \"M 0,1 L 6,7 M 6,1 L 0,7\",\n    style: \"stroke-dasharray: 0, 0;\"\n  }), \"\\n            \"), \"\\n        \"), \"\\n        \", HTML.G(\"\\n            \", HTML.TEXT({\n    x: \"175\",\n    y: \"93\",\n    class: \"messageText\",\n    style: \"text-anchor: middle;\"\n  }, \"client\\\\main.js\"), \"\\n            \", HTML.LINE({\n    x1: \"75\",\n    y1: \"100\",\n    x2: \"275\",\n    y2: \"100\",\n    class: \"messageLine0\",\n    \"stroke-width\": \"2\",\n    stroke: \"black\",\n    \"marker-end\": \"url(#arrowhead)\",\n    style: \"fill: none;\"\n  }), \"\\n        \"), \"\\n        \", HTML.G(\"\\n            \", HTML.RECT({\n    x: \"300\",\n    y: \"110\",\n    fill: \"#EDF2AE\",\n    stroke: \"#666\",\n    width: \"300\",\n    height: \"183\",\n    rx: \"0\",\n    ry: \"0\",\n    class: \"note\"\n  }), \"\\n        \"), \"\\n        \", HTML.G(\"\\n            \", HTML.TEXT({\n    x: \"316\",\n    y: \"138\",\n    fill: \"black\",\n    class: \"noteText\"\n  }, \"\\n                \", HTML.TSPAN({\n    x: \"316\"\n  }, \"Browser loads all javacsript from the\"), \"\\n                \", HTML.TSPAN({\n    dy: \"21\",\n    x: \"316\"\n  }, \"demo site. The starting point for the\"), \"\\n                \", HTML.TSPAN({\n    dy: \"21\",\n    x: \"316\"\n  }, \"client is main.js located in client\\\\ folder\"), \"\\n                \", HTML.TSPAN({\n    dy: \"21\",\n    x: \"316\"\n  }, \"(The server code uses server\\\\main.js). It\"), \"\\n                \", HTML.TSPAN({\n    dy: \"21\",\n    x: \"316\"\n  }, \"imports all relevant .js and .html in the\"), \"\\n                \", HTML.TSPAN({\n    dy: \"21\",\n    x: \"316\"\n  }, \"\\\\imports folder including router.js that\"), \"\\n                \", HTML.TSPAN({\n    dy: \"21\",\n    x: \"316\"\n  }, \"maps urls to blaze templates. All\"), \"\\n                \", HTML.TSPAN({\n    dy: \"21\",\n    x: \"316\"\n  }, \"templates are located in imports\\\\ui\"), \"\\n            \"), \"\\n        \"), \"\\n        \", HTML.G(\"\\n            \", HTML.TEXT({\n    x: \"175\",\n    y: \"321\",\n    class: \"messageText\",\n    style: \"text-anchor: middle;\"\n  }, \"show introduction page\"), \"\\n            \", HTML.LINE({\n    x1: \"275\",\n    y1: \"328\",\n    x2: \"75\",\n    y2: \"328\",\n    class: \"messageLine1\",\n    \"stroke-width\": \"2\",\n    stroke: \"black\",\n    \"marker-end\": \"url(#arrowhead)\",\n    style: \"stroke-dasharray: 3, 3; fill: none;\"\n  }), \"\\n        \"), \"\\n        \", HTML.G(\"\\n            \", HTML.TEXT({\n    x: \"175\",\n    y: \"356\",\n    class: \"messageText\",\n    style: \"text-anchor: middle;\"\n  }, \"go to demo which opens \\\\generation page\"), \"\\n            \", HTML.LINE({\n    x1: \"75\",\n    y1: \"363\",\n    x2: \"275\",\n    y2: \"363\",\n    class: \"messageLine0\",\n    \"stroke-width\": \"2\",\n    stroke: \"black\",\n    \"marker-end\": \"url(#arrowhead)\",\n    style: \"fill: none;\"\n  }), \"\\n        \"), \"\\n        \", HTML.G(\"\\n            \", HTML.RECT({\n    x: \"500\",\n    y: \"373\",\n    fill: \"#EDF2AE\",\n    stroke: \"#666\",\n    width: \"300\",\n    height: \"120\",\n    rx: \"0\",\n    ry: \"0\",\n    class: \"note\"\n  }), \"\\n        \"), \"\\n        \", HTML.G(\"\\n            \", HTML.TEXT({\n    x: \"516\",\n    y: \"401\",\n    fill: \"black\",\n    class: \"noteText\"\n  }, \"\\n                \", HTML.TSPAN({\n    x: \"516\"\n  }, \"Each Template has a file.js with the same\"), \"\\n                \", HTML.TSPAN({\n    dy: \"21\",\n    x: \"516\"\n  }, \"name as the template. In the JS the\"), \"\\n                \", HTML.TSPAN({\n    dy: \"21\",\n    x: \"516\"\n  }, \"(click) event handling takes place and the\"), \"\\n                \", HTML.TSPAN({\n    dy: \"21\",\n    x: \"516\"\n  }, \"helpers already format and get the data\"), \"\\n                \", HTML.TSPAN({\n    dy: \"21\",\n    x: \"516\"\n  }, \"via the server side of Meteor from Sense.\"), \"\\n            \"), \"\\n        \"), \"\\n        \", HTML.G(\"\\n            \", HTML.TEXT({\n    x: \"375\",\n    y: \"521\",\n    class: \"messageText\",\n    style: \"text-anchor: middle;\"\n  }, \"open layout template, helpers and events\"), \"\\n            \", HTML.LINE({\n    x1: \"275\",\n    y1: \"528\",\n    x2: \"475\",\n    y2: \"528\",\n    class: \"messageLine0\",\n    \"stroke-width\": \"2\",\n    stroke: \"black\",\n    \"marker-end\": \"url(#arrowhead)\",\n    style: \"fill: none;\"\n  }), \"\\n        \"), \"\\n        \", HTML.G(\"\\n            \", HTML.TEXT({\n    x: \"575\",\n    y: \"556\",\n    class: \"messageText\",\n    style: \"text-anchor: middle;\"\n  }, 'Meteor.call(\"getApps\") the server has methods for each function.'), \"\\n            \", HTML.LINE({\n    x1: \"475\",\n    y1: \"563\",\n    x2: \"675\",\n    y2: \"563\",\n    class: \"messageLine0\",\n    \"stroke-width\": \"2\",\n    stroke: \"black\",\n    \"marker-end\": \"url(#arrowhead)\",\n    style: \"fill: none;\"\n  }), \"\\n        \"), \"\\n        \", HTML.G(\"\\n            \", HTML.TEXT({\n    x: \"775\",\n    y: \"591\",\n    class: \"messageText\",\n    style: \"text-anchor: middle;\"\n  }, \"AppFunctions.getApps()\"), \"\\n            \", HTML.LINE({\n    x1: \"675\",\n    y1: \"598\",\n    x2: \"875\",\n    y2: \"598\",\n    class: \"messageLine0\",\n    \"stroke-width\": \"2\",\n    stroke: \"black\",\n    \"marker-end\": \"url(#arrowhead)\",\n    style: \"fill: none;\"\n  }), \"\\n        \"), \"\\n        \", HTML.G(\"\\n            \", HTML.RECT({\n    x: \"900\",\n    y: \"608\",\n    fill: \"#EDF2AE\",\n    stroke: \"#666\",\n    width: \"300\",\n    height: \"225\",\n    rx: \"0\",\n    ry: \"0\",\n    class: \"note\"\n  }), \"\\n        \"), \"\\n        \", HTML.G(\"\\n            \", HTML.TEXT({\n    x: \"916\",\n    y: \"636\",\n    fill: \"black\",\n    class: \"noteText\"\n  }, \"\\n                \", HTML.TSPAN({\n    x: \"916\"\n  }, \"Meteor server side communicates with\"), \"\\n                \", HTML.TSPAN({\n    dy: \"21\",\n    x: \"916\"\n  }, \"Qlik Sense using QRS REST and engine\"), \"\\n                \", HTML.TSPAN({\n    dy: \"21\",\n    x: \"916\"\n  }, \"(qsocks) API for reloads. All calls between\"), \"\\n                \", HTML.TSPAN({\n    dy: \"21\",\n    x: \"916\"\n  }, \"Meteor and Sense go via js in\"), \"\\n                \", HTML.TSPAN({\n    dy: \"21\",\n    x: \"916\"\n  }, \"imports\\\\api\\\\server. The meteor server side\"), \"\\n                \", HTML.TSPAN({\n    dy: \"21\",\n    x: \"916\"\n  }, \"functions that communicate with Qlik\"), \"\\n                \", HTML.TSPAN({\n    dy: \"21\",\n    x: \"916\"\n  }, \"Sense are categorized per Sense resource\"), \"\\n                \", HTML.TSPAN({\n    dy: \"21\",\n    x: \"916\"\n  }, \"type. There is a seperate file for QPS,\"), \"\\n                \", HTML.TSPAN({\n    dy: \"21\",\n    x: \"916\"\n  }, \"apps, streams, system rules\"), \"\\n                \", HTML.TSPAN({\n    dy: \"21\",\n    x: \"916\"\n  }, \"communication.\"), \"\\n            \"), \"\\n        \"), \"\\n        \", HTML.G(\"\\n            \", HTML.TEXT({\n    x: \"975\",\n    y: \"861\",\n    class: \"messageText\",\n    style: \"text-anchor: middle;\"\n  }, \"connect to Sense\\\\qrs\\\\app\\\\full\"), \"\\n            \", HTML.LINE({\n    x1: \"875\",\n    y1: \"868\",\n    x2: \"1075\",\n    y2: \"868\",\n    class: \"messageLine0\",\n    \"stroke-width\": \"2\",\n    stroke: \"black\",\n    \"marker-end\": \"url(#arrowhead)\",\n    style: \"fill: none;\"\n  }), \"\\n        \"), \"\\n        \", HTML.G(\"\\n            \", HTML.TEXT({\n    x: \"775\",\n    y: \"896\",\n    class: \"messageText\",\n    style: \"text-anchor: middle;\"\n  }, \"app list in JSON format\"), \"\\n            \", HTML.LINE({\n    x1: \"1075\",\n    y1: \"903\",\n    x2: \"475\",\n    y2: \"903\",\n    class: \"messageLine1\",\n    \"stroke-width\": \"2\",\n    stroke: \"black\",\n    \"marker-end\": \"url(#arrowhead)\",\n    style: \"stroke-dasharray: 3, 3; fill: none;\"\n  }), \"\\n        \"), \"\\n        \", HTML.G(\"\\n            \", HTML.TEXT({\n    x: \"275\",\n    y: \"931\",\n    class: \"messageText\",\n    style: \"text-anchor: middle;\"\n  }, 'for each \"app\" print name etc.'), \"\\n            \", HTML.LINE({\n    x1: \"475\",\n    y1: \"938\",\n    x2: \"75\",\n    y2: \"938\",\n    class: \"messageLine1\",\n    \"stroke-width\": \"2\",\n    stroke: \"black\",\n    \"marker-end\": \"url(#arrowhead)\",\n    style: \"stroke-dasharray: 3, 3; fill: none;\"\n  }), \"\\n        \"), \"\\n        \", HTML.G(\"\\n            \", HTML.RECT({\n    x: \"0\",\n    y: \"958\",\n    fill: \"#eaeaea\",\n    stroke: \"#666\",\n    width: \"150\",\n    height: \"65\",\n    rx: \"3\",\n    ry: \"3\",\n    class: \"actor\"\n  }), \"\\n            \", HTML.TEXT({\n    x: \"75\",\n    y: \"995.5\",\n    class: \"actor\",\n    style: \"text-anchor: middle;\"\n  }, \"Browser\"), \"\\n        \"), \"\\n        \", HTML.G(\"\\n            \", HTML.RECT({\n    x: \"200\",\n    y: \"958\",\n    fill: \"#eaeaea\",\n    stroke: \"#666\",\n    width: \"150\",\n    height: \"65\",\n    rx: \"3\",\n    ry: \"3\",\n    class: \"actor\"\n  }), \"\\n            \", HTML.TEXT({\n    x: \"275\",\n    y: \"995.5\",\n    class: \"actor\",\n    style: \"text-anchor: middle;\"\n  }, \"Meteor\"), \"\\n        \"), \"\\n        \", HTML.G(\"\\n            \", HTML.RECT({\n    x: \"400\",\n    y: \"958\",\n    fill: \"#eaeaea\",\n    stroke: \"#666\",\n    width: \"150\",\n    height: \"65\",\n    rx: \"3\",\n    ry: \"3\",\n    class: \"actor\"\n  }), \"\\n            \", HTML.TEXT({\n    x: \"475\",\n    y: \"995.5\",\n    class: \"actor\",\n    style: \"text-anchor: middle;\"\n  }, \"Generation template\"), \"\\n        \"), \"\\n        \", HTML.G(\"\\n            \", HTML.RECT({\n    x: \"600\",\n    y: \"958\",\n    fill: \"#eaeaea\",\n    stroke: \"#666\",\n    width: \"150\",\n    height: \"65\",\n    rx: \"3\",\n    ry: \"3\",\n    class: \"actor\"\n  }), \"\\n            \", HTML.TEXT({\n    x: \"675\",\n    y: \"995.5\",\n    class: \"actor\",\n    style: \"text-anchor: middle;\"\n  }, \"Server\"), \"\\n        \"), \"\\n        \", HTML.G(\"\\n            \", HTML.RECT({\n    x: \"800\",\n    y: \"958\",\n    fill: \"#eaeaea\",\n    stroke: \"#666\",\n    width: \"150\",\n    height: \"65\",\n    rx: \"3\",\n    ry: \"3\",\n    class: \"actor\"\n  }), \"\\n            \", HTML.TEXT({\n    x: \"875\",\n    y: \"995.5\",\n    class: \"actor\",\n    style: \"text-anchor: middle;\"\n  }, \"AppFunctions\"), \"\\n        \"), \"\\n        \", HTML.G(\"\\n            \", HTML.RECT({\n    x: \"1000\",\n    y: \"958\",\n    fill: \"#eaeaea\",\n    stroke: \"#666\",\n    width: \"150\",\n    height: \"65\",\n    rx: \"3\",\n    ry: \"3\",\n    class: \"actor\"\n  }), \"\\n            \", HTML.TEXT({\n    x: \"1075\",\n    y: \"995.5\",\n    class: \"actor\",\n    style: \"text-anchor: middle;\"\n  }, \"Qlik Sense\"), \"\\n        \"), \"\\n    \");\n}));\n\nTemplate.__checkName(\"sequenceDiagramGeneration\");\nTemplate[\"sequenceDiagramGeneration\"] = new Template(\"Template.sequenceDiagramGeneration\", (function() {\n  var view = this;\n  return HTML.SVG({\n    id: \"mermaidChart32\",\n    width: \"100%\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: \"100%\",\n    style: \"max-width:1850px;\",\n    viewBox: \"-50 -10 1850 1963.0625\"\n  }, HTML.STYLE({\n    type: \"text/css\",\n    title: \"mermaid-svg-internal-css\"\n  }, '/*  */\\n*, ::before, ::after { box-sizing: inherit;}\\n.actor { stroke: rgb(204, 204, 255); /*fill: rgb(226, 236, 255);*/}\\ntext.actor { fill: black; stroke: none; font-size: 12px;}\\n.actor-line { stroke: grey;}\\n.messageLine0 { stroke-width: 1.5; stroke: black;}\\n.messageLine1 { stroke-width: 1.5; stroke: black;}\\n#arrowhead { fill: black;}\\n.messageText { fill: black; stroke: none; font-size: 12px;}\\n.note { stroke: rgb(204, 204, 255); fill: rgb(220,220,220);}\\n.noteText { fill: black; stroke: none; font-size: 12px;}\\n.actor { stroke: rgb(204, 204, 255); fill: rgb(236, 236, 255);}\\ntext.actor { fill: black; stroke: none;}\\n.actor-line { stroke: grey;}\\n.messageLine0 { stroke-width: 1.5; stroke: rgb(51, 51, 51);}\\n.messageLine1 { stroke-width: 1.5; stroke: rgb(51, 51, 51);}\\n#arrowhead { fill: rgb(51, 51, 51);}\\n#crosshead path { fill: rgb(51, 51, 51) !important; stroke: rgb(51, 51, 51) !important;}\\n.messageText { fill: rgb(51, 51, 51); stroke: none;}\\n.note { /*stroke: rgb(170, 170, 51);*/ fill: rgb(220,220,220);}\\n.noteText { fill: black; stroke: none; font-family: \"trebuchet ms\", verdana, arial; font-size: 14px;}\\ntext { font-family: \"trebuchet ms\", verdana, arial; font-size: 14px;}\\n/*  */\\n'), HTML.G(), HTML.G(HTML.LINE({\n    id: \"actor288\",\n    x1: \"75\",\n    y1: \"5\",\n    x2: \"75\",\n    y2: \"1952.0625\",\n    class: \"actor-line\",\n    \"stroke-width\": \"0.5px\",\n    stroke: \"#999\"\n  }), HTML.RECT({\n    x: \"0\",\n    y: \"0\",\n    fill: \"#eaeaea\",\n    stroke: \"#666\",\n    width: \"150\",\n    height: \"65\",\n    rx: \"3\",\n    ry: \"3\",\n    class: \"actor\"\n  }), HTML.TEXT({\n    x: \"75\",\n    y: \"37.5\",\n    class: \"actor\",\n    style: \"text-anchor: middle;\"\n  }, \"Browser\")), HTML.G(HTML.LINE({\n    id: \"actor289\",\n    x1: \"275\",\n    y1: \"5\",\n    x2: \"275\",\n    y2: \"1952.0625\",\n    class: \"actor-line\",\n    \"stroke-width\": \"0.5px\",\n    stroke: \"#999\"\n  }), HTML.RECT({\n    x: \"200\",\n    y: \"0\",\n    fill: \"#eaeaea\",\n    stroke: \"#666\",\n    width: \"150\",\n    height: \"65\",\n    rx: \"3\",\n    ry: \"3\",\n    class: \"actor\"\n  }), HTML.TEXT({\n    x: \"275\",\n    y: \"37.5\",\n    class: \"actor\",\n    style: \"text-anchor: middle;\"\n  }, \"Meteor\")), HTML.G(HTML.LINE({\n    id: \"actor290\",\n    x1: \"475\",\n    y1: \"5\",\n    x2: \"475\",\n    y2: \"1952.0625\",\n    class: \"actor-line\",\n    \"stroke-width\": \"0.5px\",\n    stroke: \"#999\"\n  }), HTML.RECT({\n    x: \"400\",\n    y: \"0\",\n    fill: \"#eaeaea\",\n    stroke: \"#666\",\n    width: \"150\",\n    height: \"65\",\n    rx: \"3\",\n    ry: \"3\",\n    class: \"actor\"\n  }), HTML.TEXT({\n    x: \"475\",\n    y: \"37.5\",\n    class: \"actor\",\n    style: \"text-anchor: middle;\"\n  }, \"Generation template\")), HTML.G(HTML.LINE({\n    id: \"actor291\",\n    x1: \"675\",\n    y1: \"5\",\n    x2: \"675\",\n    y2: \"1952.0625\",\n    class: \"actor-line\",\n    \"stroke-width\": \"0.5px\",\n    stroke: \"#999\"\n  }), HTML.RECT({\n    x: \"600\",\n    y: \"0\",\n    fill: \"#eaeaea\",\n    stroke: \"#666\",\n    width: \"150\",\n    height: \"65\",\n    rx: \"3\",\n    ry: \"3\",\n    class: \"actor\"\n  }), HTML.TEXT({\n    x: \"675\",\n    y: \"37.5\",\n    class: \"actor\",\n    style: \"text-anchor: middle;\"\n  }, \"OEMPartner template\")), HTML.G(HTML.LINE({\n    id: \"actor292\",\n    x1: \"875\",\n    y1: \"5\",\n    x2: \"875\",\n    y2: \"1952.0625\",\n    class: \"actor-line\",\n    \"stroke-width\": \"0.5px\",\n    stroke: \"#999\"\n  }), HTML.RECT({\n    x: \"800\",\n    y: \"0\",\n    fill: \"#eaeaea\",\n    stroke: \"#666\",\n    width: \"150\",\n    height: \"65\",\n    rx: \"3\",\n    ry: \"3\",\n    class: \"actor\"\n  }), HTML.TEXT({\n    x: \"875\",\n    y: \"37.5\",\n    class: \"actor\",\n    style: \"text-anchor: middle;\"\n  }, \"Server\")), HTML.G(HTML.LINE({\n    id: \"actor293\",\n    x1: \"1075\",\n    y1: \"5\",\n    x2: \"1075\",\n    y2: \"1952.0625\",\n    class: \"actor-line\",\n    \"stroke-width\": \"0.5px\",\n    stroke: \"#999\"\n  }), HTML.RECT({\n    x: \"1000\",\n    y: \"0\",\n    fill: \"#eaeaea\",\n    stroke: \"#666\",\n    width: \"150\",\n    height: \"65\",\n    rx: \"3\",\n    ry: \"3\",\n    class: \"actor\"\n  }), HTML.TEXT({\n    x: \"1075\",\n    y: \"37.5\",\n    class: \"actor\",\n    style: \"text-anchor: middle;\"\n  }, \"AppFunctions\")), HTML.G(HTML.LINE({\n    id: \"actor294\",\n    x1: \"1275\",\n    y1: \"5\",\n    x2: \"1275\",\n    y2: \"1952.0625\",\n    class: \"actor-line\",\n    \"stroke-width\": \"0.5px\",\n    stroke: \"#999\"\n  }), HTML.RECT({\n    x: \"1200\",\n    y: \"0\",\n    fill: \"#eaeaea\",\n    stroke: \"#666\",\n    width: \"150\",\n    height: \"65\",\n    rx: \"3\",\n    ry: \"3\",\n    class: \"actor\"\n  }), HTML.TEXT({\n    x: \"1275\",\n    y: \"37.5\",\n    class: \"actor\",\n    style: \"text-anchor: middle;\"\n  }, \"Qlik Sense QRS API\")), HTML.G(HTML.LINE({\n    id: \"actor295\",\n    x1: \"1475\",\n    y1: \"5\",\n    x2: \"1475\",\n    y2: \"1952.0625\",\n    class: \"actor-line\",\n    \"stroke-width\": \"0.5px\",\n    stroke: \"#999\"\n  }), HTML.RECT({\n    x: \"1400\",\n    y: \"0\",\n    fill: \"#eaeaea\",\n    stroke: \"#666\",\n    width: \"150\",\n    height: \"65\",\n    rx: \"3\",\n    ry: \"3\",\n    class: \"actor\"\n  }), HTML.TEXT({\n    x: \"1475\",\n    y: \"37.5\",\n    class: \"actor\",\n    style: \"text-anchor: middle;\"\n  }, \"QSocks engine API wrapper\")), HTML.G(HTML.LINE({\n    id: \"actor296\",\n    x1: \"1675\",\n    y1: \"5\",\n    x2: \"1675\",\n    y2: \"1952.0625\",\n    class: \"actor-line\",\n    \"stroke-width\": \"0.5px\",\n    stroke: \"#999\"\n  }), HTML.RECT({\n    x: \"1600\",\n    y: \"0\",\n    fill: \"#eaeaea\",\n    stroke: \"#666\",\n    width: \"150\",\n    height: \"65\",\n    rx: \"3\",\n    ry: \"3\",\n    class: \"actor\"\n  }), HTML.TEXT({\n    x: \"1675\",\n    y: \"37.5\",\n    class: \"actor\",\n    style: \"text-anchor: middle;\"\n  }, \"Engine API\")), HTML.DEFS(HTML.MARKER({\n    id: \"arrowhead\",\n    refX: \"5\",\n    refY: \"2\",\n    markerWidth: \"6\",\n    markerHeight: \"4\",\n    orient: \"auto\"\n  }, HTML.PATH({\n    d: \"M 0,0 V 4 L6,2 Z\"\n  }))), HTML.DEFS(HTML.MARKER({\n    id: \"crosshead\",\n    markerWidth: \"15\",\n    markerHeight: \"8\",\n    orient: \"auto\",\n    refX: \"16\",\n    refY: \"4\"\n  }, HTML.PATH({\n    fill: \"black\",\n    stroke: \"#000000\",\n    \"stroke-width\": \"1px\",\n    d: \"M 9,2 V 6 L16,4 Z\",\n    style: \"stroke-dasharray: 0, 0;\"\n  }), HTML.PATH({\n    fill: \"none\",\n    stroke: \"#000000\",\n    \"stroke-width\": \"1px\",\n    d: \"M 0,1 L 6,7 M 6,1 L 0,7\",\n    style: \"stroke-dasharray: 0, 0;\"\n  }))), HTML.G(HTML.TEXT({\n    x: \"175\",\n    y: \"93\",\n    class: \"messageText\",\n    style: \"text-anchor: middle;\"\n  }, \"request introduction page\"), HTML.LINE({\n    x1: \"75\",\n    y1: \"100\",\n    x2: \"275\",\n    y2: \"100\",\n    class: \"messageLine0\",\n    \"stroke-width\": \"2\",\n    stroke: \"black\",\n    \"marker-end\": \"url(#arrowhead)\",\n    style: \"fill: none;\"\n  })), HTML.G(HTML.TEXT({\n    x: \"175\",\n    y: \"128\",\n    class: \"messageText\",\n    style: \"text-anchor: middle;\"\n  }, 'click \"demo\" button which opens \\\\generation page'), HTML.LINE({\n    x1: \"75\",\n    y1: \"135\",\n    x2: \"275\",\n    y2: \"135\",\n    class: \"messageLine0\",\n    \"stroke-width\": \"2\",\n    stroke: \"black\",\n    \"marker-end\": \"url(#arrowhead)\",\n    style: \"fill: none;\"\n  })), HTML.G(HTML.TEXT({\n    x: \"375\",\n    y: \"163\",\n    class: \"messageText\",\n    style: \"text-anchor: middle;\"\n  }, \"open generation.html and.js in \\\\imports\\\\ui\"), HTML.LINE({\n    x1: \"275\",\n    y1: \"170\",\n    x2: \"475\",\n    y2: \"170\",\n    class: \"messageLine0\",\n    \"stroke-width\": \"2\",\n    stroke: \"black\",\n    \"marker-end\": \"url(#arrowhead)\",\n    style: \"fill: none;\"\n  })), HTML.G(HTML.RECT({\n    x: \"500\",\n    y: \"180\",\n    fill: \"#EDF2AE\",\n    stroke: \"#666\",\n    width: \"300\",\n    height: \"204.0625\",\n    rx: \"0\",\n    ry: \"0\",\n    class: \"note\"\n  })), HTML.G(HTML.TEXT({\n    x: \"516\",\n    y: \"208\",\n    fill: \"black\",\n    class: \"noteText\"\n  }, HTML.TSPAN({\n    x: \"516\"\n  }, \"Generation template consists of multiple\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"516\"\n  }, \"sub templates to keep things organized.\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"516\"\n  }, \"Key templates are OEMpartner.html,\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"516\"\n  }, \"which consist of multiple smaller ones.\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"516\"\n  }, \"The 2 app and streams tables on the right\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"516\"\n  }, \"are populated via the\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"516\"\n  }, \"Template.generation.helpers in\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"516\"\n  }, \"generation.js (appSettings,\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"516\"\n  }, \"streamSettings).\"))), HTML.G(HTML.TEXT({\n    x: \"575\",\n    y: \"412.0625\",\n    class: \"messageText\",\n    style: \"text-anchor: middle;\"\n  }, \"includes OEMPartner.html\"), HTML.LINE({\n    x1: \"475\",\n    y1: \"419.0625\",\n    x2: \"675\",\n    y2: \"419.0625\",\n    class: \"messageLine0\",\n    \"stroke-width\": \"2\",\n    stroke: \"black\",\n    \"marker-end\": \"url(#arrowhead)\",\n    style: \"fill: none;\"\n  })), HTML.G(HTML.RECT({\n    x: \"700\",\n    y: \"429.0625\",\n    fill: \"#EDF2AE\",\n    stroke: \"#666\",\n    width: \"300\",\n    height: \"267\",\n    rx: \"0\",\n    ry: \"0\",\n    class: \"note\"\n  })), HTML.G(HTML.TEXT({\n    x: \"716\",\n    y: \"457\",\n    fill: \"black\",\n    class: \"noteText\"\n  }, HTML.TSPAN({\n    x: \"716\"\n  }, \"the OEM partner template is the left side\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"716\"\n  }, \"of the screen if you open the \\\\generation\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"716\"\n  }, \"page. This page has a lot of if then\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"716\"\n  }, \"statements to react to the current step of\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"716\"\n  }, \"the process. For example, if the user\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"716\"\n  }, \"inserts a customer, the screen should\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"716\"\n  }, 'update to reflect step 2: \"select'), HTML.TSPAN({\n    dy: \"21\",\n    x: \"716\"\n  }, 'template\". The logic is calculated in the'), HTML.TSPAN({\n    dy: \"21\",\n    x: \"716\"\n  }, \"helper in UIHelpers.js, the template uses\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"716\"\n  }, 'the \"spacebars/handlebars syntax\" to show'), HTML.TSPAN({\n    dy: \"21\",\n    x: \"716\"\n  }, \"or not. For example -if readyToGenerate-\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"716\"\n  }, \"show a div with texts and buttons. -/if-\"))), HTML.G(HTML.TEXT({\n    x: \"375\",\n    y: \"724.0625\",\n    class: \"messageText\",\n    style: \"text-anchor: middle;\"\n  }, \"show generation page\"), HTML.LINE({\n    x1: \"675\",\n    y1: \"731.0625\",\n    x2: \"75\",\n    y2: \"731.0625\",\n    class: \"messageLine1\",\n    \"stroke-width\": \"2\",\n    stroke: \"black\",\n    \"marker-end\": \"url(#arrowhead)\",\n    style: \"stroke-dasharray: 3, 3; fill: none;\"\n  })), HTML.G(HTML.TEXT({\n    x: \"375\",\n    y: \"759.0625\",\n    class: \"messageText\",\n    style: \"text-anchor: middle;\"\n  }, \"click generate\"), HTML.LINE({\n    x1: \"75\",\n    y1: \"766.0625\",\n    x2: \"675\",\n    y2: \"766.0625\",\n    class: \"messageLine0\",\n    \"stroke-width\": \"2\",\n    stroke: \"black\",\n    \"marker-end\": \"url(#arrowhead)\",\n    style: \"fill: none;\"\n  })), HTML.G(HTML.RECT({\n    x: \"500\",\n    y: \"776.0625\",\n    fill: \"#EDF2AE\",\n    stroke: \"#666\",\n    width: \"300\",\n    height: \"120\",\n    rx: \"0\",\n    ry: \"0\",\n    class: \"note\"\n  })), HTML.G(HTML.TEXT({\n    x: \"516\",\n    y: \"804\",\n    fill: \"black\",\n    class: \"noteText\"\n  }, HTML.TSPAN({\n    x: \"516\"\n  }, 'User presses the \"generate\" button which'), HTML.TSPAN({\n    dy: \"21\",\n    x: \"516\"\n  }, \"fires a click generateStreamAndApp event.\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"516\"\n  }, \"This event is captured in the\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"516\"\n  }, \"Template.OEMPartner.events function in\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"516\"\n  }, \"OEMPartner.js.\"))), HTML.G(HTML.TEXT({\n    x: \"775\",\n    y: \"924.0625\",\n    class: \"messageText\",\n    style: \"text-anchor: middle;\"\n  }, \"Meteor.call('generateStreamAndApp', selectedCustomers,...).\"), HTML.LINE({\n    x1: \"675\",\n    y1: \"931.0625\",\n    x2: \"875\",\n    y2: \"931.0625\",\n    class: \"messageLine0\",\n    \"stroke-width\": \"2\",\n    stroke: \"black\",\n    \"marker-end\": \"url(#arrowhead)\",\n    style: \"fill: none;\"\n  })), HTML.G(HTML.RECT({\n    x: \"900\",\n    y: \"941.0625\",\n    fill: \"#EDF2AE\",\n    stroke: \"#666\",\n    width: \"300\",\n    height: \"246\",\n    rx: \"0\",\n    ry: \"0\",\n    class: \"note\"\n  })), HTML.G(HTML.TEXT({\n    x: \"916\",\n    y: \"969\",\n    fill: \"black\",\n    class: \"noteText\"\n  }, HTML.TSPAN({\n    x: \"916\"\n  }, \"server\\\\main.js is the key entrypoint of the\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"916\"\n  }, \"server side of this Meteor based demo\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"916\"\n  }, \"platform. this file has a function\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"916\"\n  }, \"Meteor.methods with a function\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"916\"\n  }, \"generateStreamAndApp(customers) which\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"916\"\n  }, \"calls -\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"916\"\n  }, \"QSApp.generateStreamAndApp(customers)\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"916\"\n  }, \"to clean up all previously generated stuff\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"916\"\n  }, \"and then\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"916\"\n  }, \"QSApp.generateStreamAndApp(customers)\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"916\"\n  }, \"to start the generation\"))), HTML.G(HTML.TEXT({\n    x: \"975\",\n    y: \"1215.0625\",\n    class: \"messageText\",\n    style: \"text-anchor: middle;\"\n  }, \"QSApp.generateStreamAndApp(customers)\"), HTML.LINE({\n    x1: \"875\",\n    y1: \"1222.0625\",\n    x2: \"1075\",\n    y2: \"1222.0625\",\n    class: \"messageLine0\",\n    \"stroke-width\": \"2\",\n    stroke: \"black\",\n    \"marker-end\": \"url(#arrowhead)\",\n    style: \"fill: none;\"\n  })), HTML.G(HTML.RECT({\n    x: \"1100\",\n    y: \"1232.0625\",\n    fill: \"#EDF2AE\",\n    stroke: \"#666\",\n    width: \"300\",\n    height: \"225\",\n    rx: \"0\",\n    ry: \"0\",\n    class: \"note\"\n  })), HTML.G(HTML.TEXT({\n    x: \"1116\",\n    y: \"1260\",\n    fill: \"black\",\n    class: \"noteText\"\n  }, HTML.TSPAN({\n    x: \"1116\"\n  }, \"Meteor server side communicates with\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"1116\"\n  }, \"Qlik Sense using QRS REST and engine\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"1116\"\n  }, \"(qsocks) API for reloads. All calls between\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"1116\"\n  }, \"Meteor and Sense go via js in\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"1116\"\n  }, \"imports\\\\api\\\\server. The meteor server side\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"1116\"\n  }, \"functions that communicate with Qlik\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"1116\"\n  }, \"Sense are categorized per Sense resource\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"1116\"\n  }, \"type. There is a seperate file for QPS,\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"1116\"\n  }, \"apps, streams, system rules\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"1116\"\n  }, \"communication.\"))), HTML.G(HTML.TEXT({\n    x: \"1175\",\n    y: \"1485.0625\",\n    class: \"messageText\",\n    style: \"text-anchor: middle;\"\n  }, \"create stream (if not yet exist)\"), HTML.LINE({\n    x1: \"1075\",\n    y1: \"1492.0625\",\n    x2: \"1275\",\n    y2: \"1492.0625\",\n    class: \"messageLine0\",\n    \"stroke-width\": \"2\",\n    stroke: \"black\",\n    \"marker-end\": \"url(#arrowhead)\",\n    style: \"fill: none;\"\n  })), HTML.G(HTML.TEXT({\n    x: \"1175\",\n    y: \"1520.0625\",\n    class: \"messageText\",\n    style: \"text-anchor: middle;\"\n  }, \"copy app\"), HTML.LINE({\n    x1: \"1075\",\n    y1: \"1527.0625\",\n    x2: \"1275\",\n    y2: \"1527.0625\",\n    class: \"messageLine0\",\n    \"stroke-width\": \"2\",\n    stroke: \"black\",\n    \"marker-end\": \"url(#arrowhead)\",\n    style: \"fill: none;\"\n  })), HTML.G(HTML.TEXT({\n    x: \"1275\",\n    y: \"1555.0625\",\n    class: \"messageText\",\n    style: \"text-anchor: middle;\"\n  }, \"use QSocks to connect to engine API.\"), HTML.LINE({\n    x1: \"1075\",\n    y1: \"1562.0625\",\n    x2: \"1475\",\n    y2: \"1562.0625\",\n    class: \"messageLine0\",\n    \"stroke-width\": \"2\",\n    stroke: \"black\",\n    \"marker-end\": \"url(#arrowhead)\",\n    style: \"fill: none;\"\n  })), HTML.G(HTML.TEXT({\n    x: \"1575\",\n    y: \"1590.0625\",\n    class: \"messageText\",\n    style: \"text-anchor: middle;\"\n  }, \"open app\"), HTML.LINE({\n    x1: \"1475\",\n    y1: \"1597.0625\",\n    x2: \"1675\",\n    y2: \"1597.0625\",\n    class: \"messageLine0\",\n    \"stroke-width\": \"2\",\n    stroke: \"black\",\n    \"marker-end\": \"url(#arrowhead)\",\n    style: \"fill: none;\"\n  })), HTML.G(HTML.TEXT({\n    x: \"1575\",\n    y: \"1625.0625\",\n    class: \"messageText\",\n    style: \"text-anchor: middle;\"\n  }, \"get script\"), HTML.LINE({\n    x1: \"1475\",\n    y1: \"1632.0625\",\n    x2: \"1675\",\n    y2: \"1632.0625\",\n    class: \"messageLine0\",\n    \"stroke-width\": \"2\",\n    stroke: \"black\",\n    \"marker-end\": \"url(#arrowhead)\",\n    style: \"fill: none;\"\n  })), HTML.G(HTML.TEXT({\n    x: \"1575\",\n    y: \"1660.0625\",\n    class: \"messageText\",\n    style: \"text-anchor: middle;\"\n  }, \"replace script (e.g. replace database conn.)\"), HTML.LINE({\n    x1: \"1475\",\n    y1: \"1667.0625\",\n    x2: \"1675\",\n    y2: \"1667.0625\",\n    class: \"messageLine0\",\n    \"stroke-width\": \"2\",\n    stroke: \"black\",\n    \"marker-end\": \"url(#arrowhead)\",\n    style: \"fill: none;\"\n  })), HTML.G(HTML.TEXT({\n    x: \"1575\",\n    y: \"1695.0625\",\n    class: \"messageText\",\n    style: \"text-anchor: middle;\"\n  }, \"reload app\"), HTML.LINE({\n    x1: \"1475\",\n    y1: \"1702.0625\",\n    x2: \"1675\",\n    y2: \"1702.0625\",\n    class: \"messageLine0\",\n    \"stroke-width\": \"2\",\n    stroke: \"black\",\n    \"marker-end\": \"url(#arrowhead)\",\n    style: \"fill: none;\"\n  })), HTML.G(HTML.TEXT({\n    x: \"1175\",\n    y: \"1730.0625\",\n    class: \"messageText\",\n    style: \"text-anchor: middle;\"\n  }, \"Publish app into \", HTML.CharRef({\n    html: \"&lt;\",\n    str: \"<\"\n  }), \"customer name\", HTML.CharRef({\n    html: \"&gt;\",\n    str: \">\"\n  }), \" stream\"), HTML.LINE({\n    x1: \"1075\",\n    y1: \"1737.0625\",\n    x2: \"1275\",\n    y2: \"1737.0625\",\n    class: \"messageLine0\",\n    \"stroke-width\": \"2\",\n    stroke: \"black\",\n    \"marker-end\": \"url(#arrowhead)\",\n    style: \"fill: none;\"\n  })), HTML.G(HTML.RECT({\n    x: \"100\",\n    y: \"1747.0625\",\n    fill: \"#EDF2AE\",\n    stroke: \"#666\",\n    width: \"300\",\n    height: \"120\",\n    rx: \"0\",\n    ry: \"0\",\n    class: \"note\"\n  })), HTML.G(HTML.TEXT({\n    x: \"116\",\n    y: \"1775\",\n    fill: \"black\",\n    class: \"noteText\"\n  }, HTML.TSPAN({\n    x: \"116\"\n  }, \"The webpage automatically updates\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"116\"\n  }, \"because we registered a notification event\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"116\"\n  }, \"in the Qlik Sense QRS - notification API.\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"116\"\n  }, \"This API will give a signal to Meteor if we\"), HTML.TSPAN({\n    dy: \"21\",\n    x: \"116\"\n  }, \"can get the fresh app and stream lists.\"))), HTML.G(HTML.RECT({\n    x: \"0\",\n    y: \"1887.0625\",\n    fill: \"#eaeaea\",\n    stroke: \"#666\",\n    width: \"150\",\n    height: \"65\",\n    rx: \"3\",\n    ry: \"3\",\n    class: \"actor\"\n  }), HTML.TEXT({\n    x: \"75\",\n    y: \"1924.5625\",\n    class: \"actor\",\n    style: \"text-anchor: middle;\"\n  }, \"Browser\")), HTML.G(HTML.RECT({\n    x: \"200\",\n    y: \"1887.0625\",\n    fill: \"#eaeaea\",\n    stroke: \"#666\",\n    width: \"150\",\n    height: \"65\",\n    rx: \"3\",\n    ry: \"3\",\n    class: \"actor\"\n  }), HTML.TEXT({\n    x: \"275\",\n    y: \"1924.5625\",\n    class: \"actor\",\n    style: \"text-anchor: middle;\"\n  }, \"Meteor\")), HTML.G(HTML.RECT({\n    x: \"400\",\n    y: \"1887.0625\",\n    fill: \"#eaeaea\",\n    stroke: \"#666\",\n    width: \"150\",\n    height: \"65\",\n    rx: \"3\",\n    ry: \"3\",\n    class: \"actor\"\n  }), HTML.TEXT({\n    x: \"475\",\n    y: \"1924.5625\",\n    class: \"actor\",\n    style: \"text-anchor: middle;\"\n  }, \"Generation template\")), HTML.G(HTML.RECT({\n    x: \"600\",\n    y: \"1887.0625\",\n    fill: \"#eaeaea\",\n    stroke: \"#666\",\n    width: \"150\",\n    height: \"65\",\n    rx: \"3\",\n    ry: \"3\",\n    class: \"actor\"\n  }), HTML.TEXT({\n    x: \"675\",\n    y: \"1924.5625\",\n    class: \"actor\",\n    style: \"text-anchor: middle;\"\n  }, \"OEMPartner template\")), HTML.G(HTML.RECT({\n    x: \"800\",\n    y: \"1887.0625\",\n    fill: \"#eaeaea\",\n    stroke: \"#666\",\n    width: \"150\",\n    height: \"65\",\n    rx: \"3\",\n    ry: \"3\",\n    class: \"actor\"\n  }), HTML.TEXT({\n    x: \"875\",\n    y: \"1924.5625\",\n    class: \"actor\",\n    style: \"text-anchor: middle;\"\n  }, \"Server\")), HTML.G(HTML.RECT({\n    x: \"1000\",\n    y: \"1887.0625\",\n    fill: \"#eaeaea\",\n    stroke: \"#666\",\n    width: \"150\",\n    height: \"65\",\n    rx: \"3\",\n    ry: \"3\",\n    class: \"actor\"\n  }), HTML.TEXT({\n    x: \"1075\",\n    y: \"1924.5625\",\n    class: \"actor\",\n    style: \"text-anchor: middle;\"\n  }, \"AppFunctions\")), HTML.G(HTML.RECT({\n    x: \"1200\",\n    y: \"1887.0625\",\n    fill: \"#eaeaea\",\n    stroke: \"#666\",\n    width: \"150\",\n    height: \"65\",\n    rx: \"3\",\n    ry: \"3\",\n    class: \"actor\"\n  }), HTML.TEXT({\n    x: \"1275\",\n    y: \"1924.5625\",\n    class: \"actor\",\n    style: \"text-anchor: middle;\"\n  }, \"Qlik Sense QRS API\")), HTML.G(HTML.RECT({\n    x: \"1400\",\n    y: \"1887.0625\",\n    fill: \"#eaeaea\",\n    stroke: \"#666\",\n    width: \"150\",\n    height: \"65\",\n    rx: \"3\",\n    ry: \"3\",\n    class: \"actor\"\n  }), HTML.TEXT({\n    x: \"1475\",\n    y: \"1924.5625\",\n    class: \"actor\",\n    style: \"text-anchor: middle;\"\n  }, \"QSocks engine API wrapper\")), HTML.G(HTML.RECT({\n    x: \"1600\",\n    y: \"1887.0625\",\n    fill: \"#eaeaea\",\n    stroke: \"#666\",\n    width: \"150\",\n    height: \"65\",\n    rx: \"3\",\n    ry: \"3\",\n    class: \"actor\"\n  }), HTML.TEXT({\n    x: \"1675\",\n    y: \"1924.5625\",\n    class: \"actor\",\n    style: \"text-anchor: middle;\"\n  }, \"Engine API\")));\n}));\n","bodyAttrs":{}}