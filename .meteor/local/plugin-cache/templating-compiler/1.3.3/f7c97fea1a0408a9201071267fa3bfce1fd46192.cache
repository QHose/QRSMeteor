{"head":"","body":"","js":"\nTemplate.__checkName(\"SSBILayout\");\nTemplate[\"SSBILayout\"] = new Template(\"Template.SSBILayout\", (function() {\n  var view = this;\n  return [ Blaze._TemplateWith(function() {\n    return \"nav\";\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"yield\"));\n  }), \"\\n    \", HTML.DIV({\n    class: \"ui grid\",\n    style: \"margin: 10px\"\n  }, \"\\n        \", Spacebars.include(view.lookupTemplate(\"sAlert\")), \"\\n        \", HTML.DIV({\n    class: \"four wide column\",\n    style: \"max-width: 400px;\"\n  }, Blaze._TemplateWith(function() {\n    return \"aside\";\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"yield\"));\n  })), \"\\n        \", HTML.DIV({\n    class: \"twelve wide column\"\n  }, Spacebars.include(view.lookupTemplate(\"yield\"))), \"\\n    \") ];\n}));\n\nTemplate.__checkName(\"SSBISenseApp\");\nTemplate[\"SSBISenseApp\"] = new Template(\"Template.SSBISenseApp\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"show\"));\n  }, function() {\n    return [ \" \", Spacebars.include(view.lookupTemplate(\"SSBISenseIFrame\")), \" \" ];\n  });\n}));\n\nTemplate.__checkName(\"SSBISenseIFrame\");\nTemplate[\"SSBISenseIFrame\"] = new Template(\"Template.SSBISenseIFrame\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"IFrameSense\"\n  }, \"\\n        \", HTML.IFRAME({\n    class: \"SSBIIFrame\",\n    src: function() {\n      return Spacebars.mustache(view.lookup(\"appURL\"));\n    }\n  }), \"\\n    \");\n}));\n\nTemplate.__checkName(\"SSBIUsers\");\nTemplate[\"SSBIUsers\"] = new Template(\"Template.SSBIUsers\", (function() {\n  var view = this;\n  return [ HTML.H4({\n    class: \"ui dividing header\",\n    style: \"position: relative;\\n    left: -13px; margin-top: 20px;\"\n  }, \"Users: \", Blaze.View(\"lookup:currentUser\", function() {\n    return Spacebars.mustache(view.lookup(\"currentUser\"));\n  })), \"\\n    \", HTML.DIV({\n    class: \"ui  grid userList\"\n  }, \"\\n        \", HTML.DIV({\n    class: \"ui text loader\"\n  }, \"Logging in \", Blaze.View(\"lookup:user\", function() {\n    return Spacebars.mustache(view.lookup(\"user\"));\n  }), \"...\"), \"\\n        \", Spacebars.include(view.lookupTemplate(\"userCards\")), \"\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"showSenseButtons\"));\n  }, function() {\n    return [ \"\\n        \", HTML.DIV({\n      class: \"ui row\"\n    }, \"\\n        \", Spacebars.include(view.lookupTemplate(\"senseButtons\")), \"\\n    \"), \"\\n        \" ];\n  }), \"\\n    \"), \"\\n    \", Spacebars.include(view.lookupTemplate(\"modalSSBI\")), HTML.Raw('\\n    <h4 class=\"ui dividing header\">What are we trying to demonstrate here?</h4>\\n\\n    '), HTML.DIV({\n    class: \"ui message\"\n  }, \"\\n        \", HTML.Raw('<i class=\"unlock alternate icon\"></i>'), '\\n        Here we demonstrate the effect of applying different access rights (derived\\n        from your platform) for some fictitious\\n        users. Qlik on a user to automatically login into Qlik Sense \"as this user\". John can analyse data in predefined sheets and apps. He can only see\\n        Germany. Linda can create her own sheets in predefined apps. She can only see\\n        USA. Paul can maintain apps and sheets of his own department in the Qlik\\n        Management Console (QMC). Martin can create his own sheets and apps and can display all countries. ', HTML.Raw(\"<br>\"), HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw('<!-- <div class=\"ui accordion\"> -->'), \"\\n            \", HTML.Raw('<!-- <div class=\"title\">\\n                <i class=\"dropdown icon\"></i>Read more...\\n            </div> -->'), \"\\n            \", HTML.DIV({\n    class: \"content\"\n  }, \"\\n                \", HTML.Raw('<h5 class=\"ui dividing header\">Resource restriction</h5>'), \"\\n                \", HTML.P(\"The main goal is to show you how you can create a solid governed\\n                    \", HTML.Raw('<a href=\"#\" class=\"selfservice\">self service</a>'), \" (segregation of duties) concept to prevent\\n                    unrealiable reporting. A key control here is\\n                    the use of an approval workflow before content is made available to all users (of a department).\\n                    Example\\n                    \", HTML.A({\n    target: \"_blank\",\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"doc_sec_function_task_matrix\"));\n    }\n  }, \"functions and tasks\"), \" to segregate\\n                    using the\\n                    \", HTML.A({\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"pathFor\"), \"securityRules\");\n    },\n    target: \"_blank\",\n    class: \"item\"\n  }, \"security rules\"), \" are:\\n                \", HTML.Raw(\"<ul>\\n                    <li>analyze (display) apps</li>\\n                    <li>create own sheets</li>\\n                    <li>create own apps</li>\\n                    <li>publish into stream/community</li>\\n                    <li>maintain the Qlik management console (QMC)</li>\\n                </ul>\"), \"\\n                \"), \"\\n                \", HTML.Raw('<h5 class=\"ui dividing header\">Data restriction (row/column level security)</h5>'), \"\\n                \", HTML.Raw(\"<p>Youâ€™ll see a simple solution in our demonstration where both of our fictitious users, Linda and John,\\n                    go to the\\n                    same website, but see different things based on their authorizations. Qlik Sense makes this possible\\n                    because\\n                    it uses a dynamic, attribute-based security approach in which we re-use all the pre-existing users\\n                    and roles\\n                    from your SaaS platform or any other user provider like Windows AD or SAML. This ensures Qlik Sense\\n                    stays\\n                    in sync automatically and avoids the overhead of double maintenance.</p>\"), \"\\n                \", HTML.Raw('<h5 class=\"ui dividing header\">Single Sign On via ticket exchange</h5>'), \"\\n                \", HTML.P(HTML.Raw(\"We forward the identity of the user from your SaaS platform to Qlik Sense via a ticket. A ticket\\n                    contains the\\n                    userId and his auhtorizations (groups). These groups can be used to restrict resources as well as\\n                    data (rows\\n                    &amp; columns). Try to switch a user and see the ticket request in the\\n                    \"), HTML.A({\n    target: \"\",\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"pathFor\"), \"ApiLogsTable\");\n    }\n  }, \"API Logs\"), \".\"), \"\\n                \", HTML.Raw(\"<p></p>\"), \"\\n                \", HTML.Raw('<img class=\"ui small image\" alt=\"\" data-action=\"zoom\" src=\"images/flow - ticketing authentication for dummies.png\" style=\"margin:20px\">'), \"\\n                \", HTML.Raw(\"<p></p>\"), \"\\n                \", HTML.Raw('<h5 class=\"ui dividing header\">Integrated authorization overview</h5>'), \"\\n                \", HTML.Raw(\"<!-- <p>  -->\"), \"\\n                \", HTML.Raw('<img class=\"ui small image\" alt=\"\" data-action=\"zoom\" src=\"images/securityOverview.png\" style=\"margin:20px\">'), \"\\n                \", HTML.Raw(\"<!-- </p> -->\"), \"\\n            \"), \"\\n        \", HTML.Raw(\"<!-- </div> -->\"), \"\\n    \") ];\n}));\n\nTemplate.__checkName(\"senseButtons\");\nTemplate[\"senseButtons\"] = new Template(\"Template.senseButtons\", (function() {\n  var view = this;\n  return HTML.Raw('<h4 class=\"ui dividing header\">Select Qlik Sense page</h4>\\n    <div class=\"ui blue button box-content\" style=\"margin-bottom: 129px;\">\\n        <nav role=\"presentation\" aria-label=\"Main Navigation\" class=\"\" id=\"flyoutnavkbfixed\">\\n            <ul>\\n                <li class=\"has-submenu\">\\n                    <a href=\"#flyoutnavkbfixed\" aria-expanded=\"false\" aria-haspopup=\"true\" id=\"bodyDropdown\">Which page do you want to embed?</a>\\n                    <ul class=\"selectRole\">\\n                        <!-- <li><a class=\"hub\" href=\"#\" >Hub</a></li> -->\\n                        <li><a href=\"#\" class=\"sheet\">App</a></li>\\n                        <li><a href=\"#\" class=\"app\">Sheet</a></li>\\n                        <li><a href=\"#\" class=\"QMC\">QMC</a></li>\\n                    </ul>\\n                </li>\\n            </ul>\\n        </nav>\\n    </div>\\n<!-- \\n    <ul role=\"menubar\" aria-label=\"functions\" id=\"appmenu\">\\n        <li class=\"hub\" role=\"menuitem\"> <a href=\"\">Hub</a> </li>\\n        <li class=\"sheet\" role=\"menuitem\"><a href=\"\">App</a> </li>\\n        <li class=\"app\" role=\"menuitem\"><a href=\"\">Sheet</a></li>\\n        <li class=\"QMC\" role=\"menuitem\"><a href=\"\">QMC</a></li>\\n    </ul> -->');\n}));\n\nTemplate.__checkName(\"userCards\");\nTemplate[\"userCards\"] = new Template(\"Template.userCards\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"ui blue button box-content\" style=\"margin-bottom: 129px; margin-top: 12px;\">\\n        <nav role=\"presentation\" aria-label=\"Main Navigation\" class=\"\" id=\"flyoutnavkbfixed\">\\n            <ul>\\n                <li class=\"has-submenu\">\\n                    <a href=\"#flyoutnavkbfixed\" aria-expanded=\"false\" aria-haspopup=\"true\" id=\"bodyDropdown\">Select your user</a>\\n                    <ul class=\"selectRole\">\\n                        <li><a class=\"consumer\" href=\"#\">John - Consumer - Germany</a></li>\\n                        <li><a href=\"#\" class=\"contributor\">Linda - Contributor - US</a></li>\\n                        <li><a href=\"#\" class=\"developer\">Martin - Developer - Everything</a></li>\\n                        <li><a href=\"#\" class=\"admin\">Paul - Admin</a></li>\\n                    </ul>\\n                </li>\\n            </ul>\\n        </nav>\\n    </div>');\n}));\n","bodyAttrs":{}}