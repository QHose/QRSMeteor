{"head":"","body":"","js":"\nTemplate.__checkName(\"atInput\");\nTemplate[\"atInput\"] = new Template(\"Template.atInput\", (function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return {\n      template: Spacebars.call(view.lookup(\"templateName\"))\n    };\n  }, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(Template.__dynamic);\n    });\n  });\n}));\n\nTemplate.__checkName(\"atTextInput\");\nTemplate[\"atTextInput\"] = new Template(\"Template.atTextInput\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: function() {\n      return [ \"at-input \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"required\"));\n      }, function() {\n        return \" required \";\n      }), \" \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"isValidating\"));\n      }, function() {\n        return \" validating \";\n      }), \" \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"hasError\"));\n      }, function() {\n        return \" error \";\n      }), \" field\" ];\n    }\n  }, \"\\n    \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"showLabels\"));\n  }, function() {\n    return [ \"\\n      \", HTML.LABEL(\"\\n        \", Blaze.View(\"lookup:displayName\", function() {\n      return Spacebars.mustache(view.lookup(\"displayName\"));\n    }), \"\\n      \"), \"\\n    \" ];\n  }), \"\\n    \", HTML.DIV({\n    class: function() {\n      return [ \"ui fluid input icon \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"isValidating\"));\n      }, function() {\n        return \" loading \";\n      }) ];\n    }\n  }, \"\\n      \", HTML.INPUT(HTML.Attrs({\n    type: function() {\n      return Spacebars.mustache(view.lookup(\"type\"));\n    },\n    id: function() {\n      return [ \"at-field-\", Spacebars.mustache(view.lookup(\"_id\")) ];\n    },\n    name: function() {\n      return [ \"at-field-\", Spacebars.mustache(view.lookup(\"_id\")) ];\n    },\n    placeholder: function() {\n      return Spacebars.mustache(view.lookup(\"placeholder\"));\n    },\n    autocapitalize: \"none\",\n    autocorrect: \"off\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"disabled\"));\n  })), \"\\n      \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"hasIcon\"));\n  }, function() {\n    return [ \"\\n        \", HTML.I({\n      class: function() {\n        return [ Spacebars.mustache(view.lookup(\"iconClass\")), \" icon\" ];\n      }\n    }), \"\\n      \" ];\n  }), \"\\n    \"), \"\\n    \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"hasError\"));\n  }, function() {\n    return [ \"\\n      \", HTML.DIV({\n      class: \"ui red pointing label\"\n    }, Blaze.View(\"lookup:errorText\", function() {\n      return Spacebars.mustache(view.lookup(\"errorText\"));\n    })), \"\\n    \" ];\n  }), \"\\n  \");\n}));\n\nTemplate.__checkName(\"atCheckboxInput\");\nTemplate[\"atCheckboxInput\"] = new Template(\"Template.atCheckboxInput\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"at-input inline field\"\n  }, \"\\n    \", HTML.DIV({\n    class: \"ui toggle checkbox\"\n  }, \"\\n      \", HTML.INPUT(HTML.Attrs({\n    type: function() {\n      return Spacebars.mustache(view.lookup(\"type\"));\n    },\n    id: function() {\n      return [ \"at-field-\", Spacebars.mustache(view.lookup(\"_id\")) ];\n    },\n    name: function() {\n      return [ \"at-field-\", Spacebars.mustache(view.lookup(\"_id\")) ];\n    },\n    tabindex: \"0\",\n    class: \"hidden\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"disabled\"));\n  })), \"\\n      \", HTML.LABEL({\n    for: function() {\n      return [ \"at-field-\", Spacebars.mustache(view.lookup(\"_id\")) ];\n    }\n  }, Blaze.View(\"lookup:displayName\", function() {\n    return Spacebars.mustache(view.lookup(\"displayName\"));\n  })), \"\\n    \"), \"\\n  \");\n}));\n\nTemplate.__checkName(\"atSelectInput\");\nTemplate[\"atSelectInput\"] = new Template(\"Template.atSelectInput\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: function() {\n      return [ \"at-input \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"required\"));\n      }, function() {\n        return \" required \";\n      }), \" \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"hasError\"));\n      }, function() {\n        return \" error \";\n      }), \" field\" ];\n    }\n  }, \"\\n    \", HTML.LABEL(Blaze.View(\"lookup:displayName\", function() {\n    return Spacebars.mustache(view.lookup(\"displayName\"));\n  })), \"\\n    \", HTML.DIV({\n    class: \"ui fluid selection dropdown\"\n  }, \"\\n      \", HTML.INPUT({\n    type: \"hidden\",\n    id: function() {\n      return [ \"at-field-\", Spacebars.mustache(view.lookup(\"_id\")) ];\n    },\n    name: function() {\n      return [ \"at-field-\", Spacebars.mustache(view.lookup(\"_id\")) ];\n    }\n  }), \"\\n      \", HTML.DIV({\n    class: \"default text\"\n  }, Blaze.View(\"lookup:displayName\", function() {\n    return Spacebars.mustache(view.lookup(\"displayName\"));\n  })), \"\\n      \", HTML.Raw('<i class=\"dropdown icon\"></i>'), \"\\n      \", HTML.DIV({\n    class: \"menu\"\n  }, \"\\n        \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"values\"));\n  }, function() {\n    return [ \"\\n          \", HTML.DIV({\n      class: \"item\",\n      \"data-value\": function() {\n        return Spacebars.mustache(view.lookup(\"value\"));\n      }\n    }, Blaze.View(\"lookup:text\", function() {\n      return Spacebars.mustache(view.lookup(\"text\"));\n    })), \"\\n        \" ];\n  }), \"\\n      \"), \"\\n    \"), \"\\n    \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"hasError\"));\n  }, function() {\n    return [ \"\\n      \", HTML.DIV({\n      class: \"at-wrap\"\n    }, \"\\n        \", HTML.DIV({\n      class: \"ui large red pointing label\"\n    }, Blaze.View(\"lookup:errorText\", function() {\n      return Spacebars.mustache(view.lookup(\"errorText\"));\n    })), \"\\n      \"), \"\\n    \" ];\n  }), \"\\n  \");\n}));\n\nTemplate.__checkName(\"atRadioInput\");\nTemplate[\"atRadioInput\"] = new Template(\"Template.atRadioInput\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"grouped fields\"\n  }, \"\\n    \", HTML.LABEL(Blaze.View(\"lookup:displayName\", function() {\n    return Spacebars.mustache(view.lookup(\"displayName\"));\n  })), \"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"values\"));\n  }, function() {\n    return [ \"\\n      \", HTML.DIV({\n      class: \"at-input field\"\n    }, \"\\n        \", HTML.DIV({\n      class: \"ui radio checkbox\"\n    }, \"\\n          \", HTML.INPUT({\n      id: function() {\n        return [ \"at-field-\", Spacebars.mustache(view.lookup(\"id\")), \"-choice-\", Spacebars.mustache(view.lookup(\"value\")) ];\n      },\n      type: \"radio\",\n      name: function() {\n        return [ \"at-field-\", Spacebars.mustache(view.lookup(\"id\")) ];\n      },\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"value\"));\n      },\n      tabindex: \"0\",\n      class: \"hidden\"\n    }), \"\\n          \", HTML.LABEL({\n      for: function() {\n        return [ \"at-field-\", Spacebars.mustache(view.lookup(\"id\")), \"-choice-\", Spacebars.mustache(view.lookup(\"value\")) ];\n      }\n    }, Blaze.View(\"lookup:text\", function() {\n      return Spacebars.mustache(view.lookup(\"text\"));\n    })), \"\\n        \"), \"\\n      \"), \"\\n    \" ];\n  }), \"\\n  \");\n}));\n\nTemplate.__checkName(\"atHiddenInput\");\nTemplate[\"atHiddenInput\"] = new Template(\"Template.atHiddenInput\", (function() {\n  var view = this;\n  return HTML.INPUT({\n    type: \"hidden\",\n    id: function() {\n      return [ \"at-field-\", Spacebars.mustache(view.lookup(\"_id\")) ];\n    },\n    name: function() {\n      return [ \"at-field-\", Spacebars.mustache(view.lookup(\"_id\")) ];\n    }\n  });\n}));\n","bodyAttrs":{}}