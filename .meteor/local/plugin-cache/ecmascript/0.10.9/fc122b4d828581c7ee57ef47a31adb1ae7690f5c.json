{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"packages/accounts-password/email_tests_setup.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/accounts-password/email_tests_setup.js","filename":"packages/accounts-password/email_tests_setup.js","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/martijn/Documents/GitHub/QRSMeteor","root":"/home/martijn/Documents/GitHub/QRSMeteor","presets":[],"generatorOpts":{"filename":"packages/accounts-password/email_tests_setup.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/accounts-password/email_tests_setup.js"}},"code":"//\n// a mechanism to intercept emails sent to addressing including\n// the string \"intercept\", storing them in an array that can then\n// be retrieved using the getInterceptedEmails method\n//\nvar interceptedEmails = {}; // (email address) -> (array of options)\n// add html email templates that just contain the url\n\nAccounts.emailTemplates.resetPassword.html = Accounts.emailTemplates.enrollAccount.html = Accounts.emailTemplates.verifyEmail.html = function (user, url) {\n  return url;\n}; // override the from address\n\n\nAccounts.emailTemplates.resetPassword.from = Accounts.emailTemplates.enrollAccount.from = Accounts.emailTemplates.verifyEmail.from = function (user) {\n  return 'test@meteor.com';\n}; // add a custom header to check against\n\n\nAccounts.emailTemplates.headers = {\n  'My-Custom-Header': 'Cool'\n};\nEmailTest.hookSend(function (options) {\n  var to = options.to;\n\n  if (!to || to.toUpperCase().indexOf('INTERCEPT') === -1) {\n    return true; // go ahead and send\n  } else {\n    if (!interceptedEmails[to]) interceptedEmails[to] = [];\n    interceptedEmails[to].push(options);\n    return false; // skip sending\n  }\n});\nMeteor.methods({\n  getInterceptedEmails: function (email) {\n    check(email, String);\n    return interceptedEmails[email];\n  },\n  addEmailForTestAndVerify: function (email) {\n    check(email, String);\n    Meteor.users.update({\n      _id: this.userId\n    }, {\n      $push: {\n        emails: {\n          address: email,\n          verified: false\n        }\n      }\n    });\n    Accounts.sendVerificationEmail(this.userId, email);\n  },\n  createUserOnServer: function (email) {\n    check(email, String);\n    var userId = Accounts.createUser({\n      email: email\n    });\n    Accounts.sendEnrollmentEmail(userId);\n    return Meteor.users.findOne(userId);\n  }\n});","map":{"version":3,"sources":["packages/accounts-password/email_tests_setup.js"],"names":["interceptedEmails","Accounts","emailTemplates","resetPassword","html","enrollAccount","verifyEmail","user","url","from","headers","EmailTest","hookSend","options","to","toUpperCase","indexOf","push","Meteor","methods","getInterceptedEmails","email","check","String","addEmailForTestAndVerify","users","update","_id","userId","$push","emails","address","verified","sendVerificationEmail","createUserOnServer","createUser","sendEnrollmentEmail","findOne"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,IAAIA,oBAAoB,EAAxB,C,CAA4B;AAE5B;;AACAC,SAASC,cAAT,CAAwBC,aAAxB,CAAsCC,IAAtC,GACEH,SAASC,cAAT,CAAwBG,aAAxB,CAAsCD,IAAtC,GACAH,SAASC,cAAT,CAAwBI,WAAxB,CAAoCF,IAApC,GAA2C,UAAUG,IAAV,EAAgBC,GAAhB,EAAqB;AAC9D,SAAOA,GAAP;AACD,CAJH,C,CAMA;;;AACAP,SAASC,cAAT,CAAwBC,aAAxB,CAAsCM,IAAtC,GACER,SAASC,cAAT,CAAwBG,aAAxB,CAAsCI,IAAtC,GACER,SAASC,cAAT,CAAwBI,WAAxB,CAAoCG,IAApC,GAA2C,UAAUF,IAAV,EAAgB;AACzD,SAAO,iBAAP;AACD,CAJL,C,CAMA;;;AACAN,SAASC,cAAT,CAAwBQ,OAAxB,GAAkC;AAChC,sBAAqB;AADW,CAAlC;AAIAC,UAAUC,QAAV,CAAmB,UAAUC,OAAV,EAAmB;AACpC,MAAIC,KAAKD,QAAQC,EAAjB;;AACA,MAAI,CAACA,EAAD,IAAOA,GAAGC,WAAH,GAAiBC,OAAjB,CAAyB,WAAzB,MAA0C,CAAC,CAAtD,EAAyD;AACvD,WAAO,IAAP,CADuD,CAC1C;AACd,GAFD,MAEO;AACL,QAAI,CAAChB,kBAAkBc,EAAlB,CAAL,EACEd,kBAAkBc,EAAlB,IAAwB,EAAxB;AAEFd,sBAAkBc,EAAlB,EAAsBG,IAAtB,CAA2BJ,OAA3B;AACA,WAAO,KAAP,CALK,CAKS;AACf;AACF,CAXD;AAaAK,OAAOC,OAAP,CAAe;AACbC,wBAAsB,UAAUC,KAAV,EAAiB;AACrCC,UAAMD,KAAN,EAAaE,MAAb;AACA,WAAOvB,kBAAkBqB,KAAlB,CAAP;AACD,GAJY;AAMbG,4BAA0B,UAAUH,KAAV,EAAiB;AACzCC,UAAMD,KAAN,EAAaE,MAAb;AACAL,WAAOO,KAAP,CAAaC,MAAb,CACE;AAACC,WAAK,KAAKC;AAAX,KADF,EAEE;AAACC,aAAO;AAACC,gBAAQ;AAACC,mBAASV,KAAV;AAAiBW,oBAAU;AAA3B;AAAT;AAAR,KAFF;AAGA/B,aAASgC,qBAAT,CAA+B,KAAKL,MAApC,EAA4CP,KAA5C;AACD,GAZY;AAcba,sBAAoB,UAAUb,KAAV,EAAiB;AACnCC,UAAMD,KAAN,EAAaE,MAAb;AACA,QAAIK,SAAS3B,SAASkC,UAAT,CAAoB;AAACd,aAAOA;AAAR,KAApB,CAAb;AACApB,aAASmC,mBAAT,CAA6BR,MAA7B;AACA,WAAOV,OAAOO,KAAP,CAAaY,OAAb,CAAqBT,MAArB,CAAP;AACD;AAnBY,CAAf","sourcesContent":["//\n// a mechanism to intercept emails sent to addressing including\n// the string \"intercept\", storing them in an array that can then\n// be retrieved using the getInterceptedEmails method\n//\nvar interceptedEmails = {}; // (email address) -> (array of options)\n\n// add html email templates that just contain the url\nAccounts.emailTemplates.resetPassword.html =\n  Accounts.emailTemplates.enrollAccount.html =\n  Accounts.emailTemplates.verifyEmail.html = function (user, url) {\n    return url;\n  };\n\n// override the from address\nAccounts.emailTemplates.resetPassword.from =\n  Accounts.emailTemplates.enrollAccount.from =\n    Accounts.emailTemplates.verifyEmail.from = function (user) {\n      return 'test@meteor.com';\n    };\n\n// add a custom header to check against\nAccounts.emailTemplates.headers = {\n  'My-Custom-Header' : 'Cool'\n};\n\nEmailTest.hookSend(function (options) {\n  var to = options.to;\n  if (!to || to.toUpperCase().indexOf('INTERCEPT') === -1) {\n    return true; // go ahead and send\n  } else {\n    if (!interceptedEmails[to])\n      interceptedEmails[to] = [];\n\n    interceptedEmails[to].push(options);\n    return false; // skip sending\n  }\n});\n\nMeteor.methods({\n  getInterceptedEmails: function (email) {\n    check(email, String);\n    return interceptedEmails[email];\n  },\n\n  addEmailForTestAndVerify: function (email) {\n    check(email, String);\n    Meteor.users.update(\n      {_id: this.userId},\n      {$push: {emails: {address: email, verified: false}}});\n    Accounts.sendVerificationEmail(this.userId, email);\n  },\n\n  createUserOnServer: function (email) {\n    check(email, String);\n    var userId = Accounts.createUser({email: email});\n    Accounts.sendEnrollmentEmail(userId);\n    return Meteor.users.findOne(userId);\n  }\n});\n"]},"sourceType":"script","hash":"fc122b4d828581c7ee57ef47a31adb1ae7690f5c"}
