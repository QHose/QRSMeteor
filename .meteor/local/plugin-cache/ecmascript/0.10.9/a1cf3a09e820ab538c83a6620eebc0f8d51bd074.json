{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"server/publications.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"server/publications.js","filename":"server/publications.js","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/martijn/Documents/GitHub/QRSMeteor","root":"/home/martijn/Documents/GitHub/QRSMeteor","presets":[],"generatorOpts":{"filename":"server/publications.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/publications.js"}},"code":"let Apps, TemplateApps, GeneratedResources;\nmodule.watch(require(\"/imports/api/apps\"), {\n  Apps(v) {\n    Apps = v;\n  },\n\n  TemplateApps(v) {\n    TemplateApps = v;\n  },\n\n  GeneratedResources(v) {\n    GeneratedResources = v;\n  }\n\n}, 0);\nlet Streams;\nmodule.watch(require(\"/imports/api/streams\"), {\n  Streams(v) {\n    Streams = v;\n  }\n\n}, 1);\nlet Customers;\nmodule.watch(require(\"/imports/api/customers\"), {\n  Customers(v) {\n    Customers = v;\n  }\n\n}, 2);\nlet APILogs;\nmodule.watch(require(\"/imports/api/APILogs\"), {\n  APILogs(v) {\n    APILogs = v;\n  }\n\n}, 3);\nlet Logger, SenseSelections;\nmodule.watch(require(\"/imports/api/logger\"), {\n  Logger(v) {\n    Logger = v;\n  },\n\n  SenseSelections(v) {\n    SenseSelections = v;\n  }\n\n}, 4);\nlet moment;\nmodule.watch(require(\"moment\"), {\n  default(v) {\n    moment = v;\n  }\n\n}, 5);\nMeteor.publish('Logger', function () {\n  return Logger.find();\n  this.ready();\n}); // Meteor.publish('SenseSelections', function() {\n//     return SenseSelections.find({ 'userId': this.userId });\n//     this.ready();\n// });\n//only fill the local mongoDB that runs in the browser with data that belongs to the user...\n//https://www.meteor.com/tutorials/blaze/publish-and-subscribe\n\nMeteor.publish('apps', function (generatedAppsFromUser) {\n  if (Roles.userIsInRole(this.userId, ['admin'], Roles.GLOBAL_GROUP)) {\n    return Apps.find();\n  } else {\n    //console.log('Client subscribed to collection, with these generated app ids: ', generatedAppsFromUser);\n    if (!generatedAppsFromUser) {\n      generatedAppsFromUser = []; // console.log('##### No generated resources exists yet, so only show the template apps')\n    } else {// console.log('### publication recevied these generated app ids for the user: ', generatedAppsFromUser);\n      }\n\n    return Apps.find({\n      $or: [{\n        \"id\": {\n          \"$in\": generatedAppsFromUser\n        }\n      }, {\n        \"stream.name\": \"Templates\" //, { \"stream.name\": \"Everyone\" }\n\n      }]\n    });\n  }\n\n  this.ready();\n});\nMeteor.publish('streams', function (generatedStreamsFromUser) {\n  if (Roles.userIsInRole(this.userId, ['admin'], Roles.GLOBAL_GROUP)) {\n    return Streams.find();\n  } else {\n    if (!generatedStreamsFromUser) {\n      generatedStreamsFromUser = [];\n    }\n\n    return Streams.find({\n      $or: [{\n        \"id\": {\n          \"$in\": generatedStreamsFromUser\n        }\n      }, {\n        \"name\": \"Templates\" //, { \"name\": \"Everyone\" }\n\n      }]\n    });\n  }\n\n  this.ready();\n});\nMeteor.publish('templateApps', function () {\n  return TemplateApps.find({\n    'generationUserId': this.userId\n  });\n  this.ready();\n});\nMeteor.publish('generatedResources', function () {\n  return GeneratedResources.find({\n    'generationUserId': this.userId\n  });\n  this.ready();\n});\nMeteor.publish('customers', function () {\n  return Customers.find({\n    'generationUserId': this.userId\n  });\n  this.ready();\n});\nMeteor.publish('apiLogs', function () {\n  // const selector = {\n  //     \"createDate\": {\n  //         $lt: new Date(),\n  //         $gte: new Date(new Date().setDate(new Date().getDate() - 0.05))  //show only the last hour  of api logs\n  //     }\n  //};\n  //     today: function() {\n  //     var now = moment().toDate();\n  //     return Posts.find({createdAt : { $gte : now }});\n  // }\n  const selector = {\n    sort: {\n      createDate: -1\n    },\n    limit: 15\n  };\n  return APILogs.find({\n    'generationUserId': this.userId\n  }, selector);\n  this.ready();\n});\nMeteor.publish('users', function () {\n  //See https://github.com/alanning/meteor-roles\n  if (Roles.userIsInRole(this.userId, ['admin'], Roles.GLOBAL_GROUP)) {\n    return Meteor.users.find();\n  } else {\n    // user not authorized. do not publish secrets\n    this.stop();\n    return;\n  }\n});","map":{"version":3,"sources":["server/publications.js"],"names":["Apps","TemplateApps","GeneratedResources","module","watch","require","v","Streams","Customers","APILogs","Logger","SenseSelections","moment","default","Meteor","publish","find","ready","generatedAppsFromUser","Roles","userIsInRole","userId","GLOBAL_GROUP","$or","generatedStreamsFromUser","selector","sort","createDate","limit","users","stop"],"mappings":"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","sourcesContent":["//import meteor collections\nimport { Apps, TemplateApps, GeneratedResources } from '/imports/api/apps';\nimport { Streams } from '/imports/api/streams';\nimport { Customers } from '/imports/api/customers';\nimport { APILogs } from '/imports/api/APILogs';\nimport { Logger, SenseSelections } from '/imports/api/logger';\nimport moment from 'moment';\n\n\n\nMeteor.publish('Logger', function() {\n    return Logger.find();\n    this.ready();\n});\n\n// Meteor.publish('SenseSelections', function() {\n//     return SenseSelections.find({ 'userId': this.userId });\n//     this.ready();\n// });\n\n//only fill the local mongoDB that runs in the browser with data that belongs to the user...\n//https://www.meteor.com/tutorials/blaze/publish-and-subscribe\nMeteor.publish('apps', function(generatedAppsFromUser) {\n    if (Roles.userIsInRole(this.userId, ['admin'], Roles.GLOBAL_GROUP)) {\n        return Apps.find();\n\n    } else {\n        //console.log('Client subscribed to collection, with these generated app ids: ', generatedAppsFromUser);\n        if (!generatedAppsFromUser) {\n            generatedAppsFromUser = [];\n            // console.log('##### No generated resources exists yet, so only show the template apps')\n        } else {\n            // console.log('### publication recevied these generated app ids for the user: ', generatedAppsFromUser);\n        }\n        return Apps.find({\n            $or: [{ \"id\": { \"$in\": generatedAppsFromUser } }, { \"stream.name\": \"Templates\" } //, { \"stream.name\": \"Everyone\" }\n            ]\n        });\n    }\n    this.ready();\n});\n\nMeteor.publish('streams', function(generatedStreamsFromUser) {\n    if (Roles.userIsInRole(this.userId, ['admin'], Roles.GLOBAL_GROUP)) {\n        return Streams.find();\n\n    } else {\n        if (!generatedStreamsFromUser) {\n            generatedStreamsFromUser = [];\n        }\n        return Streams.find({\n            $or: [{ \"id\": { \"$in\": generatedStreamsFromUser } }, { \"name\": \"Templates\" } //, { \"name\": \"Everyone\" }\n            ]\n        });\n\n    }\n    this.ready();\n});\nMeteor.publish('templateApps', function() {\n    return TemplateApps.find({ 'generationUserId': this.userId });\n    this.ready();\n});\n\nMeteor.publish('generatedResources', function() {\n    return GeneratedResources.find({ 'generationUserId': this.userId });\n    this.ready();\n});\n\nMeteor.publish('customers', function() {\n    return Customers.find({ 'generationUserId': this.userId });\n    this.ready();\n});\n\nMeteor.publish('apiLogs', function() {\n    // const selector = {\n    //     \"createDate\": {\n    //         $lt: new Date(),\n    //         $gte: new Date(new Date().setDate(new Date().getDate() - 0.05))  //show only the last hour  of api logs\n    //     }\n    //};\n    //     today: function() {\n    //     var now = moment().toDate();\n    //     return Posts.find({createdAt : { $gte : now }});\n    // }\n\n    const selector = {\n        sort: { createDate: -1 },\n        limit: 15\n    }\n\n    return APILogs.find({ 'generationUserId': this.userId }, selector);\n    this.ready();\n});\n\nMeteor.publish('users', function() {\n    //See https://github.com/alanning/meteor-roles\n    if (Roles.userIsInRole(this.userId, ['admin'], Roles.GLOBAL_GROUP)) {\n        return Meteor.users.find();\n    } else {\n        // user not authorized. do not publish secrets\n        this.stop();\n        return;\n    }\n});"]},"sourceType":"script","hash":"a1cf3a09e820ab538c83a6620eebc0f8d51bd074"}
