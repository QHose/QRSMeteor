{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/api/server/QRSFunctionsLicense.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/api/server/QRSFunctionsLicense.js","filename":"imports/api/server/QRSFunctionsLicense.js","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/martijn/Documents/GitHub/QRSMeteor","root":"/home/martijn/Documents/GitHub/QRSMeteor","presets":[],"generatorOpts":{"filename":"imports/api/server/QRSFunctionsLicense.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/api/server/QRSFunctionsLicense.js"}},"code":"module.export({\n  getLicense: () => getLicense,\n  insertLicense: () => insertLicense,\n  insertUserAccessRule: () => insertUserAccessRule,\n  getSystemRules: () => getSystemRules,\n  saveSystemRules: () => saveSystemRules\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet myQRS;\nmodule.watch(require(\"/imports/api/server/QRSAPI\"), {\n  myQRS(v) {\n    myQRS = v;\n  }\n\n}, 1);\nlet senseConfig, qrs;\nmodule.watch(require(\"/imports/api/config.js\"), {\n  senseConfig(v) {\n    senseConfig = v;\n  },\n\n  qrs(v) {\n    qrs = v;\n  }\n\n}, 2);\n\nvar fs = require('fs-extra');\n\nconst path = require('path'); //\n// ─── IMPORT CONFIG FOR QLIK SENSE QRS AND ENGINE API ────────────────────────────\n//\n\n\nvar demoUserAccessRule = \"SAAS DEMO - License rule to grant user access\"; // http://help.qlik.com/en-US/sense-developer/June2017/Subsystems/RepositoryServiceAPI/Content/RepositoryServiceAPI/RepositoryServiceAPI-License-Add.htm //\n\nfunction getLicense() {\n  var lic = qrs.get('/qrs/license');\n  return lic;\n}\n\nfunction insertLicense() {\n  console.log('------------------------------------');\n  console.log('INSERT LICENSE');\n  console.log('------------------------------------');\n  var existingLicense = qrs.get('/qrs/license');\n  var newLicense = Meteor.settings.private.license;\n\n  try {\n    console.log('check if all settings.json parameters are set...');\n    check(Meteor.settings.private.license, {\n      serial: String,\n      name: String,\n      organization: String\n    });\n    check(Meteor.settings.private.LicenseControlNumber, Number);\n  } catch (err) {\n    console.error('Missing parameters in your settings.json file for your Qlik Sense license', err);\n  }\n\n  if (!existingLicense) {\n    console.log('No existing license present, therefore inserted license into Qlik Sense.'); // try {\n    //     console.log('Update the existing license');\n    //     newLicense.id = existingLicense.id;\n    //     var response = qrs.del('/qrs/license/' + existingLicense.id);\n    //     // var response = qrs.put('/qrs/license/' + newLicense.id, newLicense, { control: Meteor.settings.private.LicenseControlNumber });\n    //     // console.error('Stop license insertion, license for ' + lic.organization + ' is already included: ', lic.serial);\n    //     // throw Error('You are trying to insert a license while the Qlik Sense is already licensed, please remove the existing one in the QMC');\n    // } catch (err) {\n    //     // lic did not already exist.\n    // }\n\n    var response = qrs.post('/qrs/license', {\n      control: Meteor.settings.private.LicenseControlNumber\n    }, newLicense);\n  }\n}\n\nfunction insertUserAccessRule() {\n  console.log('insert UserAccess Rule for all users');\n  var licenseRule = {\n    \"name\": demoUserAccessRule,\n    \"category\": \"License\",\n    \"rule\": \"((user.name like \\\"*\\\"))\",\n    \"type\": \"Custom\",\n    \"privileges\": [\"create\", \"read\", \"update\"],\n    \"resourceFilter\": \"License.UserAccessGroup_507c9aa5-8812-44d9-ade8-32809785eecf\",\n    \"actions\": 1,\n    \"ruleContext\": \"QlikSenseOnly\",\n    \"disabled\": false,\n    \"comment\": \"Rule to set up automatic user access for each user that has received a ticket via your SaaS platform\",\n    \"disabledActions\": [\"useaccesstype\"]\n  };\n  var ruleExist = getSystemRules(demoUserAccessRule);\n\n  if (typeof ruleExist[0] == 'undefined' || ruleExist.length === 0) {\n    console.log('Create a new user license rule since it did not exist.');\n    var response = qrs.post('/qrs/SystemRule', null, licenseRule);\n  }\n}\n\nfunction getSystemRules(name) {\n  console.log('Get system rules with name: ' + name);\n  var filter = name ? {\n    filter: \"Name eq '\" + name + \"'\"\n  } : null;\n  var rules = qrs.get('/qrs/SystemRule/full', filter);\n  var file = path.join(Meteor.settings.broker.automationBaseFolder, 'securityrules', 'export', 'ExtractedSystemRules.json'); // SAVE FILE TO DISK\n\n  fs.outputFile(file, JSON.stringify(rules, null, 2), 'utf-8');\n  return rules;\n}\n\nfunction saveSystemRules() {\n  var file = path.join(Meteor.settings.broker.automationBaseFolder, 'securityrules', 'export', 'ExtractedSystemRules.json');\n  console.log('------------------------------------');\n  console.log('Save all system rules in ' + file);\n  console.log('------------------------------------');\n  var rules = qrs.get('/qrs/SystemRule');\n\n  try {\n    // SAVE FILE TO DISK\n    fs.outputFile(file, JSON.stringify(rules, null, 2), 'utf-8');\n  } catch (error) {\n    console.error('unable to save systemrules, does the directory exist? Check your automationBaseFolder in your settings.json file, ', error);\n  }\n}","map":{"version":3,"sources":["imports/api/server/QRSFunctionsLicense.js"],"names":["module","export","getLicense","insertLicense","insertUserAccessRule","getSystemRules","saveSystemRules","Meteor","watch","require","v","myQRS","senseConfig","qrs","fs","path","demoUserAccessRule","lic","get","console","log","existingLicense","newLicense","settings","private","license","check","serial","String","name","organization","LicenseControlNumber","Number","err","error","response","post","control","licenseRule","ruleExist","length","filter","rules","file","join","broker","automationBaseFolder","outputFile","JSON","stringify"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { myQRS } from '/imports/api/server/QRSAPI';\n\nvar fs = require('fs-extra');\nconst path = require('path');\n\n\n//\n// ─── IMPORT CONFIG FOR QLIK SENSE QRS AND ENGINE API ────────────────────────────\n//\n\n\nimport {\n    senseConfig,\n    qrs\n} from '/imports/api/config.js';\n\nvar demoUserAccessRule = \"SAAS DEMO - License rule to grant user access\";\n\n// http://help.qlik.com/en-US/sense-developer/June2017/Subsystems/RepositoryServiceAPI/Content/RepositoryServiceAPI/RepositoryServiceAPI-License-Add.htm //\n\nexport function getLicense() {\n    var lic = qrs.get('/qrs/license');\n    return lic;\n}\n\nexport function insertLicense() {\n    console.log('------------------------------------');\n    console.log('INSERT LICENSE');\n    console.log('------------------------------------');\n    var existingLicense = qrs.get('/qrs/license');\n    var newLicense = Meteor.settings.private.license;\n\n    try {\n        console.log('check if all settings.json parameters are set...')\n        check(Meteor.settings.private.license, {\n            serial: String,\n            name: String,\n            organization: String\n        });\n        check(Meteor.settings.private.LicenseControlNumber, Number);\n    } catch (err) {\n        console.error('Missing parameters in your settings.json file for your Qlik Sense license', err)\n    }\n\n    if (!existingLicense) {\n        console.log('No existing license present, therefore inserted license into Qlik Sense.')\n            // try {\n            //     console.log('Update the existing license');\n            //     newLicense.id = existingLicense.id;\n            //     var response = qrs.del('/qrs/license/' + existingLicense.id);\n            //     // var response = qrs.put('/qrs/license/' + newLicense.id, newLicense, { control: Meteor.settings.private.LicenseControlNumber });\n            //     // console.error('Stop license insertion, license for ' + lic.organization + ' is already included: ', lic.serial);\n            //     // throw Error('You are trying to insert a license while the Qlik Sense is already licensed, please remove the existing one in the QMC');\n            // } catch (err) {\n            //     // lic did not already exist.\n            // }\n        var response = qrs.post('/qrs/license', { control: Meteor.settings.private.LicenseControlNumber }, newLicense);\n    }\n}\n\nexport function insertUserAccessRule() {\n    console.log('insert UserAccess Rule for all users');\n    var licenseRule = {\n        \"name\": demoUserAccessRule,\n        \"category\": \"License\",\n        \"rule\": \"((user.name like \\\"*\\\"))\",\n        \"type\": \"Custom\",\n        \"privileges\": [\"create\", \"read\", \"update\"],\n        \"resourceFilter\": \"License.UserAccessGroup_507c9aa5-8812-44d9-ade8-32809785eecf\",\n        \"actions\": 1,\n        \"ruleContext\": \"QlikSenseOnly\",\n        \"disabled\": false,\n        \"comment\": \"Rule to set up automatic user access for each user that has received a ticket via your SaaS platform\",\n        \"disabledActions\": [\"useaccesstype\"]\n    }\n    var ruleExist = getSystemRules(demoUserAccessRule);\n    if (typeof ruleExist[0] == 'undefined' || ruleExist.length === 0) {\n        console.log('Create a new user license rule since it did not exist.');\n        var response = qrs.post('/qrs/SystemRule', null, licenseRule);\n    }\n}\n\nexport function getSystemRules(name) {\n    console.log('Get system rules with name: ' + name);\n\n    var filter = name ? { filter: \"Name eq '\" + name + \"'\" } : null;\n    var rules = qrs.get('/qrs/SystemRule/full', filter);\n\n    var file = path.join(Meteor.settings.broker.automationBaseFolder, 'securityrules', 'export', 'ExtractedSystemRules.json');\n\n    // SAVE FILE TO DISK\n    fs.outputFile(file, JSON.stringify(rules, null, 2), 'utf-8');\n\n    return rules;\n}\nexport function saveSystemRules() {\n    var file = path.join(Meteor.settings.broker.automationBaseFolder, 'securityrules', 'export', 'ExtractedSystemRules.json');\n    console.log('------------------------------------');\n    console.log('Save all system rules in '+file);\n    console.log('------------------------------------');\n    var rules = qrs.get('/qrs/SystemRule');\n\n    try {\n        // SAVE FILE TO DISK\n        fs.outputFile(file, JSON.stringify(rules, null, 2), 'utf-8');        \n    } catch (error) {\n        console.error('unable to save systemrules, does the directory exist? Check your automationBaseFolder in your settings.json file, ', error);\n    }\n}"]},"sourceType":"script","hash":"c761977e1ce18ca464db99ba944ceb6e06883771"}
