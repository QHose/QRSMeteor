{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"packages/accounts-base/accounts_client_tests.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/accounts-base/accounts_client_tests.js","filename":"packages/accounts-base/accounts_client_tests.js","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/martijn/Documents/GitHub/QRSMeteor","root":"/home/martijn/Documents/GitHub/QRSMeteor","generatorOpts":{"filename":"packages/accounts-base/accounts_client_tests.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/accounts-base/accounts_client_tests.js"}},"code":"var username = 'jsmith';\nvar password = 'password';\n\nvar logoutAndCreateUser = function (test, done, nextTests) {\n  Meteor.logout(function () {\n    // Make sure we're logged out to start with\n    test.isFalse(Meteor.user()); // Setup a new test user\n\n    Accounts.createUser({\n      username: username,\n      password: password\n    }, function () {\n      // Handle next tests\n      nextTests(test, done);\n    });\n  });\n};\n\nvar removeTestUser = function (done) {\n  Meteor.call('removeAccountsTestUser', username, function () {\n    done();\n  });\n};\n\nTinytest.addAsync('accounts - Meteor.loggingIn() is true right after a login call', function (test, done) {\n  logoutAndCreateUser(test, done, function () {\n    // Login then immediately verify loggingIn is true\n    Meteor.loginWithPassword(username, password);\n    test.isTrue(Meteor.loggingIn());\n    removeTestUser(done);\n  });\n});\nTinytest.addAsync('accounts - Meteor.loggingIn() is false after login has completed', function (test, done) {\n  logoutAndCreateUser(test, done, function () {\n    // Login then verify loggingIn is false after login has completed\n    Meteor.loginWithPassword(username, password, function () {\n      test.isTrue(Meteor.user());\n      test.isFalse(Meteor.loggingIn());\n      removeTestUser(done);\n    });\n  });\n});\nTinytest.addAsync('accounts - Meteor.loggingOut() is true right after a logout call', function (test, done) {\n  logoutAndCreateUser(test, done, function () {\n    // Logout then immediately verify loggingOut is true\n    Meteor.logout();\n    test.isTrue(Meteor.loggingOut());\n    removeTestUser(done);\n  });\n});\nTinytest.addAsync('accounts - Meteor.loggingOut() is false after logout has completed', function (test, done) {\n  logoutAndCreateUser(test, done, function () {\n    // Logout then verify loggingOut is false after logout has completed\n    Meteor.logout(function (error) {\n      test.isFalse(Meteor.user());\n      test.isFalse(Meteor.loggingOut());\n      removeTestUser(done);\n    });\n  });\n});\nTinytest.addAsync('accounts - onLogin callback receives { type: \"password\" } param on login', function (test, done) {\n  var onLogin = Accounts.onLogin(function (loginDetails) {\n    test.equal('password', loginDetails.type);\n    onLogin.stop();\n    removeTestUser(done);\n  });\n  logoutAndCreateUser(test, done, function () {});\n});\nTinytest.addAsync('accounts - onLogin callback receives { type: \"resume\" } param on ' + 'reconnect, if already logged in', function (test, done) {\n  logoutAndCreateUser(test, done, function () {\n    var onLogin = Accounts.onLogin(function (loginDetails) {\n      test.equal('resume', loginDetails.type);\n      onLogin.stop();\n      removeTestUser(done);\n    });\n    Meteor.disconnect();\n    Meteor.reconnect();\n  });\n});","map":{"version":3,"sources":["packages/accounts-base/accounts_client_tests.js"],"names":["username","password","logoutAndCreateUser","test","done","nextTests","Meteor","logout","isFalse","user","Accounts","createUser","removeTestUser","call","Tinytest","addAsync","loginWithPassword","isTrue","loggingIn","loggingOut","error","onLogin","loginDetails","equal","type","stop","disconnect","reconnect"],"mappings":"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","sourcesContent":["const username = 'jsmith';\nconst password = 'password';\n\nconst logoutAndCreateUser = (test, done, nextTests) => {\n  Meteor.logout(() => {\n    // Make sure we're logged out to start with\n    test.isFalse(Meteor.user());\n\n    // Setup a new test user\n    Accounts.createUser({ username, password }, () => {\n      // Handle next tests\n      nextTests(test, done);\n    });\n  });\n};\n\nconst removeTestUser = (done) => {\n  Meteor.call('removeAccountsTestUser', username, () => {\n    done();\n  });\n};\n\nTinytest.addAsync(\n  'accounts - Meteor.loggingIn() is true right after a login call',\n  (test, done) => {\n    logoutAndCreateUser(test, done, () => {\n      // Login then immediately verify loggingIn is true\n      Meteor.loginWithPassword(username, password);\n      test.isTrue(Meteor.loggingIn());\n      removeTestUser(done);\n    });\n  }\n);\n\nTinytest.addAsync(\n  'accounts - Meteor.loggingIn() is false after login has completed',\n  (test, done) => {\n    logoutAndCreateUser(test, done, () => {\n      // Login then verify loggingIn is false after login has completed\n      Meteor.loginWithPassword(username, password, () => {\n        test.isTrue(Meteor.user());\n        test.isFalse(Meteor.loggingIn());\n        removeTestUser(done);\n      });\n    });\n  }\n);\n\nTinytest.addAsync(\n  'accounts - Meteor.loggingOut() is true right after a logout call',\n  (test, done) => {\n    logoutAndCreateUser(test, done, () => {\n      // Logout then immediately verify loggingOut is true\n      Meteor.logout();\n      test.isTrue(Meteor.loggingOut());\n      removeTestUser(done);\n    });\n  }\n);\n\nTinytest.addAsync(\n  'accounts - Meteor.loggingOut() is false after logout has completed',\n  (test, done) => {\n    logoutAndCreateUser(test, done, () => {\n      // Logout then verify loggingOut is false after logout has completed\n      Meteor.logout((error) => {\n        test.isFalse(Meteor.user());\n        test.isFalse(Meteor.loggingOut());\n        removeTestUser(done);\n      });\n    });\n  }\n);\n\nTinytest.addAsync(\n  'accounts - onLogin callback receives { type: \"password\" } param on login',\n  (test, done) => {\n    const onLogin = Accounts.onLogin((loginDetails) => {\n      test.equal('password', loginDetails.type);\n      onLogin.stop();\n      removeTestUser(done);\n    });\n    logoutAndCreateUser(test, done, () => {});\n  }\n);\n\nTinytest.addAsync(\n  'accounts - onLogin callback receives { type: \"resume\" } param on ' +\n  'reconnect, if already logged in',\n  (test, done) => {\n    logoutAndCreateUser(test, done, () => {\n      const onLogin = Accounts.onLogin((loginDetails) => {\n        test.equal('resume', loginDetails.type);\n        onLogin.stop();\n        removeTestUser(done);\n      });\n\n      Meteor.disconnect();\n      Meteor.reconnect();\n    });\n  }\n);\n"]},"sourceType":"script","hash":"51f117c562182963880e6567b8255ca4addc2933"}
