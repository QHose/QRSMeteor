{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"packages/webapp/socket_file_tests.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/webapp/socket_file_tests.js","filename":"packages/webapp/socket_file_tests.js","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/martijn/Documents/GitHub/QRSMeteor","root":"/home/martijn/Documents/GitHub/QRSMeteor","generatorOpts":{"filename":"packages/webapp/socket_file_tests.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/webapp/socket_file_tests.js"}},"code":"var writeFileSync, unlinkSync, statSync;\nmodule.watch(require(\"fs\"), {\n  writeFileSync: function (v) {\n    writeFileSync = v;\n  },\n  unlinkSync: function (v) {\n    unlinkSync = v;\n  },\n  statSync: function (v) {\n    statSync = v;\n  }\n}, 0);\nvar createServer;\nmodule.watch(require(\"net\"), {\n  createServer: function (v) {\n    createServer = v;\n  }\n}, 1);\nvar removeExistingSocketFile, registerSocketFileCleanup;\nmodule.watch(require(\"./socket_file.js\"), {\n  removeExistingSocketFile: function (v) {\n    removeExistingSocketFile = v;\n  },\n  registerSocketFileCleanup: function (v) {\n    registerSocketFileCleanup = v;\n  }\n}, 2);\nvar EventEmitter;\nmodule.watch(require(\"events\"), {\n  EventEmitter: function (v) {\n    EventEmitter = v;\n  }\n}, 3);\nvar tmpdir;\nmodule.watch(require(\"os\"), {\n  tmpdir: function (v) {\n    tmpdir = v;\n  }\n}, 4);\nvar testSocketFile = tmpdir() + \"/socket_file_tests\";\n\nvar removeTestSocketFile = function () {\n  try {\n    unlinkSync(testSocketFile);\n  } catch (error) {// Do nothing\n  }\n};\n\nTinytest.add(\"socket file - don't remove a non-socket file\", function (test) {\n  writeFileSync(testSocketFile);\n  test.throws(function () {\n    removeExistingSocketFile(testSocketFile);\n  }, /An existing file was found/);\n  removeTestSocketFile();\n});\nTinytest.addAsync('socket file - remove a previously existing socket file', function (test, done) {\n  removeTestSocketFile();\n  var server = createServer();\n  server.listen(testSocketFile);\n  server.on('listening', Meteor.bindEnvironment(function () {\n    test.isNotUndefined(statSync(testSocketFile));\n    removeExistingSocketFile(testSocketFile);\n    test.throws(function () {\n      statSync(testSocketFile);\n    }, /ENOENT/);\n    server.close();\n    done();\n  }));\n});\nTinytest.add('socket file - no existing socket file, nothing to remove', function (test) {\n  removeTestSocketFile();\n  removeExistingSocketFile(testSocketFile);\n});\nTinytest.add('socket file - remove socket file on exit', function (test) {\n  var testEventEmitter = new EventEmitter();\n  registerSocketFileCleanup(testSocketFile, testEventEmitter);\n  ['exit', 'SIGINT', 'SIGHUP', 'SIGTERM'].forEach(function (signal) {\n    writeFileSync(testSocketFile);\n    test.isNotUndefined(statSync(testSocketFile));\n    testEventEmitter.emit(signal);\n    test.throws(function () {\n      statSync(testSocketFile);\n    }, /ENOENT/);\n  });\n});","map":{"version":3,"sources":["packages/webapp/socket_file_tests.js"],"names":["writeFileSync","unlinkSync","statSync","module","watch","require","v","createServer","removeExistingSocketFile","registerSocketFileCleanup","EventEmitter","tmpdir","testSocketFile","removeTestSocketFile","error","Tinytest","add","test","throws","addAsync","done","server","listen","on","Meteor","bindEnvironment","isNotUndefined","close","testEventEmitter","forEach","emit","signal"],"mappings":"AAAA,IAAIA,aAAJ,EAAkBC,UAAlB,EAA6BC,QAA7B;AAAsCC,OAAOC,KAAP,CAAaC,QAAQ,IAAR,CAAb,EAA2B;AAACL,eAAD,YAAeM,CAAf,EAAiB;AAACN,oBAAcM,CAAd;AAAgB,GAAlC;AAAmCL,YAAnC,YAA8CK,CAA9C,EAAgD;AAACL,iBAAWK,CAAX;AAAa,GAA9D;AAA+DJ,UAA/D,YAAwEI,CAAxE,EAA0E;AAACJ,eAASI,CAAT;AAAW;AAAtF,CAA3B,EAAmH,CAAnH;AAAsH,IAAIC,YAAJ;AAAiBJ,OAAOC,KAAP,CAAaC,QAAQ,KAAR,CAAb,EAA4B;AAACE,cAAD,YAAcD,CAAd,EAAgB;AAACC,mBAAaD,CAAb;AAAe;AAAhC,CAA5B,EAA8D,CAA9D;AAAiE,IAAIE,wBAAJ,EAA6BC,yBAA7B;AAAuDN,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACG,0BAAD,YAA0BF,CAA1B,EAA4B;AAACE,+BAAyBF,CAAzB;AAA2B,GAAxD;AAAyDG,2BAAzD,YAAmFH,CAAnF,EAAqF;AAACG,gCAA0BH,CAA1B;AAA4B;AAAlH,CAAzC,EAA6J,CAA7J;AAAgK,IAAII,YAAJ;AAAiBP,OAAOC,KAAP,CAAaC,QAAQ,QAAR,CAAb,EAA+B;AAACK,cAAD,YAAcJ,CAAd,EAAgB;AAACI,mBAAaJ,CAAb;AAAe;AAAhC,CAA/B,EAAiE,CAAjE;AAAoE,IAAIK,MAAJ;AAAWR,OAAOC,KAAP,CAAaC,QAAQ,IAAR,CAAb,EAA2B;AAACM,QAAD,YAAQL,CAAR,EAAU;AAACK,aAAOL,CAAP;AAAS;AAApB,CAA3B,EAAiD,CAAjD;AASriB,IAAMM,iBAAoBD,QAApB,uBAAN;;AAEA,IAAME,uBAAuB,YAAM;AACjC,MAAI;AACFZ,eAAWW,cAAX;AACD,GAFD,CAEE,OAAOE,KAAP,EAAc,CACd;AACD;AACF,CAND;;AAQAC,SAASC,GAAT,CAAa,8CAAb,EAA6D,gBAAQ;AACnEhB,gBAAcY,cAAd;AACAK,OAAKC,MAAL,CACE,YAAM;AAAEV,6BAAyBI,cAAzB;AAA2C,GADrD,EAEE,4BAFF;AAIAC;AACD,CAPD;AASAE,SAASI,QAAT,CACE,wDADF,EAEE,UAACF,IAAD,EAAOG,IAAP,EAAgB;AACdP;AACA,MAAMQ,SAASd,cAAf;AACAc,SAAOC,MAAP,CAAcV,cAAd;AAEAS,SAAOE,EAAP,CAAU,WAAV,EAAuBC,OAAOC,eAAP,CAAuB,YAAM;AAClDR,SAAKS,cAAL,CAAoBxB,SAASU,cAAT,CAApB;AACAJ,6BAAyBI,cAAzB;AACAK,SAAKC,MAAL,CACE,YAAM;AAAEhB,eAASU,cAAT;AAA2B,KADrC,EAEE,QAFF;AAIAS,WAAOM,KAAP;AACAP;AACD,GATsB,CAAvB;AAUD,CAjBH;AAoBAL,SAASC,GAAT,CACE,0DADF,EAEE,gBAAQ;AACNH;AACAL,2BAAyBI,cAAzB;AACD,CALH;AAQAG,SAASC,GAAT,CAAa,0CAAb,EAAyD,gBAAQ;AAC/D,MAAMY,mBAAmB,IAAIlB,YAAJ,EAAzB;AACAD,4BAA0BG,cAA1B,EAA0CgB,gBAA1C;AACA,GAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,EAA6B,SAA7B,EAAwCC,OAAxC,CAAgD,kBAAU;AACxD7B,kBAAcY,cAAd;AACAK,SAAKS,cAAL,CAAoBxB,SAASU,cAAT,CAApB;AACAgB,qBAAiBE,IAAjB,CAAsBC,MAAtB;AACAd,SAAKC,MAAL,CACE,YAAM;AAAEhB,eAASU,cAAT;AAA2B,KADrC,EAEE,QAFF;AAID,GARD;AASD,CAZD","sourcesContent":["import { writeFileSync, unlinkSync, statSync } from 'fs';\nimport { createServer } from 'net';\nimport {\n  removeExistingSocketFile,\n  registerSocketFileCleanup,\n} from './socket_file.js';\nimport { EventEmitter } from 'events';\nimport { tmpdir } from 'os';\n\nconst testSocketFile = `${tmpdir()}/socket_file_tests`;\n\nconst removeTestSocketFile = () => {\n  try {\n    unlinkSync(testSocketFile);\n  } catch (error) {\n    // Do nothing\n  }\n}\n\nTinytest.add(\"socket file - don't remove a non-socket file\", test => {\n  writeFileSync(testSocketFile);\n  test.throws(\n    () => { removeExistingSocketFile(testSocketFile); },\n    /An existing file was found/\n  );\n  removeTestSocketFile()\n});\n\nTinytest.addAsync(\n  'socket file - remove a previously existing socket file',\n  (test, done) => {\n    removeTestSocketFile();\n    const server = createServer();\n    server.listen(testSocketFile);\n\n    server.on('listening', Meteor.bindEnvironment(() => {\n      test.isNotUndefined(statSync(testSocketFile));\n      removeExistingSocketFile(testSocketFile);\n      test.throws(\n        () => { statSync(testSocketFile); },\n        /ENOENT/\n      );\n      server.close();\n      done();\n    }));\n  }\n);\n\nTinytest.add(\n  'socket file - no existing socket file, nothing to remove',\n  test => {\n    removeTestSocketFile();\n    removeExistingSocketFile(testSocketFile);\n  }\n);\n\nTinytest.add('socket file - remove socket file on exit', test => {\n  const testEventEmitter = new EventEmitter();\n  registerSocketFileCleanup(testSocketFile, testEventEmitter);\n  ['exit', 'SIGINT', 'SIGHUP', 'SIGTERM'].forEach(signal => {\n    writeFileSync(testSocketFile);\n    test.isNotUndefined(statSync(testSocketFile));\n    testEventEmitter.emit(signal);\n    test.throws(\n      () => { statSync(testSocketFile); },\n      /ENOENT/\n    );\n  });\n});\n"]},"sourceType":"script","hash":"ac96d89bb5aa27ef3a93c32ea79faa315099803c"}
