{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"packages/accounts-base/accounts_reconnect_tests.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/accounts-base/accounts_reconnect_tests.js","filename":"packages/accounts-base/accounts_reconnect_tests.js","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/martijn/Documents/GitHub/QRSMeteor","root":"/home/martijn/Documents/GitHub/QRSMeteor","generatorOpts":{"filename":"packages/accounts-base/accounts_reconnect_tests.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/accounts-base/accounts_reconnect_tests.js"}},"code":"if (Meteor.isServer) {\n  Meteor.methods({\n    getConnectionUserId: function () {\n      return this.userId;\n    }\n  });\n}\n\nif (Meteor.isClient) {\n  var loginAsUser1 = function (onUser1LoggedIn) {\n    Accounts.createUser({\n      username: \"testuser1-\" + Random.id(),\n      password: \"password1-\" + Random.id()\n    }, onUser1LoggedIn);\n  };\n\n  Tinytest.addAsync('accounts - reconnect auto-login', function (test, done) {\n    var onReconnectCalls = 0;\n\n    var reconnectHandler = function () {\n      onReconnectCalls++;\n    };\n\n    Meteor.connection.onReconnect = reconnectHandler;\n    var username2 = 'testuser2-' + Random.id();\n    var password2 = 'password2-' + Random.id();\n    var timeoutHandle;\n    var onLoginStopper;\n    loginAsUser1(function (err) {\n      test.isUndefined(err, 'Unexpected error logging in as user1');\n      Accounts.createUser({\n        username: username2,\n        password: password2\n      }, onUser2LoggedIn);\n    });\n\n    function onUser2LoggedIn(err) {\n      test.isUndefined(err, 'Unexpected error logging in as user2');\n      onLoginStopper = Accounts.onLogin(onUser2LoggedInAfterReconnect);\n      Meteor.disconnect();\n      Meteor.reconnect();\n    }\n\n    function onUser2LoggedInAfterReconnect() {\n      onLoginStopper.stop();\n      Meteor.loginWithPassword('non-existent-user', 'or-wrong-password', onFailedLogin);\n    }\n\n    function onFailedLogin(err) {\n      test.instanceOf(err, Meteor.Error, 'No Meteor.Error on login failure');\n      onLoginStopper = Accounts.onLogin(onUser2LoggedInAfterReconnectAfterFailedLogin);\n      Meteor.disconnect();\n      Meteor.reconnect();\n      timeoutHandle = Meteor.setTimeout(failTest, 1000);\n    }\n\n    function failTest() {\n      onLoginStopper.stop();\n      test.fail('Issue #4970 has occured.');\n      Meteor.call('getConnectionUserId', checkFinalState);\n    }\n\n    function onUser2LoggedInAfterReconnectAfterFailedLogin() {\n      onLoginStopper.stop();\n      Meteor.clearTimeout(timeoutHandle);\n      Meteor.call('getConnectionUserId', checkFinalState);\n    }\n\n    function checkFinalState(err, connectionUserId) {\n      test.isUndefined(err, 'Unexpected error calling getConnectionUserId');\n      test.equal(connectionUserId, Meteor.userId(), 'userId is different on client and server');\n      test.equal(Meteor.connection.onReconnect, reconnectHandler, 'Meteor.connection.onReconnect changed');\n      test.equal(onReconnectCalls, 2, 'wrong # of reconnect handler calls');\n      done();\n    }\n  }); // Make sure that when a logged in user is disconnected then reconnected,\n  // they still only have one Accounts login onReconnect callback set.\n  // Addresses: https://github.com/meteor/meteor/issues/9140\n\n  Tinytest.addAsync('accounts - verify single onReconnect callback', function (test, done) {\n    loginAsUser1(function (err) {\n      test.isUndefined(err, 'Unexpected error logging in as user1');\n      test.equal(Object.keys(DDP._reconnectHook.callbacks).length, 1, 'Only one onReconnect callback should be registered');\n      Meteor.disconnect();\n      test.isFalse(Meteor.status().connected);\n      Meteor.reconnect();\n      setTimeout(function () {\n        test.isTrue(Meteor.status().connected);\n        test.equal(Object.keys(DDP._reconnectHook.callbacks).length, 1, 'Only one onReconnect callback should be registered');\n        done();\n      }, 1000);\n    });\n  });\n}","map":{"version":3,"sources":["packages/accounts-base/accounts_reconnect_tests.js"],"names":["Meteor","isServer","methods","getConnectionUserId","userId","isClient","loginAsUser1","onUser1LoggedIn","Accounts","createUser","username","Random","id","password","Tinytest","addAsync","test","done","onReconnectCalls","reconnectHandler","connection","onReconnect","username2","password2","timeoutHandle","onLoginStopper","err","isUndefined","onUser2LoggedIn","onLogin","onUser2LoggedInAfterReconnect","disconnect","reconnect","stop","loginWithPassword","onFailedLogin","instanceOf","Error","onUser2LoggedInAfterReconnectAfterFailedLogin","setTimeout","failTest","fail","call","checkFinalState","clearTimeout","connectionUserId","equal","Object","keys","DDP","_reconnectHook","callbacks","length","isFalse","status","connected","isTrue"],"mappings":"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","sourcesContent":["if (Meteor.isServer) {\n  Meteor.methods({\n    getConnectionUserId: function() {\n      return this.userId;\n    }\n  });\n}\n\nif (Meteor.isClient) {\n  const loginAsUser1 = (onUser1LoggedIn) => {\n    Accounts.createUser({\n      username: `testuser1-${Random.id()}`,\n      password: `password1-${Random.id()}`\n    }, onUser1LoggedIn);\n  };\n\n  Tinytest.addAsync('accounts - reconnect auto-login', function(test, done) {\n    var onReconnectCalls = 0;\n    var reconnectHandler = function () {\n      onReconnectCalls++;\n    };\n    Meteor.connection.onReconnect = reconnectHandler;\n\n    var username2 = 'testuser2-' + Random.id();\n    var password2 = 'password2-' + Random.id();\n    var timeoutHandle;\n    var onLoginStopper;\n\n    loginAsUser1((err) => {\n      test.isUndefined(err, 'Unexpected error logging in as user1');\n      Accounts.createUser({\n        username: username2,\n        password: password2\n      }, onUser2LoggedIn);\n    });\n\n    function onUser2LoggedIn(err) {\n      test.isUndefined(err, 'Unexpected error logging in as user2');\n      onLoginStopper = Accounts.onLogin(onUser2LoggedInAfterReconnect);\n      Meteor.disconnect();\n      Meteor.reconnect();\n    }\n\n    function onUser2LoggedInAfterReconnect() {\n      onLoginStopper.stop();\n      Meteor.loginWithPassword('non-existent-user', 'or-wrong-password',\n        onFailedLogin);\n    }\n\n    function onFailedLogin(err) {\n      test.instanceOf(err, Meteor.Error, 'No Meteor.Error on login failure');\n      onLoginStopper = Accounts.onLogin(onUser2LoggedInAfterReconnectAfterFailedLogin);\n      Meteor.disconnect();\n      Meteor.reconnect();\n      timeoutHandle = Meteor.setTimeout(failTest, 1000);\n    }\n\n    function failTest() {\n      onLoginStopper.stop();\n      test.fail('Issue #4970 has occured.');\n      Meteor.call('getConnectionUserId', checkFinalState);\n    }\n\n    function onUser2LoggedInAfterReconnectAfterFailedLogin() {\n      onLoginStopper.stop();\n      Meteor.clearTimeout(timeoutHandle);\n      Meteor.call('getConnectionUserId', checkFinalState);\n    }\n\n    function checkFinalState(err, connectionUserId) {\n      test.isUndefined(err, 'Unexpected error calling getConnectionUserId');\n      test.equal(connectionUserId, Meteor.userId(),\n        'userId is different on client and server');\n      test.equal(Meteor.connection.onReconnect, reconnectHandler,\n        'Meteor.connection.onReconnect changed');\n      test.equal(onReconnectCalls, 2, 'wrong # of reconnect handler calls');\n      done();\n    }\n  });\n\n  // Make sure that when a logged in user is disconnected then reconnected,\n  // they still only have one Accounts login onReconnect callback set.\n  // Addresses: https://github.com/meteor/meteor/issues/9140\n  Tinytest.addAsync(\n    'accounts - verify single onReconnect callback',\n    function (test, done) {\n      loginAsUser1((err) => {\n        test.isUndefined(err, 'Unexpected error logging in as user1');\n        test.equal(\n          Object.keys(DDP._reconnectHook.callbacks).length,\n          1,\n          'Only one onReconnect callback should be registered'\n        );\n        Meteor.disconnect();\n        test.isFalse(Meteor.status().connected);\n        Meteor.reconnect();\n        setTimeout(() => {\n          test.isTrue(Meteor.status().connected);\n          test.equal(\n            Object.keys(DDP._reconnectHook.callbacks).length,\n            1,\n            'Only one onReconnect callback should be registered'\n          );\n          done();\n        }, 1000);\n      });\n    }\n  );\n}\n"]},"sourceType":"script","hash":"70cbce8746c297ec898ff4c3d256ac8a2af42c4f"}
