{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"packages/ddp-server/session_view_tests.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/ddp-server/session_view_tests.js","filename":"packages/ddp-server/session_view_tests.js","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/martijn/Documents/GitHub/QRSMeteor","root":"/home/martijn/Documents/GitHub/QRSMeteor","presets":[],"generatorOpts":{"filename":"packages/ddp-server/session_view_tests.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/ddp-server/session_view_tests.js"}},"code":"var newView = function (test) {\n  var results = [];\n  var view = new DDPServer._SessionCollectionView('test', {\n    added: function (collection, id, fields) {\n      results.push({\n        fun: 'added',\n        id: id,\n        fields: fields\n      });\n    },\n    changed: function (collection, id, changed) {\n      if (_.isEmpty(changed)) return;\n      results.push({\n        fun: 'changed',\n        id: id,\n        changed: changed\n      });\n    },\n    removed: function (collection, id) {\n      results.push({\n        fun: 'removed',\n        id: id\n      });\n    }\n  });\n  var v = {\n    view: view,\n    results: results\n  };\n\n  _.each([\"added\", \"changed\", \"removed\"], function (it) {\n    v[it] = _.bind(view[it], view);\n  });\n\n  v.expectResult = function (result) {\n    test.equal(results.shift(), result);\n  };\n\n  v.expectNoResult = function () {\n    test.equal(results, []);\n  };\n\n  v.drain = function () {\n    var ret = results;\n    results = [];\n    return ret;\n  };\n\n  return v;\n};\n\nTinytest.add('livedata - sessionview - exists reveal', function (test) {\n  var v = newView(test);\n  v.added(\"A\", \"A1\", {});\n  v.expectResult({\n    fun: 'added',\n    id: \"A1\",\n    fields: {}\n  });\n  v.expectNoResult();\n  v.added(\"B\", \"A1\", {});\n  v.expectNoResult();\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({\n    fun: 'removed',\n    id: \"A1\"\n  });\n  v.expectNoResult();\n});\nTinytest.add('livedata - sessionview - added a second field in another sub', function (test) {\n  var v = newView(test);\n  v.added(\"A\", \"A1\", {\n    a: \"foo\"\n  });\n  v.expectResult({\n    fun: 'added',\n    id: \"A1\",\n    fields: {\n      a: \"foo\"\n    }\n  });\n  v.expectNoResult();\n  v.added(\"B\", \"A1\", {\n    a: \"foo\",\n    b: \"bar\"\n  });\n  v.expectResult({\n    fun: 'changed',\n    'id': \"A1\",\n    changed: {\n      b: \"bar\"\n    }\n  });\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({\n    fun: 'removed',\n    id: \"A1\"\n  });\n  v.expectNoResult();\n});\nTinytest.add('livedata - sessionview - field reveal', function (test) {\n  var v = newView(test);\n  v.added(\"A\", \"A1\", {\n    foo: \"bar\"\n  });\n  v.expectResult({\n    fun: 'added',\n    id: \"A1\",\n    fields: {\n      foo: \"bar\"\n    }\n  });\n  v.expectNoResult();\n  v.added(\"B\", \"A1\", {\n    foo: \"baz\"\n  });\n  v.removed(\"A\", \"A1\");\n  v.expectResult({\n    fun: 'changed',\n    id: \"A1\",\n    changed: {\n      foo: \"baz\"\n    }\n  });\n  v.expectNoResult(); // Somewhere in here we must have changed foo to baz. Legal either on the\n  // added or on the removed, but only once.\n\n  v.removed(\"B\", \"A1\");\n  v.expectResult({\n    fun: 'removed',\n    id: \"A1\"\n  });\n  v.expectNoResult();\n});\nTinytest.add('livedata - sessionview - field change', function (test) {\n  var v = newView(test);\n  v.added(\"A\", \"A1\", {\n    foo: \"bar\"\n  });\n  v.expectResult({\n    fun: 'added',\n    id: \"A1\",\n    fields: {\n      foo: \"bar\"\n    }\n  });\n  v.expectNoResult();\n  v.changed(\"A\", \"A1\", {\n    foo: \"baz\"\n  }, []);\n  v.expectResult({\n    fun: 'changed',\n    id: \"A1\",\n    changed: {\n      foo: \"baz\"\n    }\n  });\n  v.expectNoResult();\n  v.removed(\"A\", \"A1\");\n  v.expectResult({\n    fun: 'removed',\n    id: \"A1\"\n  });\n  v.expectNoResult();\n});\nTinytest.add('livedata - sessionview - field clear', function (test) {\n  var v = newView(test);\n  v.added(\"A\", \"A1\", {\n    foo: \"bar\"\n  });\n  v.expectResult({\n    fun: 'added',\n    id: \"A1\",\n    fields: {\n      foo: \"bar\"\n    }\n  });\n  v.expectNoResult();\n  v.changed(\"A\", \"A1\", {\n    foo: undefined\n  });\n  v.expectResult({\n    fun: 'changed',\n    id: \"A1\",\n    changed: {\n      foo: undefined\n    }\n  });\n  v.expectNoResult();\n  v.removed(\"A\", \"A1\");\n  v.expectResult({\n    fun: 'removed',\n    id: \"A1\"\n  });\n  v.expectNoResult();\n});\nTinytest.add('livedata - sessionview - change makes a new field', function (test) {\n  var v = newView(test);\n  v.added(\"A\", \"A1\", {\n    foo: \"bar\"\n  });\n  v.expectResult({\n    fun: 'added',\n    id: \"A1\",\n    fields: {\n      foo: \"bar\"\n    }\n  });\n  v.expectNoResult();\n  v.changed(\"A\", \"A1\", {\n    baz: \"quux\"\n  });\n  v.expectResult({\n    fun: 'changed',\n    id: \"A1\",\n    changed: {\n      baz: \"quux\"\n    }\n  });\n  v.expectNoResult();\n});\nTinytest.add('livedata - sessionview - add, remove, add', function (test) {\n  var v = newView(test);\n  v.added(\"A\", \"A1\", {\n    foo: \"bar\"\n  });\n  v.expectResult({\n    fun: 'added',\n    id: \"A1\",\n    fields: {\n      foo: \"bar\"\n    }\n  });\n  v.expectNoResult();\n  v.removed(\"A\", \"A1\");\n  v.expectResult({\n    fun: 'removed',\n    id: \"A1\"\n  });\n  v.expectNoResult();\n  v.added(\"A\", \"A1\", {\n    foo: \"bar\"\n  });\n  v.expectResult({\n    fun: 'added',\n    id: \"A1\",\n    fields: {\n      foo: \"bar\"\n    }\n  });\n  v.expectNoResult();\n});\nTinytest.add('livedata - sessionview - field clear reveal', function (test) {\n  var v = newView(test);\n  v.added(\"A\", \"A1\", {\n    foo: \"bar\"\n  });\n  v.expectResult({\n    fun: 'added',\n    id: \"A1\",\n    fields: {\n      foo: \"bar\"\n    }\n  });\n  v.expectNoResult();\n  v.added(\"B\", \"A1\", {\n    foo: \"baz\"\n  });\n  v.changed(\"A\", \"A1\", {\n    foo: undefined\n  });\n  v.expectResult({\n    fun: 'changed',\n    id: \"A1\",\n    changed: {\n      foo: \"baz\"\n    }\n  });\n  v.expectNoResult();\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({\n    fun: 'removed',\n    id: \"A1\"\n  });\n  v.expectNoResult();\n});\nTinytest.add('livedata - sessionview - change to canonical value produces no change', function (test) {\n  var v = newView(test);\n  v.added(\"A\", \"A1\", {\n    foo: \"bar\"\n  });\n  v.expectResult({\n    fun: 'added',\n    id: \"A1\",\n    fields: {\n      foo: \"bar\"\n    }\n  });\n  v.expectNoResult();\n  v.added(\"B\", \"A1\", {\n    foo: \"baz\"\n  });\n  var canon = \"bar\";\n  var maybeResults = v.drain();\n\n  if (!_.isEmpty(maybeResults)) {\n    // if something happened, it was a change message to baz.\n    // if nothing did, canon is still bar.\n    test.length(maybeResults, 1);\n    test.equal(maybeResults[0], {\n      fun: 'changed',\n      id: \"A1\",\n      changed: {\n        foo: \"baz\"\n      }\n    });\n    canon = \"baz\";\n  }\n\n  v.changed(\"B\", \"A1\", {\n    foo: canon\n  });\n  v.expectNoResult();\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({\n    fun: 'removed',\n    id: \"A1\"\n  });\n  v.expectNoResult();\n});\nTinytest.add('livedata - sessionview - new field of canonical value produces no change', function (test) {\n  var v = newView(test);\n  v.added(\"A\", \"A1\", {\n    foo: \"bar\"\n  });\n  v.expectResult({\n    fun: 'added',\n    id: \"A1\",\n    fields: {\n      foo: \"bar\"\n    }\n  });\n  v.expectNoResult();\n  v.added(\"B\", \"A1\", {});\n  v.changed(\"B\", \"A1\", {\n    foo: \"bar\"\n  });\n  v.expectNoResult();\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({\n    fun: 'removed',\n    id: \"A1\"\n  });\n  v.expectNoResult();\n});\nTinytest.add('livedata - sessionview - clear all clears only once', function (test) {\n  var v = newView(test);\n  v.added(\"A\", \"A1\", {\n    foo: \"bar\"\n  });\n  v.expectResult({\n    fun: 'added',\n    id: \"A1\",\n    fields: {\n      foo: \"bar\"\n    }\n  });\n  v.expectNoResult();\n  v.added(\"B\", \"A1\", {\n    foo: \"bar\"\n  });\n  v.added(\"C\", \"A1\", {\n    foo: \"bar\"\n  });\n  v.changed(\"A\", \"A1\", {\n    foo: undefined\n  });\n  v.changed(\"B\", \"A1\", {\n    foo: undefined\n  });\n  v.changed(\"C\", \"A1\", {\n    foo: undefined\n  });\n  v.expectResult({\n    fun: 'changed',\n    id: \"A1\",\n    changed: {\n      foo: undefined\n    }\n  });\n  v.expectNoResult();\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectNoResult();\n});\nTinytest.add('livedata - sessionview - change all changes only once', function (test) {\n  var v = newView(test);\n  v.added(\"A\", \"A1\", {\n    foo: \"bar\"\n  });\n  v.expectResult({\n    fun: 'added',\n    id: \"A1\",\n    fields: {\n      foo: \"bar\"\n    }\n  });\n  v.expectNoResult();\n  v.added(\"B\", \"A1\", {\n    foo: \"bar\"\n  });\n  v.added(\"C\", \"A1\", {\n    foo: \"bar\"\n  });\n  v.changed(\"B\", \"A1\", {\n    foo: \"baz\"\n  });\n  v.changed(\"A\", \"A1\", {\n    foo: \"baz\"\n  });\n  v.changed(\"C\", \"A1\", {\n    foo: \"baz\"\n  });\n  v.expectResult({\n    fun: 'changed',\n    id: \"A1\",\n    changed: {\n      foo: \"baz\"\n    }\n  });\n  v.expectNoResult();\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectNoResult();\n});\nTinytest.add('livedata - sessionview - multiple operations at once in a change', function (test) {\n  var v = newView(test);\n  v.added(\"A\", \"A1\", {\n    foo: \"bar\",\n    baz: \"quux\"\n  });\n  v.expectResult({\n    fun: 'added',\n    id: \"A1\",\n    fields: {\n      foo: \"bar\",\n      baz: \"quux\"\n    }\n  });\n  v.expectNoResult();\n  v.added(\"B\", \"A1\", {\n    foo: \"baz\"\n  });\n  v.changed(\"A\", \"A1\", {\n    thing: \"stuff\",\n    foo: undefined,\n    baz: undefined\n  });\n  v.expectResult({\n    fun: 'changed',\n    id: \"A1\",\n    changed: {\n      foo: \"baz\",\n      thing: \"stuff\",\n      baz: undefined\n    }\n  });\n  v.expectNoResult();\n  v.removed(\"A\", \"A1\");\n  v.expectResult({\n    fun: 'changed',\n    id: \"A1\",\n    changed: {\n      thing: undefined\n    }\n  });\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({\n    fun: 'removed',\n    id: \"A1\"\n  });\n  v.expectNoResult();\n});\nTinytest.add('livedata - sessionview - more than one document', function (test) {\n  var v = newView(test);\n  v.added(\"A\", \"A1\", {\n    foo: \"bar\",\n    baz: \"quux\"\n  });\n  v.expectResult({\n    fun: 'added',\n    id: \"A1\",\n    fields: {\n      foo: \"bar\",\n      baz: \"quux\"\n    }\n  });\n  v.expectNoResult();\n  v.added(\"A\", \"A2\", {\n    foo: \"baz\"\n  });\n  v.expectResult({\n    fun: 'added',\n    id: \"A2\",\n    fields: {\n      foo: \"baz\"\n    }\n  });\n  v.changed(\"A\", \"A1\", {\n    thing: \"stuff\",\n    foo: undefined,\n    baz: undefined\n  });\n  v.expectResult({\n    fun: 'changed',\n    id: \"A1\",\n    changed: {\n      thing: \"stuff\",\n      foo: undefined,\n      baz: undefined\n    }\n  });\n  v.expectNoResult();\n  v.removed(\"A\", \"A1\");\n  v.expectResult({\n    fun: 'removed',\n    id: \"A1\"\n  });\n  v.expectNoResult();\n  v.removed(\"A\", \"A2\");\n  v.expectResult({\n    fun: 'removed',\n    id: \"A2\"\n  });\n  v.expectNoResult();\n});\nTinytest.add('livedata - sessionview - multiple docs removed', function (test) {\n  var v = newView(test);\n  v.added(\"A\", \"A1\", {\n    foo: \"bar\",\n    baz: \"quux\"\n  });\n  v.expectResult({\n    fun: 'added',\n    id: \"A1\",\n    fields: {\n      foo: \"bar\",\n      baz: \"quux\"\n    }\n  });\n  v.expectNoResult();\n  v.added(\"A\", \"A2\", {\n    foo: \"baz\"\n  });\n  v.expectResult({\n    fun: 'added',\n    id: \"A2\",\n    fields: {\n      foo: \"baz\"\n    }\n  });\n  v.expectNoResult();\n  v.removed(\"A\", \"A1\");\n  v.expectResult({\n    fun: 'removed',\n    id: \"A1\"\n  });\n  v.removed(\"A\", \"A2\");\n  v.expectResult({\n    fun: 'removed',\n    id: \"A2\"\n  });\n  v.expectNoResult();\n});\nTinytest.add('livedata - sessionview - complicated sequence', function (test) {\n  var v = newView(test);\n  v.added(\"A\", \"A1\", {\n    foo: \"bar\",\n    baz: \"quux\"\n  });\n  v.expectResult({\n    fun: 'added',\n    id: \"A1\",\n    fields: {\n      foo: \"bar\",\n      baz: \"quux\"\n    }\n  });\n  v.expectNoResult();\n  v.added(\"A\", \"A2\", {\n    foo: \"eats\"\n  });\n  v.expectResult({\n    fun: 'added',\n    id: \"A2\",\n    fields: {\n      foo: \"eats\"\n    }\n  });\n  v.added(\"B\", \"A1\", {\n    foo: \"baz\"\n  });\n  v.changed(\"A\", \"A1\", {\n    thing: \"stuff\",\n    foo: undefined,\n    baz: undefined\n  });\n  v.expectResult({\n    fun: 'changed',\n    id: \"A1\",\n    changed: {\n      foo: \"baz\",\n      thing: \"stuff\",\n      baz: undefined\n    }\n  });\n  v.expectNoResult();\n  v.removed(\"A\", \"A1\");\n  v.removed(\"A\", \"A2\");\n  v.expectResult({\n    fun: 'changed',\n    id: \"A1\",\n    changed: {\n      thing: undefined\n    }\n  });\n  v.expectResult({\n    fun: 'removed',\n    id: \"A2\"\n  });\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({\n    fun: 'removed',\n    id: \"A1\"\n  });\n  v.expectNoResult();\n});\nTinytest.add('livedata - sessionview - added becomes changed', function (test) {\n  var v = newView(test);\n  v.added('A', \"A1\", {\n    foo: 'bar'\n  });\n  v.expectResult({\n    fun: 'added',\n    id: \"A1\",\n    fields: {\n      foo: 'bar'\n    }\n  });\n  v.added('B', \"A1\", {\n    hi: 'there'\n  });\n  v.expectResult({\n    fun: 'changed',\n    id: 'A1',\n    changed: {\n      hi: 'there'\n    }\n  });\n  v.removed('A', 'A1');\n  v.expectResult({\n    fun: 'changed',\n    id: 'A1',\n    changed: {\n      foo: undefined\n    }\n  });\n  v.removed('B', 'A1');\n  v.expectResult({\n    fun: 'removed',\n    id: 'A1'\n  });\n});\nTinytest.add('livedata - sessionview - weird key names', function (test) {\n  var v = newView(test);\n  v.added('A', \"A1\", {});\n  v.expectResult({\n    fun: 'added',\n    id: \"A1\",\n    fields: {}\n  });\n  v.changed('A', \"A1\", {\n    constructor: 'bla'\n  });\n  v.expectResult({\n    fun: 'changed',\n    id: 'A1',\n    changed: {\n      constructor: 'bla'\n    }\n  });\n});\nTinytest.add('livedata - sessionview - clear undefined value', function (test) {\n  var v = newView(test);\n  v.added(\"A\", \"A1\", {\n    field: \"value\"\n  });\n  v.expectResult({\n    fun: 'added',\n    id: \"A1\",\n    fields: {\n      field: \"value\"\n    }\n  });\n  v.expectNoResult();\n  v.changed(\"A\", \"A1\", {\n    field: undefined\n  });\n  v.expectResult({\n    fun: 'changed',\n    id: 'A1',\n    changed: {\n      field: undefined\n    }\n  });\n  v.expectNoResult();\n  v.changed(\"A\", \"A1\", {\n    field: undefined\n  });\n  v.expectNoResult();\n});","map":{"version":3,"sources":["packages/ddp-server/session_view_tests.js"],"names":["newView","test","results","view","DDPServer","_SessionCollectionView","added","collection","id","fields","push","fun","changed","_","isEmpty","removed","v","each","it","bind","expectResult","result","equal","shift","expectNoResult","drain","ret","Tinytest","add","a","b","foo","undefined","baz","canon","maybeResults","length","thing","hi","constructor","field"],"mappings":"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","sourcesContent":["var newView = function(test) {\n  var results = [];\n  var view = new DDPServer._SessionCollectionView('test', {\n    added: function (collection, id, fields) {\n      results.push({fun: 'added', id: id, fields: fields});\n    },\n    changed: function (collection, id, changed) {\n      if (_.isEmpty(changed))\n        return;\n      results.push({fun: 'changed', id: id, changed: changed});\n    },\n    removed: function (collection, id) {\n      results.push({fun: 'removed', id: id});\n    }\n  });\n  var v = {\n    view: view,\n    results: results\n  };\n  _.each([\"added\", \"changed\", \"removed\"], function (it) {\n    v[it] = _.bind(view[it], view);\n  });\n  v.expectResult = function (result) {\n    test.equal(results.shift(), result);\n  };\n  v.expectNoResult = function () {\n    test.equal(results, []);\n  };\n  v.drain = function() {\n    var ret = results;\n    results = [];\n    return ret;\n  };\n  return v;\n};\n\nTinytest.add('livedata - sessionview - exists reveal', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", {});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {}});\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", {});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - added a second field in another sub', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", {a: \"foo\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {a: \"foo\"}});\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", {a: \"foo\", b: \"bar\"});\n  v.expectResult({fun: 'changed', 'id': \"A1\", changed: {b: \"bar\"}});\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\n\nTinytest.add('livedata - sessionview - field reveal', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.added(\"B\",  \"A1\", {foo: \"baz\"});\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: \"baz\"}});\n  v.expectNoResult();\n  // Somewhere in here we must have changed foo to baz. Legal either on the\n  // added or on the removed, but only once.\n\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - field change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", {foo: \"baz\"}, []);\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: \"baz\"}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - field clear', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", {foo: undefined});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: undefined}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - change makes a new field', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", {baz:\"quux\"});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {baz: \"quux\"}});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - add, remove, add', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n});\n\nTinytest.add('livedata - sessionview - field clear reveal', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n\n  v.added(\"B\",  \"A1\", {foo: \"baz\"});\n  v.changed(\"A\", \"A1\", {foo: undefined});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: \"baz\"}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - change to canonical value produces no change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n\n  v.added(\"B\",  \"A1\", {foo: \"baz\"});\n  var canon = \"bar\";\n  var maybeResults = v.drain();\n  if (!_.isEmpty(maybeResults)) {\n    // if something happened, it was a change message to baz.\n    // if nothing did, canon is still bar.\n    test.length(maybeResults, 1);\n    test.equal(maybeResults[0], {fun: 'changed', id: \"A1\", changed: {foo: \"baz\"}});\n    canon = \"baz\";\n  }\n  v.changed(\"B\", \"A1\", {foo: canon});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - new field of canonical value produces no change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n\n  v.added(\"B\",  \"A1\", {});\n\n  v.changed(\"B\", \"A1\", {foo: \"bar\"});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - clear all clears only once', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.added(\"B\",  \"A1\", {foo: \"bar\"});\n  v.added(\"C\",  \"A1\", {foo: \"bar\"});\n  v.changed(\"A\", \"A1\", {foo: undefined});\n  v.changed(\"B\", \"A1\", {foo: undefined});\n  v.changed(\"C\", \"A1\", {foo: undefined});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: undefined}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - change all changes only once', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.added(\"B\",  \"A1\", {foo: \"bar\"});\n  v.added(\"C\",  \"A1\", {foo: \"bar\"});\n  v.changed(\"B\", \"A1\", {foo: \"baz\"});\n  v.changed(\"A\", \"A1\", {foo: \"baz\"});\n  v.changed(\"C\", \"A1\", {foo: \"baz\"});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: \"baz\"}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - multiple operations at once in a change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\", baz: \"quux\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\", baz: \"quux\"}});\n  v.expectNoResult();\n\n\n  v.added(\"B\",  \"A1\", {foo: \"baz\"});\n  v.changed(\"A\", \"A1\", {thing: \"stuff\", foo: undefined, baz: undefined});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: \"baz\", thing: \"stuff\", baz: undefined}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {thing: undefined}});\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - more than one document', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\", baz: \"quux\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\", baz: \"quux\"}});\n  v.expectNoResult();\n\n\n  v.added(\"A\", \"A2\", {foo: \"baz\"});\n  v.expectResult({fun: 'added', id: \"A2\", fields: {foo: \"baz\"}});\n  v.changed(\"A\", \"A1\", {thing: \"stuff\", foo: undefined, baz: undefined});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {thing: \"stuff\", foo: undefined, baz: undefined}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n  v.removed(\"A\", \"A2\");\n  v.expectResult({fun: 'removed', id: \"A2\"});\n  v.expectNoResult();\n\n});\n\nTinytest.add('livedata - sessionview - multiple docs removed', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\", baz: \"quux\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\", baz: \"quux\"}});\n  v.expectNoResult();\n\n\n  v.added(\"A\", \"A2\", {foo: \"baz\"});\n  v.expectResult({fun: 'added', id: \"A2\", fields: {foo: \"baz\"}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.removed(\"A\", \"A2\");\n  v.expectResult({fun: 'removed', id: \"A2\"});\n  v.expectNoResult();\n});\n\n\nTinytest.add('livedata - sessionview - complicated sequence', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\", baz: \"quux\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\", baz: \"quux\"}});\n  v.expectNoResult();\n\n  v.added(\"A\", \"A2\", {foo: \"eats\"});\n  v.expectResult({fun: 'added', id: \"A2\", fields: {foo: \"eats\"}});\n\n  v.added(\"B\",  \"A1\", {foo: \"baz\"});\n  v.changed(\"A\", \"A1\", {thing: \"stuff\", foo: undefined, baz: undefined});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: \"baz\", thing: \"stuff\", baz: undefined}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.removed(\"A\", \"A2\");\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {thing: undefined}});\n  v.expectResult({fun: 'removed', id: \"A2\"});\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - added becomes changed', function (test) {\n  var v = newView(test);\n\n  v.added('A',  \"A1\", {foo: 'bar'});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: 'bar'}});\n\n  v.added('B',  \"A1\", {hi: 'there'});\n  v.expectResult({fun: 'changed', id: 'A1', changed: {hi: 'there'}});\n\n  v.removed('A', 'A1');\n  v.expectResult({fun: 'changed', id: 'A1', changed: {foo: undefined}});\n\n  v.removed('B', 'A1');\n  v.expectResult({fun: 'removed', id: 'A1'});\n});\n\nTinytest.add('livedata - sessionview - weird key names', function (test) {\n  var v = newView(test);\n\n  v.added('A',  \"A1\", {});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {}});\n\n  v.changed('A',  \"A1\", {constructor: 'bla'});\n  v.expectResult({fun: 'changed', id: 'A1', changed: {constructor: 'bla'}});\n});\n\nTinytest.add('livedata - sessionview - clear undefined value', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", {field: \"value\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {field: \"value\"}});\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", {field: undefined});\n  v.expectResult({fun: 'changed', id: 'A1', changed: {field: undefined}});\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", {field: undefined});\n  v.expectNoResult();\n\n});\n"]},"sourceType":"script","hash":"51849ef999e75f83356b02066facd030d3a80ae0"}
