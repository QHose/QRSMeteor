{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"packages/webapp-hashing/webapp-hashing.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/webapp-hashing/webapp-hashing.js","filename":"packages/webapp-hashing/webapp-hashing.js","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/martijn/Documents/GitHub/QRSMeteor","root":"/home/martijn/Documents/GitHub/QRSMeteor","presets":[],"generatorOpts":{"filename":"packages/webapp-hashing/webapp-hashing.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/webapp-hashing/webapp-hashing.js"}},"code":"var crypto = Npm.require(\"crypto\");\n\nWebAppHashing = {}; // Calculate a hash of all the client resources downloaded by the\n// browser, including the application HTML, runtime config, code, and\n// static files.\n//\n// This hash *must* change if any resources seen by the browser\n// change, and ideally *doesn't* change for any server-only changes\n// (but the second is a performance enhancement, not a hard\n// requirement).\n\nWebAppHashing.calculateClientHash = function (manifest, includeFilter, runtimeConfigOverride) {\n  var hash = crypto.createHash('sha1'); // Omit the old hashed client values in the new hash. These may be\n  // modified in the new boilerplate.\n\n  var runtimeCfg = _.omit(__meteor_runtime_config__, ['autoupdateVersion', 'autoupdateVersionRefreshable', 'autoupdateVersionCordova']);\n\n  if (runtimeConfigOverride) {\n    runtimeCfg = runtimeConfigOverride;\n  }\n\n  hash.update(JSON.stringify(runtimeCfg, 'utf8'));\n\n  _.each(manifest, function (resource) {\n    if ((!includeFilter || includeFilter(resource.type)) && (resource.where === 'client' || resource.where === 'internal')) {\n      hash.update(resource.path);\n      hash.update(resource.hash);\n    }\n  });\n\n  return hash.digest('hex');\n};\n\nWebAppHashing.calculateCordovaCompatibilityHash = function (platformVersion, pluginVersions) {\n  const hash = crypto.createHash('sha1');\n  hash.update(platformVersion); // Sort plugins first so iteration order doesn't affect the hash\n\n  const plugins = Object.keys(pluginVersions).sort();\n\n  for (let plugin of plugins) {\n    const version = pluginVersions[plugin];\n    hash.update(plugin);\n    hash.update(version);\n  }\n\n  return hash.digest('hex');\n};","map":{"version":3,"sources":["packages/webapp-hashing/webapp-hashing.js"],"names":["crypto","Npm","require","WebAppHashing","calculateClientHash","manifest","includeFilter","runtimeConfigOverride","hash","createHash","runtimeCfg","_","omit","__meteor_runtime_config__","update","JSON","stringify","each","resource","type","where","path","digest","calculateCordovaCompatibilityHash","platformVersion","pluginVersions","plugins","Object","keys","sort","plugin","version"],"mappings":"AAAA,IAAIA,SAASC,IAAIC,OAAJ,CAAY,QAAZ,CAAb;;AAEAC,gBAAgB,EAAhB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,cAAcC,mBAAd,GACE,UAAUC,QAAV,EAAoBC,aAApB,EAAmCC,qBAAnC,EAA0D;AAC1D,MAAIC,OAAOR,OAAOS,UAAP,CAAkB,MAAlB,CAAX,CAD0D,CAG1D;AACA;;AACA,MAAIC,aAAaC,EAAEC,IAAF,CAAOC,yBAAP,EACf,CAAC,mBAAD,EAAsB,8BAAtB,EACC,0BADD,CADe,CAAjB;;AAIA,MAAIN,qBAAJ,EAA2B;AACzBG,iBAAaH,qBAAb;AACD;;AAEDC,OAAKM,MAAL,CAAYC,KAAKC,SAAL,CAAeN,UAAf,EAA2B,MAA3B,CAAZ;;AAEAC,IAAEM,IAAF,CAAOZ,QAAP,EAAiB,UAAUa,QAAV,EAAoB;AACjC,QAAI,CAAC,CAAEZ,aAAF,IAAmBA,cAAcY,SAASC,IAAvB,CAApB,MACCD,SAASE,KAAT,KAAmB,QAAnB,IAA+BF,SAASE,KAAT,KAAmB,UADnD,CAAJ,EACoE;AACpEZ,WAAKM,MAAL,CAAYI,SAASG,IAArB;AACAb,WAAKM,MAAL,CAAYI,SAASV,IAArB;AACD;AACF,GAND;;AAOA,SAAOA,KAAKc,MAAL,CAAY,KAAZ,CAAP;AACD,CAxBD;;AA0BAnB,cAAcoB,iCAAd,GACE,UAASC,eAAT,EAA0BC,cAA1B,EAA0C;AAC1C,QAAMjB,OAAOR,OAAOS,UAAP,CAAkB,MAAlB,CAAb;AAEAD,OAAKM,MAAL,CAAYU,eAAZ,EAH0C,CAK1C;;AACA,QAAME,UAAUC,OAAOC,IAAP,CAAYH,cAAZ,EAA4BI,IAA5B,EAAhB;;AACA,OAAK,IAAIC,MAAT,IAAmBJ,OAAnB,EAA4B;AAC1B,UAAMK,UAAUN,eAAeK,MAAf,CAAhB;AACAtB,SAAKM,MAAL,CAAYgB,MAAZ;AACAtB,SAAKM,MAAL,CAAYiB,OAAZ;AACD;;AAED,SAAOvB,KAAKc,MAAL,CAAY,KAAZ,CAAP;AACD,CAfD","sourcesContent":["var crypto = Npm.require(\"crypto\");\n\nWebAppHashing = {};\n\n// Calculate a hash of all the client resources downloaded by the\n// browser, including the application HTML, runtime config, code, and\n// static files.\n//\n// This hash *must* change if any resources seen by the browser\n// change, and ideally *doesn't* change for any server-only changes\n// (but the second is a performance enhancement, not a hard\n// requirement).\n\nWebAppHashing.calculateClientHash =\n  function (manifest, includeFilter, runtimeConfigOverride) {\n  var hash = crypto.createHash('sha1');\n\n  // Omit the old hashed client values in the new hash. These may be\n  // modified in the new boilerplate.\n  var runtimeCfg = _.omit(__meteor_runtime_config__,\n    ['autoupdateVersion', 'autoupdateVersionRefreshable',\n     'autoupdateVersionCordova']);\n\n  if (runtimeConfigOverride) {\n    runtimeCfg = runtimeConfigOverride;\n  }\n\n  hash.update(JSON.stringify(runtimeCfg, 'utf8'));\n\n  _.each(manifest, function (resource) {\n      if ((! includeFilter || includeFilter(resource.type)) &&\n          (resource.where === 'client' || resource.where === 'internal')) {\n      hash.update(resource.path);\n      hash.update(resource.hash);\n    }\n  });\n  return hash.digest('hex');\n};\n\nWebAppHashing.calculateCordovaCompatibilityHash =\n  function(platformVersion, pluginVersions) {\n  const hash = crypto.createHash('sha1');\n\n  hash.update(platformVersion);\n\n  // Sort plugins first so iteration order doesn't affect the hash\n  const plugins = Object.keys(pluginVersions).sort();\n  for (let plugin of plugins) {\n    const version = pluginVersions[plugin];\n    hash.update(plugin);\n    hash.update(version);\n  }\n\n  return hash.digest('hex');\n};\n"]},"sourceType":"script","hash":"638db729f949d43b55ebb4969e867f668340f266"}
