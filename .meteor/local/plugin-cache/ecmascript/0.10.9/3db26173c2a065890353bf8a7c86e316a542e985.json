{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"packages/routepolicy/routepolicy.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/routepolicy/routepolicy.js","filename":"packages/routepolicy/routepolicy.js","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/martijn/Documents/GitHub/QRSMeteor","root":"/home/martijn/Documents/GitHub/QRSMeteor","presets":[],"generatorOpts":{"filename":"packages/routepolicy/routepolicy.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/routepolicy/routepolicy.js"}},"code":"module.export({\n  default: () => RoutePolicy\n});\n\nclass RoutePolicy {\n  constructor() {\n    // maps prefix to a type\n    this.urlPrefixTypes = {};\n  }\n\n  urlPrefixMatches(urlPrefix, url) {\n    return url.startsWith(urlPrefix);\n  }\n\n  checkType(type) {\n    if (!['network', 'static-online'].includes(type)) {\n      return 'the route type must be \"network\" or \"static-online\"';\n    }\n\n    return null;\n  }\n\n  checkUrlPrefix(urlPrefix, type) {\n    if (!urlPrefix.startsWith('/')) {\n      return 'a route URL prefix must begin with a slash';\n    }\n\n    if (urlPrefix === '/') {\n      return 'a route URL prefix cannot be /';\n    }\n\n    const existingType = this.urlPrefixTypes[urlPrefix];\n\n    if (existingType && existingType !== type) {\n      return `the route URL prefix ${urlPrefix} has already been declared ` + `to be of type ${existingType}`;\n    }\n\n    return null;\n  }\n\n  checkForConflictWithStatic(urlPrefix, type, _testManifest) {\n    if (type === 'static-online') {\n      return null;\n    }\n\n    if (!Package.webapp || !Package.webapp.WebApp || !Package.webapp.WebApp.clientPrograms || !Package.webapp.WebApp.clientPrograms[Package.webapp.WebApp.defaultArch].manifest) {\n      // Hack: If we don't have a manifest, deal with it\n      // gracefully. This lets us load livedata into a nodejs\n      // environment that doesn't have a HTTP server (eg, a\n      // command-line tool).\n      return null;\n    }\n\n    const WebApp = Package.webapp.WebApp;\n    const manifest = _testManifest || WebApp.clientPrograms[WebApp.defaultArch].manifest;\n    const conflict = manifest.find(resource => resource.type === 'static' && resource.where === 'client' && this.urlPrefixMatches(urlPrefix, resource.url));\n\n    if (conflict) {\n      return `static resource ${conflict.url} conflicts with ${type} ` + `route ${urlPrefix}`;\n    }\n\n    return null;\n  }\n\n  declare(urlPrefix, type) {\n    const problem = this.checkType(type) || this.checkUrlPrefix(urlPrefix, type) || this.checkForConflictWithStatic(urlPrefix, type);\n\n    if (problem) {\n      throw new Error(problem);\n    } // TODO overlapping prefixes, e.g. /foo/ and /foo/bar/\n\n\n    this.urlPrefixTypes[urlPrefix] = type;\n  }\n\n  isValidUrl(url) {\n    return url.startsWith('/');\n  }\n\n  classify(url) {\n    if (!this.isValidUrl(url)) {\n      throw new Error(`url must be a relative URL: ${url}`);\n    }\n\n    const prefix = Object.keys(this.urlPrefixTypes).find(prefix => this.urlPrefixMatches(prefix, url));\n    return prefix ? this.urlPrefixTypes[prefix] : null;\n  }\n\n  urlPrefixesFor(type) {\n    return Object.entries(this.urlPrefixTypes).filter(([_prefix, _type]) => _type === type).map(([_prefix]) => _prefix).sort();\n  }\n\n}","map":{"version":3,"sources":["packages/routepolicy/routepolicy.js"],"names":["module","export","default","RoutePolicy","constructor","urlPrefixTypes","urlPrefixMatches","urlPrefix","url","startsWith","checkType","type","includes","checkUrlPrefix","existingType","checkForConflictWithStatic","_testManifest","Package","webapp","WebApp","clientPrograms","defaultArch","manifest","conflict","find","resource","where","declare","problem","Error","isValidUrl","classify","prefix","Object","keys","urlPrefixesFor","entries","filter","_prefix","_type","map","sort"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,WAAQ,MAAIC;AAAb,CAAd;;AAsBe,MAAMA,WAAN,CAAkB;AAC/BC,gBAAc;AACZ;AACA,SAAKC,cAAL,GAAsB,EAAtB;AACD;;AAEDC,mBAAiBC,SAAjB,EAA4BC,GAA5B,EAAiC;AAC/B,WAAOA,IAAIC,UAAJ,CAAeF,SAAf,CAAP;AACD;;AAEDG,YAAUC,IAAV,EAAgB;AACd,QAAI,CAAC,CAAC,SAAD,EAAY,eAAZ,EAA6BC,QAA7B,CAAsCD,IAAtC,CAAL,EAAkD;AAChD,aAAO,qDAAP;AACD;;AACD,WAAO,IAAP;AACD;;AAEDE,iBAAeN,SAAf,EAA0BI,IAA1B,EAAgC;AAC9B,QAAI,CAACJ,UAAUE,UAAV,CAAqB,GAArB,CAAL,EAAgC;AAC9B,aAAO,4CAAP;AACD;;AAED,QAAIF,cAAc,GAAlB,EAAuB;AACrB,aAAO,gCAAP;AACD;;AAED,UAAMO,eAAe,KAAKT,cAAL,CAAoBE,SAApB,CAArB;;AACA,QAAIO,gBAAgBA,iBAAiBH,IAArC,EAA2C;AACzC,aAAQ,wBAAuBJ,SAAU,6BAAlC,GACJ,iBAAgBO,YAAa,EADhC;AAED;;AAED,WAAO,IAAP;AACD;;AAEDC,6BAA2BR,SAA3B,EAAsCI,IAAtC,EAA4CK,aAA5C,EAA2D;AACzD,QAAIL,SAAS,eAAb,EAA8B;AAC5B,aAAO,IAAP;AACD;;AAED,QAAI,CAACM,QAAQC,MAAT,IACA,CAACD,QAAQC,MAAR,CAAeC,MADhB,IAEA,CAACF,QAAQC,MAAR,CAAeC,MAAf,CAAsBC,cAFvB,IAGA,CAACH,QAAQC,MAAR,CAAeC,MAAf,CAAsBC,cAAtB,CACCH,QAAQC,MAAR,CAAeC,MAAf,CAAsBE,WADvB,EACoCC,QAJzC,EAImD;AACjD;AACA;AACA;AACA;AACA,aAAO,IAAP;AACD;;AAED,UAAMH,SAASF,QAAQC,MAAR,CAAeC,MAA9B;AACA,UAAMG,WACJN,iBAAiBG,OAAOC,cAAP,CAAsBD,OAAOE,WAA7B,EAA0CC,QAD7D;AAEA,UAAMC,WAAWD,SAASE,IAAT,CAAcC,YAC7BA,SAASd,IAAT,KAAkB,QAAlB,IACAc,SAASC,KAAT,KAAmB,QADnB,IAEA,KAAKpB,gBAAL,CAAsBC,SAAtB,EAAiCkB,SAASjB,GAA1C,CAHe,CAAjB;;AAMA,QAAIe,QAAJ,EAAc;AACZ,aAAQ,mBAAkBA,SAASf,GAAI,mBAAkBG,IAAK,GAAvD,GACJ,SAAQJ,SAAU,EADrB;AAED;;AACD,WAAO,IAAP;AACD;;AAEDoB,UAAQpB,SAAR,EAAmBI,IAAnB,EAAyB;AACvB,UAAMiB,UACJ,KAAKlB,SAAL,CAAeC,IAAf,KACA,KAAKE,cAAL,CAAoBN,SAApB,EAA+BI,IAA/B,CADA,IAEA,KAAKI,0BAAL,CAAgCR,SAAhC,EAA2CI,IAA3C,CAHF;;AAIA,QAAIiB,OAAJ,EAAa;AACX,YAAM,IAAIC,KAAJ,CAAUD,OAAV,CAAN;AACD,KAPsB,CAQvB;;;AACA,SAAKvB,cAAL,CAAoBE,SAApB,IAAiCI,IAAjC;AACD;;AAEDmB,aAAWtB,GAAX,EAAgB;AACd,WAAOA,IAAIC,UAAJ,CAAe,GAAf,CAAP;AACD;;AAEDsB,WAASvB,GAAT,EAAc;AACZ,QAAI,CAAC,KAAKsB,UAAL,CAAgBtB,GAAhB,CAAL,EAA2B;AACzB,YAAM,IAAIqB,KAAJ,CAAW,+BAA8BrB,GAAI,EAA7C,CAAN;AACD;;AAED,UAAMwB,SAASC,OAAOC,IAAP,CAAY,KAAK7B,cAAjB,EAAiCmB,IAAjC,CAAsCQ,UACnD,KAAK1B,gBAAL,CAAsB0B,MAAtB,EAA8BxB,GAA9B,CADa,CAAf;AAIA,WAAOwB,SAAS,KAAK3B,cAAL,CAAoB2B,MAApB,CAAT,GAAuC,IAA9C;AACD;;AAEDG,iBAAexB,IAAf,EAAqB;AACnB,WAAOsB,OAAOG,OAAP,CAAe,KAAK/B,cAApB,EACJgC,MADI,CACG,CAAC,CAACC,OAAD,EAAUC,KAAV,CAAD,KAAsBA,UAAU5B,IADnC,EAEJ6B,GAFI,CAEA,CAAC,CAACF,OAAD,CAAD,KAAeA,OAFf,EAGJG,IAHI,EAAP;AAID;;AArG8B","sourcesContent":["// In addition to listing specific files to be cached, the browser\n// application cache manifest allows URLs to be designated as NETWORK\n// (always fetched from the Internet) and FALLBACK (which we use to\n// serve app HTML on arbitrary URLs).\n//\n// The limitation of the manifest file format is that the designations\n// are by prefix only: if \"/foo\" is declared NETWORK then \"/foobar\"\n// will also be treated as a network route.\n//\n// RoutePolicy is a low-level API for declaring the route type of URL prefixes:\n//\n// \"network\": for network routes that should not conflict with static\n// resources.  (For example, if \"/sockjs/\" is a network route, we\n// shouldn't have \"/sockjs/red-sock.jpg\" as a static resource).\n//\n// \"static-online\": for static resources which should not be cached in\n// the app cache.  This is implemented by also adding them to the\n// NETWORK section (as otherwise the browser would receive app HTML\n// for them because of the FALLBACK section), but static-online routes\n// don't need to be checked for conflict with static resources.\n\n\nexport default class RoutePolicy {\n  constructor() {\n    // maps prefix to a type\n    this.urlPrefixTypes = {};\n  }\n\n  urlPrefixMatches(urlPrefix, url) {\n    return url.startsWith(urlPrefix);\n  }\n\n  checkType(type) {\n    if (!['network', 'static-online'].includes(type)) {\n      return 'the route type must be \"network\" or \"static-online\"';\n    }\n    return null;\n  }\n\n  checkUrlPrefix(urlPrefix, type) {\n    if (!urlPrefix.startsWith('/')) {\n      return 'a route URL prefix must begin with a slash';\n    }\n\n    if (urlPrefix === '/') {\n      return 'a route URL prefix cannot be /';\n    }\n\n    const existingType = this.urlPrefixTypes[urlPrefix];\n    if (existingType && existingType !== type) {\n      return `the route URL prefix ${urlPrefix} has already been declared ` +\n        `to be of type ${existingType}`;\n    }\n\n    return null;\n  }\n\n  checkForConflictWithStatic(urlPrefix, type, _testManifest) {\n    if (type === 'static-online') {\n      return null;\n    }\n\n    if (!Package.webapp ||\n        !Package.webapp.WebApp ||\n        !Package.webapp.WebApp.clientPrograms ||\n        !Package.webapp.WebApp.clientPrograms[\n          Package.webapp.WebApp.defaultArch].manifest) {\n      // Hack: If we don't have a manifest, deal with it\n      // gracefully. This lets us load livedata into a nodejs\n      // environment that doesn't have a HTTP server (eg, a\n      // command-line tool).\n      return null;\n    }\n\n    const WebApp = Package.webapp.WebApp;\n    const manifest =\n      _testManifest || WebApp.clientPrograms[WebApp.defaultArch].manifest;\n    const conflict = manifest.find(resource => (\n      resource.type === 'static' &&\n      resource.where === 'client' &&\n      this.urlPrefixMatches(urlPrefix, resource.url)\n    ));\n\n    if (conflict) {\n      return `static resource ${conflict.url} conflicts with ${type} ` +\n        `route ${urlPrefix}`;\n    }\n    return null;\n  }\n\n  declare(urlPrefix, type) {\n    const problem =\n      this.checkType(type) ||\n      this.checkUrlPrefix(urlPrefix, type) ||\n      this.checkForConflictWithStatic(urlPrefix, type);\n    if (problem) {\n      throw new Error(problem);\n    }\n    // TODO overlapping prefixes, e.g. /foo/ and /foo/bar/\n    this.urlPrefixTypes[urlPrefix] = type;\n  }\n\n  isValidUrl(url) {\n    return url.startsWith('/');\n  }\n\n  classify(url) {\n    if (!this.isValidUrl(url)) {\n      throw new Error(`url must be a relative URL: ${url}`);\n    }\n\n    const prefix = Object.keys(this.urlPrefixTypes).find(prefix =>\n      this.urlPrefixMatches(prefix, url)\n    );\n\n    return prefix ? this.urlPrefixTypes[prefix] : null;\n  }\n\n  urlPrefixesFor(type) {\n    return Object.entries(this.urlPrefixTypes)\n      .filter(([_prefix, _type]) => _type === type)\n      .map(([_prefix]) => _prefix)\n      .sort();\n  }\n}\n"]},"sourceType":"script","hash":"3db26173c2a065890353bf8a7c86e316a542e985"}
