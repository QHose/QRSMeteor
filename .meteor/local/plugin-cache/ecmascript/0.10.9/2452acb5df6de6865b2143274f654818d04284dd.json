{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"packages/google-oauth/google_sign-in.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/google-oauth/google_sign-in.js","filename":"packages/google-oauth/google_sign-in.js","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/martijn/Documents/GitHub/QRSMeteor","root":"/home/martijn/Documents/GitHub/QRSMeteor","presets":[],"generatorOpts":{"filename":"packages/google-oauth/google_sign-in.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/google-oauth/google_sign-in.js"}},"code":"var Google = require(\"./namespace.js\");\n\nvar gplusPromise = new Promise(function (resolve, reject) {\n  if (!Meteor.isCordova) {\n    reject(new Error(\"plugins.googleplus requires Cordova\"));\n    return;\n  }\n\n  Meteor.startup(function () {\n    var plugins = global.plugins;\n    var gplus = plugins && plugins.googleplus;\n\n    if (gplus) {\n      resolve(gplus);\n    } else {\n      reject(new Error(\"plugins.googleplus not defined\"));\n    }\n  });\n});\n\nfunction tolerateUnhandledRejection() {}\n\ngplusPromise.catch(tolerateUnhandledRejection); // After 20 April 2017, Google OAuth login will no longer work from a\n// WebView, so Cordova apps must use Google Sign-In instead.\n// https://github.com/meteor/meteor/issues/8253\n\nexports.signIn = Google.signIn = function (options, callback) {\n  // support a callback without options\n  if (!callback && typeof options === \"function\") {\n    callback = options;\n    options = null;\n  }\n\n  gplusPromise.then(function (gplus) {\n    var config = ServiceConfiguration.configurations.findOne({\n      service: \"google\"\n    });\n\n    if (!config) {\n      throw new ServiceConfiguration.ConfigError();\n    }\n\n    options = Object.assign(Object.create(null), options);\n    gplus.login({\n      scopes: getScopes(options).join(\" \"),\n      webClientId: config.clientId,\n      offline: true\n    }, function (response) {\n      Accounts.callLoginMethod({\n        methodArguments: [Object.assign({\n          googleSignIn: true\n        }, response)],\n        userCallback: callback\n      });\n    }, callback);\n  }).catch(callback);\n};\n\nfunction getScopes(options) {\n  // we need the email scope to get user id from google.\n  var requiredScopes = {\n    'email': 1\n  };\n  var scopes = options.requestPermissions || ['profile'];\n  scopes.forEach(function (scope) {\n    requiredScopes[scope] = 1;\n  });\n  return Object.keys(requiredScopes);\n}\n\nexports.signOut = Google.signOut = function () {\n  return gplusPromise.then(function (gplus) {\n    return new Promise(function (resolve) {\n      gplus.logout(resolve);\n    });\n  });\n}; // Make sure we don't stay logged in with Google Sign-In after the client\n// calls Meteor.logout().\n\n\nMeteor.startup(function () {\n  Accounts.onLogout(function () {\n    Google.signOut().catch(tolerateUnhandledRejection);\n  });\n});","map":{"version":3,"sources":["packages/google-oauth/google_sign-in.js"],"names":["Google","require","gplusPromise","Promise","resolve","reject","Meteor","isCordova","Error","startup","plugins","global","gplus","googleplus","tolerateUnhandledRejection","catch","exports","signIn","options","callback","then","config","ServiceConfiguration","configurations","findOne","service","ConfigError","Object","assign","create","login","scopes","getScopes","join","webClientId","clientId","offline","response","Accounts","callLoginMethod","methodArguments","googleSignIn","userCallback","requiredScopes","requestPermissions","forEach","scope","keys","signOut","logout","onLogout"],"mappings":"AAAA,IAAIA,SAASC,QAAQ,gBAAR,CAAb;;AAEA,IAAIC,eAAe,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AACxD,MAAI,CAAEC,OAAOC,SAAb,EAAwB;AACtBF,WAAO,IAAIG,KAAJ,CAAU,qCAAV,CAAP;AACA;AACD;;AAEDF,SAAOG,OAAP,CAAe,YAAY;AACzB,QAAIC,UAAUC,OAAOD,OAArB;AACA,QAAIE,QAAQF,WAAWA,QAAQG,UAA/B;;AACA,QAAID,KAAJ,EAAW;AACTR,cAAQQ,KAAR;AACD,KAFD,MAEO;AACLP,aAAO,IAAIG,KAAJ,CAAU,gCAAV,CAAP;AACD;AACF,GARD;AASD,CAfkB,CAAnB;;AAiBA,SAASM,0BAAT,GAAsC,CAAE;;AACxCZ,aAAaa,KAAb,CAAmBD,0BAAnB,E,CAEA;AACA;AACA;;AACAE,QAAQC,MAAR,GAAiBjB,OAAOiB,MAAP,GAAgB,UAAUC,OAAV,EAAmBC,QAAnB,EAA6B;AAC5D;AACA,MAAI,CAAEA,QAAF,IAAc,OAAOD,OAAP,KAAmB,UAArC,EAAiD;AAC/CC,eAAWD,OAAX;AACAA,cAAU,IAAV;AACD;;AAEDhB,eAAakB,IAAb,CAAkB,UAAUR,KAAV,EAAiB;AACjC,QAAIS,SAASC,qBAAqBC,cAArB,CAAoCC,OAApC,CAA4C;AACvDC,eAAS;AAD8C,KAA5C,CAAb;;AAIA,QAAI,CAAEJ,MAAN,EAAc;AACZ,YAAM,IAAIC,qBAAqBI,WAAzB,EAAN;AACD;;AAEDR,cAAUS,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,IAAd,CAAd,EAAmCX,OAAnC,CAAV;AAEAN,UAAMkB,KAAN,CAAY;AACVC,cAAQC,UAAUd,OAAV,EAAmBe,IAAnB,CAAwB,GAAxB,CADE;AAEVC,mBAAab,OAAOc,QAFV;AAGVC,eAAS;AAHC,KAAZ,EAIG,UAAUC,QAAV,EAAoB;AACrBC,eAASC,eAAT,CAAyB;AACvBC,yBAAiB,CAACb,OAAOC,MAAP,CAAc;AAC9Ba,wBAAc;AADgB,SAAd,EAEfJ,QAFe,CAAD,CADM;AAIvBK,sBAAcvB;AAJS,OAAzB;AAMD,KAXD,EAWGA,QAXH;AAaD,GAxBD,EAwBGJ,KAxBH,CAwBSI,QAxBT;AAyBD,CAhCD;;AAkCA,SAASa,SAAT,CAAmBd,OAAnB,EAA4B;AAC1B;AACA,MAAIyB,iBAAiB;AAAE,aAAS;AAAX,GAArB;AACA,MAAIZ,SAASb,QAAQ0B,kBAAR,IAA8B,CAAC,SAAD,CAA3C;AAEAb,SAAOc,OAAP,CAAe,UAAUC,KAAV,EAAiB;AAC9BH,mBAAeG,KAAf,IAAwB,CAAxB;AACD,GAFD;AAIA,SAAOnB,OAAOoB,IAAP,CAAYJ,cAAZ,CAAP;AACD;;AAED3B,QAAQgC,OAAR,GAAkBhD,OAAOgD,OAAP,GAAiB,YAAY;AAC7C,SAAO9C,aAAakB,IAAb,CAAkB,UAAUR,KAAV,EAAiB;AACxC,WAAO,IAAIT,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AACpCQ,YAAMqC,MAAN,CAAa7C,OAAb;AACD,KAFM,CAAP;AAGD,GAJM,CAAP;AAKD,CAND,C,CAQA;AACA;;;AACAE,OAAOG,OAAP,CAAe,YAAY;AACzB6B,WAASY,QAAT,CAAkB,YAAY;AAC5BlD,WAAOgD,OAAP,GAAiBjC,KAAjB,CAAuBD,0BAAvB;AACD,GAFD;AAGD,CAJD","sourcesContent":["var Google = require(\"./namespace.js\");\n\nvar gplusPromise = new Promise(function (resolve, reject) {\n  if (! Meteor.isCordova) {\n    reject(new Error(\"plugins.googleplus requires Cordova\"));\n    return;\n  }\n\n  Meteor.startup(function () {\n    var plugins = global.plugins;\n    var gplus = plugins && plugins.googleplus;\n    if (gplus) {\n      resolve(gplus);\n    } else {\n      reject(new Error(\"plugins.googleplus not defined\"));\n    }\n  });\n});\n\nfunction tolerateUnhandledRejection() {}\ngplusPromise.catch(tolerateUnhandledRejection);\n\n// After 20 April 2017, Google OAuth login will no longer work from a\n// WebView, so Cordova apps must use Google Sign-In instead.\n// https://github.com/meteor/meteor/issues/8253\nexports.signIn = Google.signIn = function (options, callback) {\n  // support a callback without options\n  if (! callback && typeof options === \"function\") {\n    callback = options;\n    options = null;\n  }\n\n  gplusPromise.then(function (gplus) {\n    var config = ServiceConfiguration.configurations.findOne({\n      service: \"google\"\n    });\n\n    if (! config) {\n      throw new ServiceConfiguration.ConfigError();\n    }\n\n    options = Object.assign(Object.create(null), options);\n\n    gplus.login({\n      scopes: getScopes(options).join(\" \"),\n      webClientId: config.clientId,\n      offline: true\n    }, function (response) {\n      Accounts.callLoginMethod({\n        methodArguments: [Object.assign({\n          googleSignIn: true\n        }, response)],\n        userCallback: callback\n      });\n    }, callback);\n\n  }).catch(callback);\n};\n\nfunction getScopes(options) {\n  // we need the email scope to get user id from google.\n  var requiredScopes = { 'email': 1 };\n  var scopes = options.requestPermissions || ['profile'];\n\n  scopes.forEach(function (scope) {\n    requiredScopes[scope] = 1;\n  });\n\n  return Object.keys(requiredScopes);\n}\n\nexports.signOut = Google.signOut = function () {\n  return gplusPromise.then(function (gplus) {\n    return new Promise(function (resolve) {\n      gplus.logout(resolve);\n    });\n  });\n};\n\n// Make sure we don't stay logged in with Google Sign-In after the client\n// calls Meteor.logout().\nMeteor.startup(function () {\n  Accounts.onLogout(function () {\n    Google.signOut().catch(tolerateUnhandledRejection);\n  });\n});\n"]},"sourceType":"script","hash":"2452acb5df6de6865b2143274f654818d04284dd"}
