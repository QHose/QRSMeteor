{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"packages/check/match_test.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/check/match_test.js","filename":"packages/check/match_test.js","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/martijn/Documents/GitHub/QRSMeteor","root":"/home/martijn/Documents/GitHub/QRSMeteor","generatorOpts":{"filename":"packages/check/match_test.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/check/match_test.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _readOnlyError2 = _interopRequireDefault(require(\"@babel/runtime/helpers/readOnlyError\"));\n\nTinytest.add('check - check', function (test) {\n  var matches = function (value, pattern) {\n    var error;\n\n    try {\n      check(value, pattern);\n    } catch (e) {\n      error = e;\n    }\n\n    test.isFalse(error);\n    test.isTrue(Match.test(value, pattern));\n  };\n\n  var fails = function (value, pattern) {\n    var error;\n\n    try {\n      check(value, pattern);\n    } catch (e) {\n      error = e;\n    }\n\n    test.isTrue(error);\n    test.instanceOf(error, Match.Error);\n    test.isFalse(Match.test(value, pattern));\n  }; // Atoms.\n\n\n  var pairs = [['foo', String], ['', String], [0, Number], [42.59, Number], [NaN, Number], [Infinity, Number], [true, Boolean], [false, Boolean], [function () {}, Function], [undefined, undefined], [null, null]];\n  pairs.forEach(function (pair) {\n    matches(pair[0], Match.Any);\n    [String, Number, Boolean, undefined, null].forEach(function (type) {\n      if (type === pair[1]) {\n        matches(pair[0], type);\n        matches(pair[0], Match.Optional(type));\n        matches(undefined, Match.Optional(type));\n        matches(pair[0], Match.Maybe(type));\n        matches(undefined, Match.Maybe(type));\n        matches(null, Match.Maybe(type));\n        matches(pair[0], Match.Where(function () {\n          check(pair[0], type);\n          return true;\n        }));\n        matches(pair[0], Match.Where(function () {\n          try {\n            check(pair[0], type);\n            return true;\n          } catch (e) {\n            return false;\n          }\n        }));\n      } else {\n        fails(pair[0], type);\n        matches(pair[0], Match.OneOf(type, pair[1]));\n        matches(pair[0], Match.OneOf(pair[1], type));\n        fails(pair[0], Match.Where(function () {\n          check(pair[0], type);\n          return true;\n        }));\n        fails(pair[0], Match.Where(function () {\n          try {\n            check(pair[0], type);\n            return true;\n          } catch (e) {\n            return false;\n          }\n        }));\n      }\n\n      if (type !== null) {\n        // Optional doesn't allow null, but does match on null type\n        fails(null, Match.Optional(type));\n      }\n\n      fails(pair[0], [type]);\n      fails(pair[0], Object);\n    });\n  });\n  fails(true, Match.OneOf(String, Number, undefined, null, [Boolean]));\n  fails(new String('foo'), String);\n  fails(new Boolean(true), Boolean);\n  fails(new Number(123), Number);\n  matches([1, 2, 3], [Number]);\n  matches([], [Number]);\n  fails([1, 2, 3, '4'], [Number]);\n  fails([1, 2, 3, [4]], [Number]);\n  matches([1, 2, 3, '4'], [Match.OneOf(Number, String)]);\n  matches({}, Object);\n  matches({}, {});\n  matches({\n    foo: 42\n  }, Object);\n  fails({\n    foo: 42\n  }, {});\n  matches({\n    a: 1,\n    b: 2\n  }, {\n    b: Number,\n    a: Number\n  });\n  fails({\n    a: 1,\n    b: 2\n  }, {\n    b: Number\n  });\n  matches({\n    a: 1,\n    b: 2\n  }, Match.ObjectIncluding({\n    b: Number\n  }));\n  fails({\n    a: 1,\n    b: 2\n  }, Match.ObjectIncluding({\n    b: String\n  }));\n  fails({\n    a: 1,\n    b: 2\n  }, Match.ObjectIncluding({\n    c: String\n  }));\n  fails({}, {\n    a: Number\n  });\n  matches({\n    nodeType: 1\n  }, {\n    nodeType: Match.Any\n  });\n  matches({\n    nodeType: 1\n  }, Match.ObjectIncluding({\n    nodeType: Match.Any\n  }));\n  fails({\n    nodeType: 1\n  }, {\n    nodeType: String\n  });\n  fails({}, Match.ObjectIncluding({\n    nodeType: Match.Any\n  })); // Match.Optional does not match on a null value, unless the allowed type is itself \"null\"\n\n  fails(null, Match.Optional(String));\n  fails(null, Match.Optional(undefined));\n  matches(null, Match.Optional(null)); // on the other hand, undefined, works fine for all of them\n\n  matches(undefined, Match.Optional(String));\n  matches(undefined, Match.Optional(undefined));\n  matches(undefined, Match.Optional(null));\n  fails(true, Match.Optional(String)); // different should still fail\n\n  matches('String', Match.Optional(String)); // same should pass\n\n  matches({}, {\n    a: Match.Optional(Number)\n  });\n  matches({\n    a: 1\n  }, {\n    a: Match.Optional(Number)\n  });\n  fails({\n    a: true\n  }, {\n    a: Match.Optional(Number)\n  });\n  fails({\n    a: undefined\n  }, {\n    a: Match.Optional(Number)\n  }); // .Maybe requires undefined, null or the allowed type in order to match\n\n  matches(null, Match.Maybe(String));\n  matches(null, Match.Maybe(undefined));\n  matches(null, Match.Maybe(null));\n  matches(undefined, Match.Maybe(String));\n  matches(undefined, Match.Maybe(undefined));\n  matches(undefined, Match.Maybe(null));\n  fails(true, Match.Maybe(String)); // different should still fail\n\n  matches('String', Match.Maybe(String)); // same should pass\n\n  matches({}, {\n    a: Match.Maybe(Number)\n  });\n  matches({\n    a: 1\n  }, {\n    a: Match.Maybe(Number)\n  });\n  fails({\n    a: true\n  }, {\n    a: Match.Maybe(Number)\n  }); // Match.Optional means \"or undefined\" at the top level but \"or absent\" in\n  // objects.\n  // Match.Maybe should behave the same as Match.Optional in objects\n  // including handling nulls\n\n  fails({\n    a: undefined\n  }, {\n    a: Match.Maybe(Number)\n  });\n  fails({\n    a: null\n  }, {\n    a: Match.Maybe(Number)\n  });\n\n  var F = function () {\n    this.x = 123;\n  };\n\n  fails(new F(), {\n    x: 123\n  });\n  matches({}, Match.ObjectWithValues(Number));\n  matches({\n    x: 1\n  }, Match.ObjectWithValues(Number));\n  matches({\n    x: 1,\n    y: 2\n  }, Match.ObjectWithValues(Number));\n  fails({\n    x: 1,\n    y: '2'\n  }, Match.ObjectWithValues(Number));\n  matches('asdf', 'asdf');\n  fails('asdf', 'monkey');\n  matches(123, 123);\n  fails(123, 456);\n  fails('123', 123);\n  fails(123, '123');\n  matches(true, true);\n  matches(false, false);\n  fails(true, false);\n  fails(true, 'true');\n  fails('false', false);\n  matches(/foo/, RegExp);\n  fails(/foo/, String);\n  matches(new Date(), Date);\n  fails(new Date(), Number);\n  matches(EJSON.newBinary(42), Match.Where(EJSON.isBinary));\n  fails([], Match.Where(EJSON.isBinary));\n  matches(42, Match.Where(function (x) {\n    return x % 2 === 0;\n  }));\n  fails(43, Match.Where(function (x) {\n    return x % 2 === 0;\n  }));\n  matches({\n    a: 'something',\n    b: [{\n      x: 42,\n      k: null\n    }, {\n      x: 43,\n      k: true,\n      p: ['yay']\n    }]\n  }, {\n    a: String,\n    b: [Match.ObjectIncluding({\n      x: Number,\n      k: Match.OneOf(null, Boolean)\n    })]\n  }); // Match.Integer\n\n  matches(-1, Match.Integer);\n  matches(0, Match.Integer);\n  matches(1, Match.Integer);\n  matches(-2147483648, Match.Integer); // INT_MIN\n\n  matches(2147483647, Match.Integer); // INT_MAX\n\n  fails(123.33, Match.Integer);\n  fails(.33, Match.Integer);\n  fails(1.348192308491824e+23, Match.Integer);\n  fails(NaN, Match.Integer);\n  fails(Infinity, Match.Integer);\n  fails(-Infinity, Match.Integer);\n  fails({}, Match.Integer);\n  fails([], Match.Integer);\n  fails(function () {}, Match.Integer);\n  fails(new Date(), Match.Integer); // Test non-plain objects.\n\n  var parentObj = {\n    foo: 'bar'\n  };\n  var childObj = Object.assign(Object.create(parentObj), {\n    bar: 'foo'\n  });\n  matches(parentObj, Object);\n  fails(parentObj, {\n    foo: String,\n    bar: String\n  });\n  fails(parentObj, {\n    bar: String\n  });\n  matches(parentObj, {\n    foo: String\n  });\n  fails(childObj, Object);\n  fails(childObj, {\n    foo: String,\n    bar: String\n  });\n  fails(childObj, {\n    bar: String\n  });\n  fails(childObj, {\n    foo: String\n  }); // Functions\n\n  var testFunction = function () {};\n\n  matches(testFunction, Function);\n  fails(5, Function); // Circular Reference \"Classes\"\n\n  var TestInstanceChild = function () {};\n\n  var TestInstanceParent = function (child) {\n    child._parent = this;\n    this.child = child;\n  };\n\n  var testInstanceChild = new TestInstanceChild();\n  var testInstanceParent = new TestInstanceParent(testInstanceChild);\n  matches(TestInstanceParent, Function);\n  matches(testInstanceParent, TestInstanceParent);\n  fails(testInstanceChild, TestInstanceParent);\n  matches(testInstanceParent, Match.Optional(TestInstanceParent));\n  matches(testInstanceParent, Match.Maybe(TestInstanceParent)); // Circular Reference Objects\n\n  var circleFoo = {};\n  var circleBar = {};\n  circleFoo.bar = circleBar;\n  circleBar.foo = circleFoo;\n  fails(circleFoo, null); // Test that \"arguments\" is treated like an array.\n\n  var argumentsMatches = function () {\n    matches(arguments, [Number]);\n  };\n\n  argumentsMatches();\n  argumentsMatches(1);\n  argumentsMatches(1, 2);\n\n  var argumentsFails = function () {\n    fails(arguments, [Number]);\n  };\n\n  argumentsFails('123');\n  argumentsFails(1, '23');\n});\nTinytest.add('check - argument checker', function (test) {\n  var checksAllArguments = function (f) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return Match._failIfArgumentsAreNotAllChecked(f, {}, args, 'test');\n  };\n\n  checksAllArguments(function () {});\n  checksAllArguments(function (x) {\n    return check(x, Match.Any);\n  }, undefined);\n  checksAllArguments(function (x) {\n    return check(x, Match.Any);\n  }, null);\n  checksAllArguments(function (x) {\n    return check(x, Match.Any);\n  }, false);\n  checksAllArguments(function (x) {\n    return check(x, Match.Any);\n  }, true);\n  checksAllArguments(function (x) {\n    return check(x, Match.Any);\n  }, 0);\n  checksAllArguments(function (a, b, c) {\n    check(a, String);\n    check(b, Boolean);\n    check(c, Match.Optional(Number));\n  }, 'foo', true);\n  checksAllArguments(function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return check(args, [Number]);\n  }, 1, 2, 4);\n  checksAllArguments(function (x) {\n    check(x, Number);\n\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n\n    check(args, [String]);\n  }, 1, 'foo', 'bar', 'baz'); // NaN values\n\n  checksAllArguments(function (x) {\n    return check(x, Number);\n  }, NaN);\n\n  var doesntCheckAllArguments = function (f) {\n    try {\n      for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n        args[_key4 - 1] = arguments[_key4];\n      }\n\n      Match._failIfArgumentsAreNotAllChecked(f, {}, args, 'test');\n\n      test.fail({\n        message: 'expected _failIfArgumentsAreNotAllChecked to throw'\n      });\n    } catch (e) {\n      test.equal(e.message, 'Did not check() all arguments during test');\n    }\n  };\n\n  doesntCheckAllArguments(function () {}, undefined);\n  doesntCheckAllArguments(function () {}, null);\n  doesntCheckAllArguments(function () {}, 1);\n  doesntCheckAllArguments(function (x) {\n    for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n      args[_key5 - 1] = arguments[_key5];\n    }\n\n    return check(args, [String]);\n  }, 1, 'asdf', 'foo');\n  doesntCheckAllArguments(function (x, y) {\n    return check(x, Boolean);\n  }, true, false); // One \"true\" check doesn't count for all.\n\n  doesntCheckAllArguments(function (x, y) {\n    return check(x, Boolean);\n  }, true, true); // For non-primitives, we really do require that each arg gets checked.\n\n  doesntCheckAllArguments(function (x, y) {\n    check(x, [Boolean]);\n    check(x, [Boolean]);\n  }, [true], [true]); // In an ideal world this test would fail, but we currently can't\n  // differentiate between \"two calls to check x, both of which are true\" and\n  // \"check x and check y, both of which are true\" (for any interned primitive\n  // type).\n\n  checksAllArguments(function (x, y) {\n    check(x, Boolean);\n    check(x, Boolean);\n  }, true, true);\n});\nTinytest.add('check - Match error path', function (test) {\n  var match = function (value, pattern, expectedPath) {\n    try {\n      check(value, pattern);\n    } catch (err) {\n      // XXX just for FF 3.6, its JSON stringification prefers \"\\u000a\" to \"\\n\"\n      err.path = err.path.replace(/\\\\u000a/, '\\\\n');\n\n      if (err.path != expectedPath) {\n        test.fail({\n          type: 'match-error-path',\n          message: \"The path of Match.Error doesn't match.\",\n          pattern: JSON.stringify(pattern),\n          value: JSON.stringify(value),\n          path: err.path,\n          expectedPath: expectedPath\n        });\n      }\n    }\n  };\n\n  match({\n    foo: [{\n      bar: 3\n    }, {\n      bar: 'something'\n    }]\n  }, {\n    foo: [{\n      bar: Number\n    }]\n  }, 'foo[1].bar'); // Complicated case with arrays, $, whitespace and quotes!\n\n  match([{\n    $FoO: {\n      \"bar baz\\n\\\"'\": 3\n    }\n  }], [{\n    $FoO: {\n      \"bar baz\\n\\\"'\": String\n    }\n  }], \"[0].$FoO[\\\"bar baz\\\\n\\\\\\\"'\\\"]\"); // Numbers only, can be accessed w/o quotes\n\n  match({\n    '1231': 123\n  }, {\n    '1231': String\n  }, '[1231]');\n  match({\n    '1234abcd': 123\n  }, {\n    '1234abcd': String\n  }, '[\\\"1234abcd\\\"]');\n  match({\n    $set: {\n      people: 'nice'\n    }\n  }, {\n    $set: {\n      people: [String]\n    }\n  }, '$set.people');\n  match({\n    _underscore: 'should work'\n  }, {\n    _underscore: Number\n  }, '_underscore'); // Nested array looks nice\n\n  match([[['something', 'here'], []], [['string', 123]]], [[[String]]], '[1][0][1]'); // Object nested in arrays should look nice, too!\n\n  match([[[{\n    foo: 'something'\n  }, {\n    foo: 'here'\n  }], [{\n    foo: 'asdf'\n  }]], [[{\n    foo: 123\n  }]]], [[[{\n    foo: String\n  }]]], '[1][0][0].foo'); // JS keyword\n\n  match({\n    'return': 0\n  }, {\n    'return': String\n  }, '[\\\"return\\\"]');\n});\nTinytest.add('check - Match error message', function (test) {\n  var match = function (value, pattern, expectedMessage) {\n    try {\n      check(value, pattern);\n    } catch (err) {\n      if (err.message !== \"Match error: \" + expectedMessage) {\n        test.fail({\n          type: 'match-error-message',\n          message: \"The message of Match.Error doesn't match.\",\n          pattern: JSON.stringify(pattern),\n          value: JSON.stringify(value),\n          errorMessage: err.message,\n          expectedErrorMessage: expectedErrorMessage\n        });\n      }\n    }\n  };\n\n  match(2, String, 'Expected string, got number');\n  match({\n    key: 0\n  }, Number, 'Expected number, got object');\n  match(null, Boolean, 'Expected boolean, got null');\n  match('string', undefined, 'Expected undefined, got string');\n  match(true, null, 'Expected null, got true');\n  match({}, Match.ObjectIncluding({\n    bar: String\n  }), \"Missing key 'bar'\");\n  match(null, Object, 'Expected object, got null');\n  match(null, Function, 'Expected function, got null');\n  match('bar', 'foo', 'Expected foo, got \\\"bar\\\"');\n  match(3.14, Match.Integer, 'Expected Integer, got 3.14');\n  match(false, [Boolean], 'Expected array, got false');\n  match([null, null], [String], 'Expected string, got null in field [0]');\n  match(2, {\n    key: 2\n  }, 'Expected object, got number');\n  match(null, {\n    key: 2\n  }, 'Expected object, got null');\n  match(new Date(), {\n    key: 2\n  }, 'Expected plain object');\n\n  var TestInstanceChild = function () {};\n\n  var TestInstanceParent = function (child) {\n    child._parent = this;\n    this.child = child;\n  };\n\n  var testInstanceChild = new TestInstanceChild();\n  var testInstanceParent = new TestInstanceParent(testInstanceChild);\n  match(testInstanceChild, TestInstanceParent, \"Expected \" + (TestInstanceParent.name || 'particular constructor'));\n  var circleFoo = {};\n  var circleBar = {};\n  circleFoo.bar = circleBar;\n  circleBar.foo = circleFoo;\n  match(circleFoo, null, 'Expected null, got object');\n}); // Regression test for https://github.com/meteor/meteor/issues/2136\n\nMeteor.isServer && Tinytest.addAsync('check - non-fiber check works', function (test, onComplete) {\n  var Fiber = Npm.require('fibers'); // We can only call test.isTrue inside normal Meteor Fibery code, so give us a\n  // bindEnvironment way to get back.\n\n\n  var report = Meteor.bindEnvironment(function (success) {\n    test.isTrue(success);\n    onComplete();\n  }); // Get out of a fiber with process.nextTick and ensure that we can still use\n  // check.\n\n  process.nextTick(function () {\n    var success = true;\n\n    if (Fiber.current) {\n      success = ((0, _readOnlyError2.default)(\"success\"), false);\n    }\n\n    if (success) {\n      try {\n        check(true, Boolean);\n      } catch (e) {\n        success = ((0, _readOnlyError2.default)(\"success\"), false);\n      }\n    }\n\n    report(success);\n  });\n});\nTinytest.add('check - Match methods that return class instances can be called as ' + 'constructors', function (test) {\n  // Existing code sometimes uses these properties as constructors, so we can't\n  // switch them to arrow functions or method shorthand.\n  test.equal(new Match.Optional(), Match.Optional());\n  test.equal(new Match.Maybe(), Match.Maybe());\n  test.equal(new Match.OneOf([1]), Match.OneOf([1])); // Needs a non-empty array\n\n  test.equal(new Match.Where(), Match.Where());\n  test.equal(new Match.ObjectIncluding(), Match.ObjectIncluding());\n  test.equal(new Match.ObjectWithValues(), Match.ObjectWithValues());\n});","map":{"version":3,"sources":["packages/check/match_test.js"],"names":["Tinytest","add","matches","value","pattern","error","check","e","test","isFalse","isTrue","Match","fails","instanceOf","Error","pairs","String","Number","NaN","Infinity","Boolean","Function","undefined","forEach","pair","Any","type","Optional","Maybe","Where","OneOf","Object","foo","a","b","ObjectIncluding","c","nodeType","F","x","ObjectWithValues","y","RegExp","Date","EJSON","newBinary","isBinary","k","p","Integer","parentObj","childObj","assign","create","bar","testFunction","TestInstanceChild","TestInstanceParent","child","_parent","testInstanceChild","testInstanceParent","circleFoo","circleBar","argumentsMatches","arguments","argumentsFails","checksAllArguments","f","args","_failIfArgumentsAreNotAllChecked","doesntCheckAllArguments","fail","message","equal","match","expectedPath","err","path","replace","JSON","stringify","$FoO","$set","people","_underscore","expectedMessage","errorMessage","expectedErrorMessage","key","name","Meteor","isServer","addAsync","onComplete","Fiber","Npm","require","report","bindEnvironment","success","process","nextTick","current"],"mappings":"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","sourcesContent":["Tinytest.add('check - check', test => {\n  const matches = (value, pattern) => {\n    let error;\n    try {\n      check(value, pattern);\n    } catch (e) {\n      error = e;\n    }\n\n    test.isFalse(error);\n    test.isTrue(Match.test(value, pattern));\n  };\n\n  const fails = (value, pattern) => {\n    let error;\n    try {\n      check(value, pattern);\n    } catch (e) {\n      error = e;\n    }\n\n    test.isTrue(error);\n    test.instanceOf(error, Match.Error);\n    test.isFalse(Match.test(value, pattern));\n  };\n\n  // Atoms.\n  const pairs = [\n    ['foo', String],\n    ['', String],\n    [0, Number],\n    [42.59, Number],\n    [NaN, Number],\n    [Infinity, Number],\n    [true, Boolean],\n    [false, Boolean],\n    [function(){}, Function],\n    [undefined, undefined],\n    [null, null]\n  ];\n  pairs.forEach(pair => {\n    matches(pair[0], Match.Any);\n    [String, Number, Boolean, undefined, null].forEach(type => {\n      if (type === pair[1]) {\n        matches(pair[0], type);\n        matches(pair[0], Match.Optional(type));\n        matches(undefined, Match.Optional(type));\n        matches(pair[0], Match.Maybe(type));\n        matches(undefined, Match.Maybe(type));\n        matches(null, Match.Maybe(type));\n        matches(pair[0], Match.Where(() => {\n          check(pair[0], type);\n          return true;\n        }));\n        matches(pair[0], Match.Where(() => {\n          try {\n            check(pair[0], type);\n            return true;\n          } catch (e) {\n            return false;\n          }\n        }));\n      } else {\n        fails(pair[0], type);\n        matches(pair[0], Match.OneOf(type, pair[1]));\n        matches(pair[0], Match.OneOf(pair[1], type));\n        fails(pair[0], Match.Where(() => {\n          check(pair[0], type);\n          return true;\n        }));\n        fails(pair[0], Match.Where(() => {\n          try {\n            check(pair[0], type);\n            return true;\n          } catch (e) {\n            return false;\n          }\n        }));\n      }\n      \n      if ( type !== null ) {\n\n        // Optional doesn't allow null, but does match on null type\n        fails(null, Match.Optional(type));\n       }\n      fails(pair[0], [type]);\n      fails(pair[0], Object);\n    });\n  });\n  fails(true, Match.OneOf(String, Number, undefined, null, [Boolean]));\n  fails(new String('foo'), String);\n  fails(new Boolean(true), Boolean);\n  fails(new Number(123), Number);\n\n  matches([1, 2, 3], [Number]);\n  matches([], [Number]);\n  fails([1, 2, 3, '4'], [Number]);\n  fails([1, 2, 3, [4]], [Number]);\n  matches([1, 2, 3, '4'], [Match.OneOf(Number, String)]);\n\n  matches({}, Object);\n  matches({}, {});\n  matches({foo: 42}, Object);\n  fails({foo: 42}, {});\n  matches({a: 1, b:2}, {b: Number, a: Number});\n  fails({a: 1, b:2}, {b: Number});\n  matches({a: 1, b:2}, Match.ObjectIncluding({b: Number}));\n  fails({a: 1, b:2}, Match.ObjectIncluding({b: String}));\n  fails({a: 1, b:2}, Match.ObjectIncluding({c: String}));\n  fails({}, {a: Number});\n  matches({nodeType: 1}, {nodeType: Match.Any});\n  matches({nodeType: 1}, Match.ObjectIncluding({nodeType: Match.Any}));\n  fails({nodeType: 1}, {nodeType: String});\n  fails({}, Match.ObjectIncluding({nodeType: Match.Any}));\n\n  // Match.Optional does not match on a null value, unless the allowed type is itself \"null\"\n  fails(null, Match.Optional(String));\n  fails(null, Match.Optional(undefined));\n  matches(null, Match.Optional(null));\n\n  // on the other hand, undefined, works fine for all of them\n  matches(undefined, Match.Optional(String));\n  matches(undefined, Match.Optional(undefined));\n  matches(undefined, Match.Optional(null));\n\n  fails(true, Match.Optional(String)); // different should still fail\n  matches('String', Match.Optional(String)); // same should pass\n\n  matches({}, {a: Match.Optional(Number)});\n  matches({a: 1}, {a: Match.Optional(Number)});\n  fails({a: true}, {a: Match.Optional(Number)});\n  fails({a: undefined}, {a: Match.Optional(Number)});\n\n  // .Maybe requires undefined, null or the allowed type in order to match\n  matches(null, Match.Maybe(String));\n  matches(null, Match.Maybe(undefined));\n  matches(null, Match.Maybe(null));\n\n  matches(undefined, Match.Maybe(String));\n  matches(undefined, Match.Maybe(undefined));\n  matches(undefined, Match.Maybe(null));\n\n  fails(true, Match.Maybe(String)); // different should still fail\n  matches('String', Match.Maybe(String)); // same should pass\n\n  matches({}, {a: Match.Maybe(Number)});\n  matches({a: 1}, {a: Match.Maybe(Number)});\n  fails({a: true}, {a: Match.Maybe(Number)});\n\n  // Match.Optional means \"or undefined\" at the top level but \"or absent\" in\n  // objects.\n  // Match.Maybe should behave the same as Match.Optional in objects\n  // including handling nulls\n  fails({a: undefined}, {a: Match.Maybe(Number)});\n  fails({a: null}, {a: Match.Maybe(Number)});\n  const F = function () {\n    this.x = 123;\n  };\n\n  fails(new F, { x: 123 });\n\n  matches({}, Match.ObjectWithValues(Number));\n  matches({x: 1}, Match.ObjectWithValues(Number));\n  matches({x: 1, y: 2}, Match.ObjectWithValues(Number));\n  fails({x: 1, y: '2'}, Match.ObjectWithValues(Number));\n\n  matches('asdf', 'asdf');\n  fails('asdf', 'monkey');\n  matches(123, 123);\n  fails(123, 456);\n  fails('123', 123);\n  fails(123, '123');\n  matches(true, true);\n  matches(false, false);\n  fails(true, false);\n  fails(true, 'true');\n  fails('false', false);\n\n  matches(/foo/, RegExp);\n  fails(/foo/, String);\n  matches(new Date, Date);\n  fails(new Date, Number);\n  matches(EJSON.newBinary(42), Match.Where(EJSON.isBinary));\n  fails([], Match.Where(EJSON.isBinary));\n\n  matches(42, Match.Where(x => x % 2 === 0));\n  fails(43, Match.Where(x => x % 2 === 0));\n\n  matches({\n    a: 'something',\n    b: [\n      {x: 42, k: null},\n      {x: 43, k: true, p: ['yay']},\n    ],\n  }, {\n    a: String, \n    b: [\n      Match.ObjectIncluding({\n        x: Number,\n        k: Match.OneOf(null, Boolean)\n      }),\n    ],\n  });\n\n\n  // Match.Integer\n  matches(-1, Match.Integer);\n  matches(0, Match.Integer);\n  matches(1, Match.Integer);\n  matches(-2147483648, Match.Integer); // INT_MIN\n  matches(2147483647, Match.Integer); // INT_MAX\n  fails(123.33, Match.Integer);\n  fails(.33, Match.Integer);\n  fails(1.348192308491824e+23, Match.Integer);\n  fails(NaN, Match.Integer);\n  fails(Infinity, Match.Integer);\n  fails(-Infinity, Match.Integer);\n  fails({}, Match.Integer);\n  fails([], Match.Integer);\n  fails(function () {}, Match.Integer);\n  fails(new Date, Match.Integer);\n\n\n  // Test non-plain objects.\n  const parentObj = {foo: 'bar'};\n  const childObj = Object.assign(Object.create(parentObj), {bar: 'foo'});\n  matches(parentObj, Object);\n  fails(parentObj, {foo: String, bar: String});\n  fails(parentObj, {bar: String});\n  matches(parentObj, {foo: String});\n  fails(childObj, Object);\n  fails(childObj, {foo: String, bar: String});\n  fails(childObj, {bar: String});\n  fails(childObj, {foo: String});\n\n  // Functions\n  const testFunction = () => {};\n  matches(testFunction, Function);\n  fails(5, Function);\n\n  // Circular Reference \"Classes\"\n\n  const TestInstanceChild = function () {};\n  const TestInstanceParent = function (child) {\n    child._parent = this;\n    this.child = child;\n  };\n\n  const testInstanceChild = new TestInstanceChild()\n  const testInstanceParent = new TestInstanceParent(testInstanceChild);\n\n  matches(TestInstanceParent, Function);\n  matches(testInstanceParent, TestInstanceParent);\n  fails(testInstanceChild, TestInstanceParent);\n\n  matches(testInstanceParent, Match.Optional(TestInstanceParent));\n  matches(testInstanceParent, Match.Maybe(TestInstanceParent));\n\n  // Circular Reference Objects\n\n  const circleFoo = {};\n  const circleBar = {};\n  circleFoo.bar = circleBar;\n  circleBar.foo = circleFoo;\n  fails(circleFoo, null);\n\n  // Test that \"arguments\" is treated like an array.\n  const argumentsMatches = function () {\n    matches(arguments, [Number]);\n  };\n  argumentsMatches();\n  argumentsMatches(1);\n  argumentsMatches(1, 2);\n  const argumentsFails = function () {\n    fails(arguments, [Number]);\n  };\n  argumentsFails('123');\n  argumentsFails(1, '23');\n});\n\nTinytest.add('check - argument checker', test => {\n  const checksAllArguments = (f, ...args) =>\n    Match._failIfArgumentsAreNotAllChecked(f, {}, args, 'test');\n  checksAllArguments(() => {});\n  checksAllArguments(x => check(x, Match.Any), undefined);\n  checksAllArguments(x => check(x, Match.Any), null);\n  checksAllArguments(x => check(x, Match.Any), false);\n  checksAllArguments(x => check(x, Match.Any), true);\n  checksAllArguments(x => check(x, Match.Any), 0);\n  checksAllArguments((a, b, c) => {\n    check(a, String);\n    check(b, Boolean);\n    check(c, Match.Optional(Number));\n  }, 'foo', true);\n  checksAllArguments((...args) => check(args, [Number]), 1, 2, 4);\n  checksAllArguments((x, ...args) => {\n    check(x, Number);\n    check(args, [String]);\n  }, 1, 'foo', 'bar', 'baz');\n\n  // NaN values\n  checksAllArguments(x => check(x, Number), NaN);\n\n  const doesntCheckAllArguments = (f, ...args) => {\n    try {\n      Match._failIfArgumentsAreNotAllChecked(f, {}, args, 'test');\n      test.fail({message: 'expected _failIfArgumentsAreNotAllChecked to throw'});\n    } catch (e) {\n      test.equal(e.message, 'Did not check() all arguments during test');\n    }\n  };\n\n  doesntCheckAllArguments(() => {}, undefined);\n  doesntCheckAllArguments(() => {}, null);\n  doesntCheckAllArguments(() => {}, 1);\n  doesntCheckAllArguments((x, ...args) => check(args, [String]), 1, 'asdf', 'foo');\n  doesntCheckAllArguments((x, y) => check(x, Boolean), true, false);\n\n  // One \"true\" check doesn't count for all.\n  doesntCheckAllArguments((x, y) => check(x, Boolean), true, true);\n\n  // For non-primitives, we really do require that each arg gets checked.\n  doesntCheckAllArguments((x, y) => {\n    check(x, [Boolean]);\n    check(x, [Boolean]);\n  }, [true], [true]);\n\n  // In an ideal world this test would fail, but we currently can't\n  // differentiate between \"two calls to check x, both of which are true\" and\n  // \"check x and check y, both of which are true\" (for any interned primitive\n  // type).\n  checksAllArguments((x, y) => {\n    check(x, Boolean);\n    check(x, Boolean);\n  }, true, true);\n});\n\nTinytest.add('check - Match error path', test => {\n  const match = (value, pattern, expectedPath) => {\n    try {\n      check(value, pattern);\n    } catch (err) {\n\n      // XXX just for FF 3.6, its JSON stringification prefers \"\\u000a\" to \"\\n\"\n      err.path = err.path.replace(/\\\\u000a/, '\\\\n');\n      if (err.path != expectedPath) {\n        test.fail({\n          type: 'match-error-path',\n          message: \"The path of Match.Error doesn't match.\",\n          pattern: JSON.stringify(pattern),\n          value: JSON.stringify(value),\n          path: err.path,\n          expectedPath,\n        });\n      }\n    }\n  };\n\n  match({ foo: [ { bar: 3 }, { bar: 'something' } ] }, { foo: [{ bar: Number }] }, 'foo[1].bar');\n\n  // Complicated case with arrays, $, whitespace and quotes!\n  match([{ $FoO: { \"bar baz\\n\\\"'\": 3 } }], [{ $FoO: { \"bar baz\\n\\\"'\": String } }], \"[0].$FoO[\\\"bar baz\\\\n\\\\\\\"'\\\"]\");\n\n  // Numbers only, can be accessed w/o quotes\n  match({ '1231': 123 }, { '1231': String }, '[1231]');\n  match({ '1234abcd': 123 }, { '1234abcd': String }, '[\\\"1234abcd\\\"]');\n  match({ $set: { people: 'nice' } }, { $set: { people: [String] } }, '$set.people');\n  match({ _underscore: 'should work' }, { _underscore: Number }, '_underscore');\n\n  // Nested array looks nice\n  match([[['something', 'here'], []], [['string', 123]]], [[[String]]], '[1][0][1]');\n\n  // Object nested in arrays should look nice, too!\n  match([[[{ foo: 'something' }, { foo: 'here'}],\n          [{ foo: 'asdf' }]],\n         [[{ foo: 123 }]]],\n        [[[{ foo: String }]]], '[1][0][0].foo');\n\n  // JS keyword\n  match({ 'return': 0 }, { 'return': String }, '[\\\"return\\\"]');\n});\n\nTinytest.add('check - Match error message', test => {\n  const match = (value, pattern, expectedMessage) => {\n    try {\n      check(value, pattern);\n    } catch (err) {\n      if (err.message !== `Match error: ${expectedMessage}`) {\n        test.fail({\n          type: 'match-error-message',\n          message: \"The message of Match.Error doesn't match.\",\n          pattern: JSON.stringify(pattern),\n          value: JSON.stringify(value),\n          errorMessage: err.message,\n          expectedErrorMessage,\n        });\n      }\n    }\n  };\n\n  match(2, String, 'Expected string, got number');\n  match({ key: 0 }, Number, 'Expected number, got object');\n  match(null, Boolean, 'Expected boolean, got null');\n  match('string', undefined, 'Expected undefined, got string');\n  match(true, null, 'Expected null, got true');\n  match({}, Match.ObjectIncluding({ bar: String }), \"Missing key 'bar'\");\n  match(null, Object, 'Expected object, got null');\n  match(null, Function, 'Expected function, got null');\n  match('bar', 'foo', 'Expected foo, got \\\"bar\\\"');\n  match(3.14, Match.Integer, 'Expected Integer, got 3.14');\n  match(false, [Boolean], 'Expected array, got false');\n  match([null, null], [String], 'Expected string, got null in field [0]');\n  match(2, { key: 2 }, 'Expected object, got number');\n  match(null, { key: 2 }, 'Expected object, got null');\n  match(new Date, { key: 2 }, 'Expected plain object');\n\n  const TestInstanceChild = function () {};\n  const TestInstanceParent = function (child) {\n    child._parent = this;\n    this.child = child;\n  };\n\n  const testInstanceChild = new TestInstanceChild()\n  const testInstanceParent = new TestInstanceParent(testInstanceChild);\n  match(testInstanceChild, TestInstanceParent, `Expected ${(TestInstanceParent.name || 'particular constructor')}`);\n\n  const circleFoo = {};\n  const circleBar = {};\n  circleFoo.bar = circleBar;\n  circleBar.foo = circleFoo;\n  match(circleFoo, null, 'Expected null, got object');\n\n});\n\n// Regression test for https://github.com/meteor/meteor/issues/2136\nMeteor.isServer && Tinytest.addAsync('check - non-fiber check works', (test, onComplete) => {\n  const Fiber = Npm.require('fibers');\n\n  // We can only call test.isTrue inside normal Meteor Fibery code, so give us a\n  // bindEnvironment way to get back.\n  const report = Meteor.bindEnvironment(success => {\n    test.isTrue(success);\n    onComplete();\n  });\n\n  // Get out of a fiber with process.nextTick and ensure that we can still use\n  // check.\n  process.nextTick(() => {\n    const success = true;\n    if (Fiber.current) {\n      success = false;\n    }\n\n    if (success) {\n      try {\n        check(true, Boolean);\n      } catch (e) {\n        success = false;\n      }\n    }\n\n    report(success);\n  });\n});\n\nTinytest.add(\n  'check - Match methods that return class instances can be called as ' + \n  'constructors', \n  test => {\n\n    // Existing code sometimes uses these properties as constructors, so we can't\n    // switch them to arrow functions or method shorthand.\n    test.equal(new Match.Optional(), Match.Optional());\n    test.equal(new Match.Maybe(), Match.Maybe());\n    test.equal(new Match.OneOf([1]), Match.OneOf([1])); // Needs a non-empty array\n    test.equal(new Match.Where(), Match.Where());\n    test.equal(new Match.ObjectIncluding(), Match.ObjectIncluding());\n    test.equal(new Match.ObjectWithValues(), Match.ObjectWithValues());\n  }\n);\n"]},"sourceType":"script","hash":"a3daea2ec8f863d91a6b09c50f87d52c0bb00f70"}
