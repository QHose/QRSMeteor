{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/components/afFormGroup/afFormGroup.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/components/afFormGroup/afFormGroup.js","filename":"packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/components/afFormGroup/afFormGroup.js","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/martijn/Documents/GitHub/QRSMeteor","root":"/home/martijn/Documents/GitHub/QRSMeteor","generatorOpts":{"filename":"packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/components/afFormGroup/afFormGroup.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/components/afFormGroup/afFormGroup.js"}},"code":"Template.afFormGroup_semanticUI.helpers({\n  skipLabel: function () {\n    var self = this;\n    var type = AutoForm.getInputType(self.afFieldInputAtts);\n    return self.skipLabel || type === \"boolean-checkbox\";\n  },\n  requiredClass: function () {\n    if (this.required) {\n      return \"required\";\n    }\n  },\n  inputClass: function () {\n    var leftLabel = this.afFieldInputAtts.leftLabel;\n    var rightLabel = this.afFieldInputAtts.rightLabel;\n    var leftIcon = this.afFieldInputAtts.leftIcon;\n    var rightIcon = this.afFieldInputAtts.rightIcon;\n\n    if (leftLabel || rightLabel || leftIcon || rightIcon) {\n      var className = \"ui\";\n\n      if (leftLabel && rightIcon) {\n        className += \" labeled icon\";\n      } else if (leftIcon && rightLabel) {\n        className += \" left icon right labeled\";\n      } else if (leftLabel) {\n        className += \" labeled\";\n      } else if (rightLabel) {\n        className += \" right labeled\";\n      } else if (leftIcon) {\n        className += \" left icon\";\n      } else if (rightIcon) {\n        className += \" icon\";\n      }\n\n      return className + \" fluid input\";\n    }\n  },\n  leftLabel: function () {\n    return this.afFieldInputAtts.leftLabel;\n  },\n  rightLabel: function () {\n    return this.afFieldInputAtts.rightLabel;\n  },\n  leftIcon: function () {\n    return this.afFieldInputAtts.leftIcon;\n  },\n  rightIcon: function () {\n    return this.afFieldInputAtts.rightIcon;\n  }\n});","map":{"version":3,"sources":["packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/components/afFormGroup/afFormGroup.js"],"names":["Template","afFormGroup_semanticUI","helpers","skipLabel","self","type","AutoForm","getInputType","afFieldInputAtts","requiredClass","required","inputClass","leftLabel","rightLabel","leftIcon","rightIcon","className"],"mappings":"AAAAA,SAASC,sBAAT,CAAgCC,OAAhC,CAAwC;AACtCC,WADsC,cAC1B;AACV,QAAIC,OAAO,IAAX;AACA,QAAIC,OAAOC,SAASC,YAAT,CAAsBH,KAAKI,gBAA3B,CAAX;AAEA,WAAQJ,KAAKD,SAAL,IAAkBE,SAAS,kBAAnC;AACD,GANqC;AAOtCI,eAPsC,cAOtB;AACd,QAAI,KAAKC,QAAT,EAAmB;AACjB,aAAO,UAAP;AACD;AACF,GAXqC;AAYtCC,YAZsC,cAYzB;AACX,QAAIC,YAAa,KAAKJ,gBAAL,CAAsBI,SAAvC;AACA,QAAIC,aAAa,KAAKL,gBAAL,CAAsBK,UAAvC;AACA,QAAIC,WAAa,KAAKN,gBAAL,CAAsBM,QAAvC;AACA,QAAIC,YAAa,KAAKP,gBAAL,CAAsBO,SAAvC;;AAEA,QAAIH,aAAaC,UAAb,IAA2BC,QAA3B,IAAuCC,SAA3C,EAAsD;AACpD,UAAIC,YAAY,IAAhB;;AAEA,UAAIJ,aAAaG,SAAjB,EAA4B;AAC1BC,qBAAa,eAAb;AACD,OAFD,MAEO,IAAIF,YAAYD,UAAhB,EAA4B;AACjCG,qBAAa,0BAAb;AACD,OAFM,MAEA,IAAIJ,SAAJ,EAAe;AACpBI,qBAAa,UAAb;AACD,OAFM,MAEA,IAAIH,UAAJ,EAAgB;AACrBG,qBAAa,gBAAb;AACD,OAFM,MAEA,IAAIF,QAAJ,EAAc;AACnBE,qBAAa,YAAb;AACD,OAFM,MAEA,IAAID,SAAJ,EAAe;AACpBC,qBAAa,OAAb;AACD;;AAED,aAAOA,YAAY,cAAnB;AACD;AACF,GArCqC;AAsCtCJ,WAtCsC,cAsC1B;AACV,WAAO,KAAKJ,gBAAL,CAAsBI,SAA7B;AACD,GAxCqC;AAyCtCC,YAzCsC,cAyCzB;AACX,WAAO,KAAKL,gBAAL,CAAsBK,UAA7B;AACD,GA3CqC;AA4CtCC,UA5CsC,cA4C3B;AACT,WAAO,KAAKN,gBAAL,CAAsBM,QAA7B;AACD,GA9CqC;AA+CtCC,WA/CsC,cA+C1B;AACV,WAAO,KAAKP,gBAAL,CAAsBO,SAA7B;AACD;AAjDqC,CAAxC","sourcesContent":["Template.afFormGroup_semanticUI.helpers({\n  skipLabel() {\n    let self = this;\n    let type = AutoForm.getInputType(self.afFieldInputAtts);\n\n    return (self.skipLabel || type === \"boolean-checkbox\");\n  },\n  requiredClass() {\n    if (this.required) {\n      return \"required\";\n    }\n  },\n  inputClass() {\n    let leftLabel  = this.afFieldInputAtts.leftLabel;\n    let rightLabel = this.afFieldInputAtts.rightLabel;\n    let leftIcon   = this.afFieldInputAtts.leftIcon;\n    let rightIcon  = this.afFieldInputAtts.rightIcon;\n\n    if (leftLabel || rightLabel || leftIcon || rightIcon) {\n      let className = \"ui\";\n\n      if (leftLabel && rightIcon) {\n        className += \" labeled icon\";\n      } else if (leftIcon && rightLabel) {\n        className += \" left icon right labeled\";\n      } else if (leftLabel) {\n        className += \" labeled\";\n      } else if (rightLabel) {\n        className += \" right labeled\";\n      } else if (leftIcon) {\n        className += \" left icon\";\n      } else if (rightIcon) {\n        className += \" icon\";\n      }\n\n      return className + \" fluid input\";\n    }\n  },\n  leftLabel() {\n    return this.afFieldInputAtts.leftLabel;\n  },\n  rightLabel() {\n    return this.afFieldInputAtts.rightLabel;\n  },\n  leftIcon() {\n    return this.afFieldInputAtts.leftIcon;\n  },\n  rightIcon() {\n    return this.afFieldInputAtts.rightIcon;\n  }\n});\n"]},"sourceType":"script","hash":"80171e4ad97eec27af3d4084606f3706ed9c3f81"}
