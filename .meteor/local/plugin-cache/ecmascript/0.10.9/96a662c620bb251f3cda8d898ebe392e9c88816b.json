{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/ui/useCases/useCaseSelection.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/ui/useCases/useCaseSelection.js","filename":"imports/ui/useCases/useCaseSelection.js","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/martijn/Documents/GitHub/QRSMeteor","root":"/home/martijn/Documents/GitHub/QRSMeteor","presets":[],"generatorOpts":{"filename":"imports/ui/useCases/useCaseSelection.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/useCases/useCaseSelection.js"}},"code":"module.export({\n  initQlikSense: () => initQlikSense,\n  getSlideGenApp: () => getSlideGenApp,\n  getAllSlideHeaders: () => getAllSlideHeaders,\n  getSubjectArea: () => getSubjectArea,\n  getLevel2: () => getLevel2,\n  getLevel1: () => getLevel1,\n  getAllSlideHeadersPlain: () => getAllSlideHeadersPlain,\n  getAllSlides: () => getAllSlides,\n  getComment: () => getComment,\n  setChangeListener: () => setChangeListener\n});\nmodule.watch(require(\"/imports/ui/useCases/useCaseSelection.html\"));\nmodule.watch(require(\"/imports/ui/slideGenerator/slides.html\"));\nmodule.watch(require(\"/imports/ui/slideGenerator/slides\"));\nmodule.watch(require(\"/imports/ui/slideGenerator/slides.css\"));\nlet nav;\nmodule.watch(require(\"/imports/ui/nav.js\"), {\n  \"*\"(v) {\n    nav = v;\n  }\n\n}, 0);\nlet SenseSelections;\nmodule.watch(require(\"/imports/api/logger\"), {\n  SenseSelections(v) {\n    SenseSelections = v;\n  }\n\n}, 1);\nmodule.watch(require(\"./SSBI/SSBI.js\"));\nlet Session;\nmodule.watch(require(\"meteor/session\"), {\n  Session(v) {\n    Session = v;\n  }\n\n}, 2);\nlet config;\nmodule.watch(require(\"/imports/api/config.js\"), {\n  senseConfig(v) {\n    config = v;\n  }\n\n}, 3);\nconsole.log(\"ğŸš€ ~ file: useCaseSelection.js:10 ~ config:\", config);\n\nconst schema = require(\"enigma.js/schemas/3.2.json\"); // import {\n//     APILogs,\n//     REST_Log\n// } from '/imports/api/APILogs';\n\n\nconst enigma = require(\"enigma.js\"); // const schema = require(\"enigma.js/schemas/12.20.0.json\");\n\n\nconst Cookies = require(\"js-cookie\");\n\nvar Reveal = require(\"reveal.js\");\n\nvar qix = null;\nvar possibleRoles = [\"Developer\", \"Hosting Ops\", \"Business Analyst\", \"CTO\", \"C-Level - non-technical\"];\n\nfunction initQlikSense() {\n  return Promise.asyncApply(() => {\n    //connect to qlik sense\n    qix = Promise.await(makeSureSenseIsConnected()); // make sure we get a signal if something changes in qlik sense, like a selection in the iframe menu\n\n    Promise.await(setChangeListener(qix));\n  });\n}\n\nfunction makeSureSenseIsConnected() {\n  return Promise.asyncApply(() => {\n    return Promise.await(getSlideGenApp(Promise.await(getTicket())));\n  });\n}\n\nfunction getSlideGenApp(ticket) {\n  return Promise.asyncApply(() => {\n    var ticketUrl = ticket ? \"?QlikTicket=\" + ticket : \"\";\n    const engineConfig = {\n      schema,\n      url: `${config.useSSL ? \"wss\" : \"ws\"}://${config.host}:${config.useSSL ? Meteor.settings.public.qlikSensePortSecure : Meteor.settings.public.qlikSensePort}/${Meteor.settings.public.slideGenerator.virtualProxy}/app/${config.slideGeneratorAppId}${ticketUrl}`\n    };\n\n    try {\n      // create a new session:\n      const session = enigma.create(engineConfig); // console.log(`Connecting to ${session.config.url}`);\n      //https://github.com/qlik-oss/enigma.js/blob/master/examples/basics/events/session.js\n      // bind traffic events to log what is sent and received on the socket:\n      // session.on(\"traffic:sent\", (data) => console.log(\"sent:\", data));\n      // session.on(\"traffic:received\", (data) => console.log(\"received:\", data));\n      // Catch possible errors sent on WebSocket\n\n      let possibleEnigmaErr;\n      session.on(\"traffic:received\", res => {\n        if (res.params && res.params.severity === \"fatal\") {\n          possibleEnigmaErr = res.params.message;\n        }\n      });\n      session.on('traffic:received', data => Promise.asyncApply(() => {\n        if (data.method === 'OnAuthenticationInformation' && data.params.mustAuthenticate === true) {\n          console.error('User is not authenticated... Redirect to root URL');\n          window.location.href = window.location.origin;\n        }\n      }));\n      session.on('notification:*', name => console.log(`Session: Notification event: ${name}`)); // open the socket and eventually receive the QIX global API, and then close\n      // the session:\n\n      try {\n        var global = Promise.await(session.open());\n      } catch (error) {\n        console.log(\"Error getting the global connection\", error);\n      }\n\n      try {\n        var doc = Promise.await(global.openDoc(config.slideGeneratorAppId));\n        console.log(`********** User is authenticated and connected to the app, Session: Document id: ${doc.id}`);\n        return doc;\n      } catch (error) {\n        console.error(\"ğŸš€ ~ file: useCaseSelection.js:68 ~ error:\", error);\n      }\n    } catch (error) {\n      if (error.enigmaError) {\n        console.error(\"Enigma error:\", possibleEnigmaErr || error);\n      } else {\n        console.error(\"Qlik Sense Qix error, cannot make a websocket connection from the browser to Sense. \", error);\n      }\n\n      sAlert.error(error.message); // window.location.href = window.location.origin;\n    }\n  });\n}\n\n//make sure you go to the first slide when we have new slide data\nTracker.autorun(() => {\n  Session.get(\"slideHeaders\");\n  Meteor.setTimeout(function () {\n    try {\n      Reveal.slide(0);\n    } catch (error) {}\n  }, 500);\n}); // ONRENDERED.\n\nTemplate.useCaseSelection.onRendered(function () {\n  return Promise.asyncApply(() => {\n    Session.set(\"showSelector\", false);\n    this.$(\"#flyoutnavkbfixed\").focus();\n    $(\".ui.dropdown\").dropdown(\"refresh\");\n    var textToShow = Cookies.get(\"currentMainRole\") ? Cookies.get(\"currentMainRole\") : \"Your role?\";\n    $(\".ui.dropdown\").dropdown(\"set selected\", textToShow);\n    !function () {\n      var w = window,\n          d = w.document;\n\n      if (w.onfocusin === undefined) {\n        d.addEventListener(\"focus\", addPolyfill, true);\n        d.addEventListener(\"blur\", addPolyfill, true);\n        d.addEventListener(\"focusin\", removePolyfill, true);\n        d.addEventListener(\"focusout\", removePolyfill, true);\n      }\n\n      function addPolyfill(e) {\n        var type = e.type === \"focus\" ? \"focusin\" : \"focusout\";\n        var event = new CustomEvent(type, {\n          bubbles: true,\n          cancelable: false\n        });\n        event.c1Generated = true;\n        e.target.dispatchEvent(event);\n      }\n\n      function removePolyfill(e) {\n        if (!e.c1Generated) {\n          // focus after focusin, so chrome will the first time trigger tow times focusin\n          d.removeEventListener(\"focus\", addPolyfill, true);\n          d.removeEventListener(\"blur\", addPolyfill, true);\n          d.removeEventListener(\"focusin\", removePolyfill, true);\n          d.removeEventListener(\"focusout\", removePolyfill, true);\n        }\n\n        setTimeout(function () {\n          d.removeEventListener(\"focusin\", removePolyfill, true);\n          d.removeEventListener(\"focusout\", removePolyfill, true);\n        });\n      }\n    }();\n\n    function hasClass(el, className) {\n      if (el.classList) {\n        return el.classList.contains(className);\n      } else {\n        return new RegExp(\"(^| )\" + className + \"( |$)\", \"gi\").test(el.className);\n      }\n    }\n\n    var menuItems1 = document.querySelectorAll(\"#flyoutnavkbfixed li.has-submenu\");\n    var timer1, timer2;\n    Array.prototype.forEach.call(menuItems1, function (el, i) {\n      el.addEventListener(\"mouseover\", function (event) {\n        this.className = \"has-submenu open\";\n        clearTimeout(timer1);\n      });\n      el.addEventListener(\"mouseout\", function (event) {\n        timer1 = setTimeout(function (event) {\n          var opennav = document.querySelector(\"#flyoutnavkbfixed .has-submenu.open\");\n          opennav.className = \"has-submenu\";\n          opennav.querySelector(\"a\").setAttribute(\"aria-expanded\", \"false\");\n        }, 1000);\n      });\n      el.querySelector(\"a\").addEventListener(\"click\", function (event) {\n        if (this.parentNode.className == \"has-submenu\") {\n          this.parentNode.className = \"has-submenu open\";\n          this.setAttribute(\"aria-expanded\", \"true\");\n        } else {\n          this.parentNode.className = \"has-submenu\";\n          this.setAttribute(\"aria-expanded\", \"false\");\n        }\n\n        event.preventDefault();\n      });\n      var links = el.querySelectorAll(\"a\");\n      Array.prototype.forEach.call(links, function (el, i) {\n        el.addEventListener(\"focus\", function () {\n          if (timer2) {\n            clearTimeout(timer2);\n            timer2 = null;\n          }\n        });\n        el.addEventListener(\"blur\", function (event) {\n          timer2 = setTimeout(function () {\n            var opennav = document.querySelector(\"#flyoutnavkbfixed .has-submenu.open\");\n\n            if (opennav) {\n              opennav.className = \"has-submenu\";\n              opennav.querySelector(\"a\").setAttribute(\"aria-expanded\", \"false\");\n            }\n          }, 10);\n        });\n      });\n    });\n  });\n}); //\n// â”€â”€â”€ SLIDE GENERATOR BUTTON CLICK â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n//\n\nTemplate.useCaseSelection.events({\n  \"click .slides\": function (e, t) {\n    return Promise.asyncApply(() => {\n      Session.set(\"showSelector\", true);\n      Router.go(\"slides\");\n    });\n  },\n  \"click #CM\": function (e, t) {\n    return Promise.asyncApply(() => {\n      window.open(\"https://evaluation.qlik.com\", \"_blank\").focus();\n    });\n  },\n  \"click #videoButton\": function (e, t) {\n    return Promise.asyncApply(() => {\n      nav.selectMenuItemInSense(\"*Video overview:*\");\n    });\n  },\n  \"click #CM2SAAS\": function (e, t) {\n    return Promise.asyncApply(() => {\n      //if anaything happens with the dropdown box... adjust the selection, and get new slides.\n      var selectedRole = \"Client managed to SaaS\"; //e.currentTarget.id;\n\n      Promise.await(getSlides(selectedRole));\n    });\n  },\n  \"click #SAAS\": function (e, t) {\n    return Promise.asyncApply(() => {\n      //if anaything happens with the dropdown box... adjust the selection, and get new slides.\n      var selectedRole = \"Qlik Cloud\"; //e.currentTarget.id;\n\n      Promise.await(getSlides(selectedRole));\n    });\n  }\n});\n\nfunction getSlides(selectedRole) {\n  return Promise.asyncApply(() => {\n    Cookies.set(\"currentMainRole\", selectedRole); // await nav.makeClearAll(); already in set selection\n\n    Promise.await(setSelectionInSense(\"Partial Workshop\", selectedRole)); //get slides\n\n    Promise.await(getAllSlides());\n    Session.set(\"showSelector\", false);\n    Session.set(\"showSubjectAreaIntroduction\", true);\n    Router.go(\"slides\"); ////go to the first slide after a data refresh.\n    // Reveal.slide(0);\n  });\n}\n\nfunction setSelectionInSense(field, value) {\n  return Promise.asyncApply(() => {\n    try {\n      var qix = Promise.await(getSlideGenApp()); // console.log('qix', qix)\n\n      Promise.await(qix.clearAll());\n      var myField = Promise.await(qix.getField(field));\n      var result = Promise.await(myField.selectValues([{\n        qText: value\n      }])); // console.log('result of setting a selection in Sense', result)\n    } catch (error) {\n      console.error(\"Error making selection in Sense \", error);\n    }\n  });\n}\n\nfunction getTicket() {\n  return Promise.asyncApply(() => {\n    try {\n      return Promise.await(Meteor.callPromise(\"getTicketNumber\", {\n        group: \"notProvided\"\n      }, Meteor.settings.public.slideGenerator.virtualProxy));\n    } catch (error) {\n      var message = \"We could not setup single sing on with Qlik Sense. See your console window for more information\";\n      console.error(message, error);\n      sAlert.error(\"Could not get a ticket in order to enforce SSO to Qlik Sense.\");\n    }\n  });\n} //HELPERS\n\n\nTemplate.useCaseSelection.helpers({\n  userRole() {\n    return Cookies.get(\"currentMainRole\");\n  }\n\n}); //\n// â”€â”€â”€ MAIN TOPICS LEVEL 1 AND 2 â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n//\n\nfunction getAllSlideHeaders(qix) {\n  return Promise.asyncApply(() => {\n    //get all level 1 and 2 fields in a table: these are the individual slides (titles). The bullets are contained in level 3.\n    // return insertSectionBreakers(await getAllSlideHeadersPlain(qix));\n    var headers = Promise.await(getAllSlideHeadersPlain(qix));\n    var headersWithBreakers = insertSectionBreakers(headers);\n    return headersWithBreakers;\n  });\n}\n\nfunction getSubjectArea(qix) {\n  return Promise.asyncApply(() => {\n    var sessionModel = Promise.await(qix.createSessionObject({\n      qInfo: {\n        qType: \"cube\"\n      },\n      qHyperCubeDef: {\n        qDimensions: [{\n          qDef: {\n            qFieldDefs: [\"Subject area\"],\n            qSortCriterias: [{\n              qSortByState: 0,\n              qSortByFrequency: 0,\n              qSortByNumeric: 0,\n              qSortByAscii: 1,\n              qSortByLoadOrder: 0,\n              qSortByExpression: 0,\n              qExpression: {\n                qv: \"max(CSVRowNo)\"\n              },\n              qSortByGreyness: 0\n            }]\n          }\n        }]\n      }\n    }));\n    sessionData = Promise.await(sessionModel.getHyperCubeData(\"/qHyperCubeDef\", [{\n      qTop: 0,\n      qLeft: 0,\n      qWidth: 3,\n      qHeight: 3333\n    }]));\n    console.log(\"ğŸš€ ~ file: useCaseSelection.js:322 ~ getSubjectArea ~ sessionData[0].qMatrix:\", sessionData[0].qMatrix);\n    return sessionData[0].qMatrix;\n  });\n}\n\nfunction getLevel2(qix) {\n  return Promise.asyncApply(() => {\n    var sessionModel = Promise.await(qix.createSessionObject({\n      qInfo: {\n        qType: \"cube\"\n      },\n      qHyperCubeDef: {\n        qDimensions: [{\n          qDef: {\n            qFieldDefs: [\"Level 2\"]\n          }\n        }]\n      }\n    }));\n    sessionData = Promise.await(sessionModel.getHyperCubeData(\"/qHyperCubeDef\", [{\n      qTop: 0,\n      qLeft: 0,\n      qWidth: 3,\n      qHeight: 3333\n    }]));\n    return sessionData[0].qMatrix;\n  });\n}\n\nfunction getLevel1(qix) {\n  return Promise.asyncApply(() => {\n    //chapters\n    var sessionModel = Promise.await(qix.createSessionObject({\n      qInfo: {\n        qType: \"cube\"\n      },\n      qHyperCubeDef: {\n        qDimensions: [{\n          qDef: {\n            qFieldDefs: [\"Level 1\"]\n          }\n        }],\n        qMeasures: [{\n          qDef: {\n            qDef: \"Sum({$< [Level 1]= > } 1)\"\n          },\n          qLabel: \"sum({1}1)\",\n          qLibraryId: null,\n          qSortBy: {\n            qSortByState: 0,\n            qSortByFrequency: 0,\n            qSortByNumeric: 0,\n            qSortByAscii: 0,\n            qSortByLoadOrder: 0,\n            qSortByExpression: 1,\n            qExpression: {\n              qv: \"min(CSVRowNo)\"\n            }\n          }\n        }]\n      }\n    }));\n    sessionData = Promise.await(sessionModel.getHyperCubeData(\"/qHyperCubeDef\", [{\n      qTop: 0,\n      qLeft: 0,\n      qWidth: 3,\n      qHeight: 3333\n    }]));\n    return sessionData[0].qMatrix; // return SortSenseData(sessionData[0].qMatrix);\n  });\n}\n\nfunction getAllSlideHeadersPlain(qix) {\n  return Promise.asyncApply(() => {\n    //get all level 1 and 2 fields in a table: these are the individual slides (titles). The bullets are contained in level 3.\n    var sessionModel = Promise.await(qix.createSessionObject({\n      qInfo: {\n        qType: \"cube\"\n      },\n      qHyperCubeDef: {\n        qDimensions: [{\n          qDef: {\n            qFieldDefs: [\"Level 1\"]\n          }\n        }, {\n          qDef: {\n            qFieldDefs: [\"Level 2\"],\n            qSortCriterias: [{\n              qSortByState: 0,\n              qSortByFrequency: 0,\n              qSortByNumeric: 0,\n              qSortByAscii: 0,\n              qSortByLoadOrder: 1,\n              qSortByExpression: 1,\n              qExpression: {\n                qv: \"min(CSVRowNo)\"\n              },\n              qSortByGreyness: 0\n            }]\n          }\n        }]\n      }\n    }));\n    sessionData = Promise.await(sessionModel.getHyperCubeData(\"/qHyperCubeDef\", [{\n      qTop: 0,\n      qLeft: 0,\n      qWidth: 3,\n      qHeight: 3333\n    }]));\n    return sessionData[0].qMatrix;\n  });\n}\n\n//\n// â”€â”€â”€ GET LEVEL 1 TO 3 â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n//\n//by default add extra slides (extra items in the data array), so you will get nice dynamic chapter breakers\nvar sectionBreakerConfig = true;\n\nfunction getAllSlides(insertSectionBreakers = sectionBreakerConfig) {\n  return Promise.asyncApply(() => {\n    var qix = Promise.await(getSlideGenApp()); //insert breakers before a change of topic? YES/NO... breakers are annoying when you make a menu selection or want to link to a sheet\n\n    sectionBreakerConfig = insertSectionBreakers;\n    var table = insertSectionBreakers ? Promise.await(getAllSlideHeaders(qix)) : Promise.await(getAllSlideHeadersPlain(qix));\n    Session.set(\"slideHeaders\", table);\n  });\n}\n\nfunction getComment(qix) {\n  return Promise.asyncApply(() => {\n    var sessionModel = Promise.await(qix.createSessionObject({\n      qInfo: {\n        qType: \"cube\"\n      },\n      qHyperCubeDef: {\n        qDimensions: [{\n          qDef: {\n            qFieldDefs: [\"Comment\"]\n          }\n        }]\n      }\n    }));\n    sessionData = Promise.await(sessionModel.getHyperCubeData(\"/qHyperCubeDef\", [{\n      qTop: 0,\n      qLeft: 0,\n      qWidth: 3,\n      qHeight: 3333\n    }]));\n    Session.set(\"slideComment\", sessionData[0].qMatrix); // console.log('sessionModel', sessionModel)\n    // console.log('slide Comment', Session.get('slideComment'));\n  });\n}\n\nfunction setChangeListener(qix) {\n  return Promise.asyncApply(() => {\n    console.log('We are connected to Qlik Sense via the APIs, now setChangeListener', qix);\n\n    try {\n      qix.on(\"changed\", () => Promise.asyncApply(() => {\n        // console.log('QIX instance change event received, so get the new data set out of Qlik Sense, and store the current selection in the database.');\n        Promise.await(getCurrentSelections()); // Session.set(\"slideHeaders\", null); //reset the slideheaders to ensure all slide content templates are re-rendered.\n        // Meteor.setTimeout(async function wait() {\n        //     await getAllSlides();\n        //     Reveal.slide(0); //go to the first slide after a data refresh.\n        // }, 100)\n      }));\n    } catch (error) {\n      console.error(\"failed to set change listener: \", error);\n    }\n  });\n}\n\nfunction insertSectionBreakers(table) {\n  var currentLevel1,\n      previousLevel1 = \"\";\n  var newTableWithChapter = [];\n  table.forEach(function (currentRow) {\n    var currentLevel1 = textOfLevel(currentRow, 1);\n\n    if (previousLevel1 !== currentLevel1) {\n      newTableWithChapter.push(currentLevel1);\n      previousLevel1 = currentLevel1;\n    }\n\n    newTableWithChapter.push(currentRow);\n  }); // console.log('table with chapters is', newTableWithChapter);\n\n  return newTableWithChapter;\n}\n\nfunction textOfLevel(row, level) {\n  level -= 1;\n  return row[level].qText;\n} //http://help.qlik.com/en-US/sense-developer/September2017/Subsystems/EngineAPI/Content/DiscoveringAndAnalysing/MakeSelections/get-current-selections.htm\n\n\nfunction getCurrentSelections() {\n  return Promise.asyncApply(() => {\n    console.log('function: getCurrentSelections');\n\n    try {\n      var qix = Promise.await(getSlideGenApp());\n      var genericObject = Promise.await(qix.createSessionObject({\n        qInfo: {\n          qType: \"SessionLists\"\n        },\n        qSelectionObjectDef: {}\n      }));\n      console.log(\"sessionObject\", genericObject);\n      var layout = Promise.await(genericObject.getLayout());\n      console.log('genericObject layout', layout);\n      var currentSelections = layout.qSelectionObject.qSelections;\n      SenseSelections.insert({\n        userId: Meteor.userId,\n        userName: Meteor.user().profile.name,\n        eventType: \"selectionChanged\",\n        selection: currentSelections,\n        selectionDate: new Date() // current time\n\n      }, function (err, currentSelectionId) {\n        if (err) {\n          console.error(\"Failed to store the selection in mongoDb\");\n        }\n\n        Session.set(\"currentSelectionId\", currentSelectionId);\n        return currentSelections;\n      });\n    } catch (error) {\n      var message = \"getCurrentSelections: Can not connect to the Qlik Sense Engine API via enigmaJS\";\n      console.error(message, error); // sAlert.error(message, error);\n    }\n  });\n}","map":{"version":3,"sources":["imports/ui/useCases/useCaseSelection.js"],"names":["module","export","initQlikSense","getSlideGenApp","getAllSlideHeaders","getSubjectArea","getLevel2","getLevel1","getAllSlideHeadersPlain","getAllSlides","getComment","setChangeListener","watch","require","nav","v","SenseSelections","Session","config","senseConfig","console","log","schema","enigma","Cookies","Reveal","qix","possibleRoles","makeSureSenseIsConnected","getTicket","ticket","ticketUrl","engineConfig","url","useSSL","host","Meteor","settings","public","qlikSensePortSecure","qlikSensePort","slideGenerator","virtualProxy","slideGeneratorAppId","session","create","possibleEnigmaErr","on","res","params","severity","message","data","method","mustAuthenticate","error","window","location","href","origin","name","global","open","doc","openDoc","id","enigmaError","sAlert","Tracker","autorun","get","setTimeout","slide","Template","useCaseSelection","onRendered","set","$","focus","dropdown","textToShow","w","d","document","onfocusin","undefined","addEventListener","addPolyfill","removePolyfill","e","type","event","CustomEvent","bubbles","cancelable","c1Generated","target","dispatchEvent","removeEventListener","hasClass","el","className","classList","contains","RegExp","test","menuItems1","querySelectorAll","timer1","timer2","Array","prototype","forEach","call","i","clearTimeout","opennav","querySelector","setAttribute","parentNode","preventDefault","links","events","t","Router","go","selectMenuItemInSense","selectedRole","getSlides","setSelectionInSense","field","value","clearAll","myField","getField","result","selectValues","qText","callPromise","group","helpers","userRole","headers","headersWithBreakers","insertSectionBreakers","sessionModel","createSessionObject","qInfo","qType","qHyperCubeDef","qDimensions","qDef","qFieldDefs","qSortCriterias","qSortByState","qSortByFrequency","qSortByNumeric","qSortByAscii","qSortByLoadOrder","qSortByExpression","qExpression","qv","qSortByGreyness","sessionData","getHyperCubeData","qTop","qLeft","qWidth","qHeight","qMatrix","qMeasures","qLabel","qLibraryId","qSortBy","sectionBreakerConfig","table","getCurrentSelections","currentLevel1","previousLevel1","newTableWithChapter","currentRow","textOfLevel","push","row","level","genericObject","qSelectionObjectDef","layout","getLayout","currentSelections","qSelectionObject","qSelections","insert","userId","userName","user","profile","eventType","selection","selectionDate","Date","err","currentSelectionId"],"mappings":"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","sourcesContent":["import \"/imports/ui/useCases/useCaseSelection.html\";\nimport \"/imports/ui/slideGenerator/slides.html\";\nimport \"/imports/ui/slideGenerator/slides\";\nimport \"/imports/ui/slideGenerator/slides.css\";\nimport * as nav from \"/imports/ui/nav.js\";\nimport { SenseSelections } from \"/imports/api/logger\";\nimport \"./SSBI/SSBI.js\";\nimport { Session } from \"meteor/session\";\nimport { senseConfig as config } from \"/imports/api/config.js\";\nconsole.log(\"ğŸš€ ~ file: useCaseSelection.js:10 ~ config:\", config);\nconst schema = require(\"enigma.js/schemas/3.2.json\");\n\n// import {\n//     APILogs,\n//     REST_Log\n// } from '/imports/api/APILogs';\nconst enigma = require(\"enigma.js\");\n// const schema = require(\"enigma.js/schemas/12.20.0.json\");\nconst Cookies = require(\"js-cookie\");\nvar Reveal = require(\"reveal.js\");\nvar qix = null;\n\nvar possibleRoles = [\n  \"Developer\",\n  \"Hosting Ops\",\n  \"Business Analyst\",\n  \"CTO\",\n  \"C-Level - non-technical\",\n];\n\nexport async function initQlikSense() {\n  //connect to qlik sense\n  qix = await makeSureSenseIsConnected();\n  // make sure we get a signal if something changes in qlik sense, like a selection in the iframe menu\n  await setChangeListener(qix);\n}\n\nasync function makeSureSenseIsConnected() {\n  return await getSlideGenApp(await getTicket());\n}\nexport async function getSlideGenApp(ticket) {\n    var ticketUrl = ticket?\"?QlikTicket=\"+ticket:\"\";\n  const engineConfig = {\n    schema,\n    url: `${config.useSSL ? \"wss\" : \"ws\"}://${config.host}:${\n      config.useSSL\n        ? Meteor.settings.public.qlikSensePortSecure\n        : Meteor.settings.public.qlikSensePort}/${Meteor.settings.public.slideGenerator.virtualProxy}/app/${\n      config.slideGeneratorAppId}${ticketUrl}`,\n  };\n  try {\n    // create a new session:\n    const session = enigma.create(engineConfig);\n    // console.log(`Connecting to ${session.config.url}`);\n\n    //https://github.com/qlik-oss/enigma.js/blob/master/examples/basics/events/session.js\n    // bind traffic events to log what is sent and received on the socket:\n    // session.on(\"traffic:sent\", (data) => console.log(\"sent:\", data));\n    // session.on(\"traffic:received\", (data) => console.log(\"received:\", data));\n    // Catch possible errors sent on WebSocket\n    let possibleEnigmaErr;\n    session.on(\"traffic:received\", (res) => {\n      if (res.params && res.params.severity === \"fatal\") {\n        possibleEnigmaErr = res.params.message;\n      }\n    });\n\n    session.on('traffic:received', async (data)  => {\n        if (data.method === 'OnAuthenticationInformation' && data.params.mustAuthenticate === true) {\n            console.error('User is not authenticated... Redirect to root URL')\n            window.location.href = window.location.origin;\n        }\n      })\n      \n\n      session.on('notification:*', (name) => console.log(`Session: Notification event: ${name}`));\n    // open the socket and eventually receive the QIX global API, and then close\n    // the session:\n    \n\n    try {\n      var global = await session.open();\n    } catch (error) {\n      console.log(\"Error getting the global connection\", error);\n    }\n    try {\n      var doc = await global.openDoc(config.slideGeneratorAppId);\n      console.log(`********** User is authenticated and connected to the app, Session: Document id: ${doc.id}`);\n      return doc;\n    } catch (error) {\n      console.error(\"ğŸš€ ~ file: useCaseSelection.js:68 ~ error:\", error);\n    }\n  } catch (error) {\n    if (error.enigmaError) {\n      console.error(\"Enigma error:\", possibleEnigmaErr || error);\n    } else {\n      console.error(\n        \"Qlik Sense Qix error, cannot make a websocket connection from the browser to Sense. \",\n        error\n      );\n    }\n    \n    sAlert.error(error.message);\n    // window.location.href = window.location.origin;\n  }\n}\n\n//make sure you go to the first slide when we have new slide data\nTracker.autorun(() => {\n  Session.get(\"slideHeaders\");\n  Meteor.setTimeout(function () {\n    try {\n      Reveal.slide(0);\n    } catch (error) {}\n  }, 500);\n});\n\n// ONRENDERED.\nTemplate.useCaseSelection.onRendered(async function () {\n  Session.set(\"showSelector\", false);\n  this.$(\"#flyoutnavkbfixed\").focus();\n\n  $(\".ui.dropdown\").dropdown(\"refresh\");\n  var textToShow = Cookies.get(\"currentMainRole\")\n    ? Cookies.get(\"currentMainRole\")\n    : \"Your role?\";\n  $(\".ui.dropdown\").dropdown(\"set selected\", textToShow);\n\n  !(function () {\n    var w = window,\n      d = w.document;\n\n    if (w.onfocusin === undefined) {\n      d.addEventListener(\"focus\", addPolyfill, true);\n      d.addEventListener(\"blur\", addPolyfill, true);\n      d.addEventListener(\"focusin\", removePolyfill, true);\n      d.addEventListener(\"focusout\", removePolyfill, true);\n    }\n    function addPolyfill(e) {\n      var type = e.type === \"focus\" ? \"focusin\" : \"focusout\";\n      var event = new CustomEvent(type, { bubbles: true, cancelable: false });\n      event.c1Generated = true;\n      e.target.dispatchEvent(event);\n    }\n    function removePolyfill(e) {\n      if (!e.c1Generated) {\n        // focus after focusin, so chrome will the first time trigger tow times focusin\n        d.removeEventListener(\"focus\", addPolyfill, true);\n        d.removeEventListener(\"blur\", addPolyfill, true);\n        d.removeEventListener(\"focusin\", removePolyfill, true);\n        d.removeEventListener(\"focusout\", removePolyfill, true);\n      }\n      setTimeout(function () {\n        d.removeEventListener(\"focusin\", removePolyfill, true);\n        d.removeEventListener(\"focusout\", removePolyfill, true);\n      });\n    }\n  })();\n\n  function hasClass(el, className) {\n    if (el.classList) {\n      return el.classList.contains(className);\n    } else {\n      return new RegExp(\"(^| )\" + className + \"( |$)\", \"gi\").test(el.className);\n    }\n  }\n\n  var menuItems1 = document.querySelectorAll(\n    \"#flyoutnavkbfixed li.has-submenu\"\n  );\n  var timer1, timer2;\n\n  Array.prototype.forEach.call(menuItems1, function (el, i) {\n    el.addEventListener(\"mouseover\", function (event) {\n      this.className = \"has-submenu open\";\n      clearTimeout(timer1);\n    });\n    el.addEventListener(\"mouseout\", function (event) {\n      timer1 = setTimeout(function (event) {\n        var opennav = document.querySelector(\n          \"#flyoutnavkbfixed .has-submenu.open\"\n        );\n        opennav.className = \"has-submenu\";\n        opennav.querySelector(\"a\").setAttribute(\"aria-expanded\", \"false\");\n      }, 1000);\n    });\n    el.querySelector(\"a\").addEventListener(\"click\", function (event) {\n      if (this.parentNode.className == \"has-submenu\") {\n        this.parentNode.className = \"has-submenu open\";\n        this.setAttribute(\"aria-expanded\", \"true\");\n      } else {\n        this.parentNode.className = \"has-submenu\";\n        this.setAttribute(\"aria-expanded\", \"false\");\n      }\n      event.preventDefault();\n    });\n    var links = el.querySelectorAll(\"a\");\n    Array.prototype.forEach.call(links, function (el, i) {\n      el.addEventListener(\"focus\", function () {\n        if (timer2) {\n          clearTimeout(timer2);\n          timer2 = null;\n        }\n      });\n      el.addEventListener(\"blur\", function (event) {\n        timer2 = setTimeout(function () {\n          var opennav = document.querySelector(\n            \"#flyoutnavkbfixed .has-submenu.open\"\n          );\n          if (opennav) {\n            opennav.className = \"has-submenu\";\n            opennav.querySelector(\"a\").setAttribute(\"aria-expanded\", \"false\");\n          }\n        }, 10);\n      });\n    });\n  });\n});\n\n//\n// â”€â”€â”€ SLIDE GENERATOR BUTTON CLICK â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n//\n\nTemplate.useCaseSelection.events({\n  \"click .slides\": async function (e, t) {\n    Session.set(\"showSelector\", true);\n    Router.go(\"slides\");\n  },\n  \"click #CM\": async function (e, t) {\n    window.open(\"https://evaluation.qlik.com\", \"_blank\").focus();\n  },\n  \"click #videoButton\": async function (e, t) {\n    nav.selectMenuItemInSense(\"*Video overview:*\");\n  },\n  \"click #CM2SAAS\": async function (e, t) {\n    //if anaything happens with the dropdown box... adjust the selection, and get new slides.\n    var selectedRole = \"Client managed to SaaS\"; //e.currentTarget.id;\n    await getSlides(selectedRole);\n  },\n  \"click #SAAS\": async function (e, t) {\n    //if anaything happens with the dropdown box... adjust the selection, and get new slides.\n    var selectedRole = \"Qlik Cloud\"; //e.currentTarget.id;\n    await getSlides(selectedRole);\n  },\n});\n\nasync function getSlides(selectedRole) {\n  Cookies.set(\"currentMainRole\", selectedRole);\n  // await nav.makeClearAll(); already in set selection\n  await setSelectionInSense(\"Partial Workshop\", selectedRole);\n  //get slides\n  await getAllSlides();\n  Session.set(\"showSelector\", false);\n  Session.set(\"showSubjectAreaIntroduction\", true);\n\n  Router.go(\"slides\");\n  ////go to the first slide after a data refresh.\n  // Reveal.slide(0);\n}\n\nasync function setSelectionInSense(field, value) {\n  try {\n    var qix = await getSlideGenApp();\n    // console.log('qix', qix)\n    await qix.clearAll();\n    var myField = await qix.getField(field);\n    var result = await myField.selectValues([\n      {\n        qText: value,\n      },\n    ]);\n    // console.log('result of setting a selection in Sense', result)\n  } catch (error) {\n    console.error(\"Error making selection in Sense \", error);\n  }\n}\n\nasync function getTicket() {\n  try {\n    return await Meteor.callPromise(\n      \"getTicketNumber\",\n      { group: \"notProvided\" },\n      Meteor.settings.public.slideGenerator.virtualProxy\n    );\n  } catch (error) {\n    var message =\n      \"We could not setup single sing on with Qlik Sense. See your console window for more information\";\n    console.error(message, error);\n    sAlert.error(\n      \"Could not get a ticket in order to enforce SSO to Qlik Sense.\"\n    );\n  }\n}\n\n//HELPERS\nTemplate.useCaseSelection.helpers({\n  userRole() {\n    return Cookies.get(\"currentMainRole\");\n  },\n});\n\n//\n// â”€â”€â”€ MAIN TOPICS LEVEL 1 AND 2 â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n//\nexport async function getAllSlideHeaders(qix) {\n  //get all level 1 and 2 fields in a table: these are the individual slides (titles). The bullets are contained in level 3.\n  // return insertSectionBreakers(await getAllSlideHeadersPlain(qix));\n  var headers = await getAllSlideHeadersPlain(qix);\n  var headersWithBreakers = insertSectionBreakers(headers);\n  return headersWithBreakers;\n}\nexport async function getSubjectArea(qix) {\n  var sessionModel = await qix.createSessionObject({\n    qInfo: {\n      qType: \"cube\",\n    },\n    qHyperCubeDef: {\n      qDimensions: [\n        {\n          qDef: {\n            qFieldDefs: [\"Subject area\"],\n            qSortCriterias: [\n              {\n                qSortByState: 0,\n                qSortByFrequency: 0,\n                qSortByNumeric: 0,\n                qSortByAscii: 1,\n                qSortByLoadOrder: 0,\n                qSortByExpression: 0,\n                qExpression: {\n                  qv: \"max(CSVRowNo)\",\n                },\n                qSortByGreyness: 0,\n              },\n            ],\n          },\n        },\n      ],\n    },\n  });\n  sessionData = await sessionModel.getHyperCubeData(\"/qHyperCubeDef\", [\n    {\n      qTop: 0,\n      qLeft: 0,\n      qWidth: 3,\n      qHeight: 3333,\n    },\n  ]);\n  console.log(\n    \"ğŸš€ ~ file: useCaseSelection.js:322 ~ getSubjectArea ~ sessionData[0].qMatrix:\",\n    sessionData[0].qMatrix\n  );\n  return sessionData[0].qMatrix;\n}\n\nexport async function getLevel2(qix) {\n  var sessionModel = await qix.createSessionObject({\n    qInfo: {\n      qType: \"cube\",\n    },\n    qHyperCubeDef: {\n      qDimensions: [\n        {\n          qDef: {\n            qFieldDefs: [\"Level 2\"],\n          },\n        },\n      ],\n    },\n  });\n  sessionData = await sessionModel.getHyperCubeData(\"/qHyperCubeDef\", [\n    {\n      qTop: 0,\n      qLeft: 0,\n      qWidth: 3,\n      qHeight: 3333,\n    },\n  ]);\n  return sessionData[0].qMatrix;\n}\n\nexport async function getLevel1(qix) {\n  //chapters\n  var sessionModel = await qix.createSessionObject({\n    qInfo: {\n      qType: \"cube\",\n    },\n    qHyperCubeDef: {\n      qDimensions: [\n        {\n          qDef: {\n            qFieldDefs: [\"Level 1\"],\n          },\n        },\n      ],\n      qMeasures: [\n        {\n          qDef: {\n            qDef: \"Sum({$< [Level 1]= > } 1)\",\n          },\n          qLabel: \"sum({1}1)\",\n          qLibraryId: null,\n          qSortBy: {\n            qSortByState: 0,\n            qSortByFrequency: 0,\n            qSortByNumeric: 0,\n            qSortByAscii: 0,\n            qSortByLoadOrder: 0,\n            qSortByExpression: 1,\n            qExpression: {\n              qv: \"min(CSVRowNo)\",\n            },\n          },\n        },\n      ],\n    },\n  });\n  sessionData = await sessionModel.getHyperCubeData(\"/qHyperCubeDef\", [\n    {\n      qTop: 0,\n      qLeft: 0,\n      qWidth: 3,\n      qHeight: 3333,\n    },\n  ]);\n  return sessionData[0].qMatrix;\n  // return SortSenseData(sessionData[0].qMatrix);\n}\n\n// function SortSenseData(senseArray) {\n//     var result = [];\n//     senseArray.sort(compare);\n\n//     for (const element of senseArray) {\n//         result.push(element);\n//     }\n//     console.log(\"ğŸš€  SortSenseData ~ result\", result)\n//     return result;\n// }\n\n// function compare(a, b) {\n//     if (a[1].qNum < b[1].qNum) {\n//         return -1;\n//     }\n//     if (a[1].qNum > b[1].qNum) {\n//         return 1;\n//     }\n//     return 0;\n// }\n\nexport async function getAllSlideHeadersPlain(qix) {\n  //get all level 1 and 2 fields in a table: these are the individual slides (titles). The bullets are contained in level 3.\n  var sessionModel = await qix.createSessionObject({\n    qInfo: {\n      qType: \"cube\",\n    },\n    qHyperCubeDef: {\n      qDimensions: [\n        {\n          qDef: {\n            qFieldDefs: [\"Level 1\"],\n          },\n        },\n        {\n          qDef: {\n            qFieldDefs: [\"Level 2\"],\n            qSortCriterias: [\n              {\n                qSortByState: 0,\n                qSortByFrequency: 0,\n                qSortByNumeric: 0,\n                qSortByAscii: 0,\n                qSortByLoadOrder: 1,\n                qSortByExpression: 1,\n                qExpression: {\n                  qv: \"min(CSVRowNo)\",\n                },\n                qSortByGreyness: 0,\n              },\n            ],\n          },\n        },\n      ],\n    },\n  });\n  sessionData = await sessionModel.getHyperCubeData(\"/qHyperCubeDef\", [\n    {\n      qTop: 0,\n      qLeft: 0,\n      qWidth: 3,\n      qHeight: 3333,\n    },\n  ]);\n  return sessionData[0].qMatrix;\n}\n//\n// â”€â”€â”€ GET LEVEL 1 TO 3 â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n//\n//by default add extra slides (extra items in the data array), so you will get nice dynamic chapter breakers\nvar sectionBreakerConfig = true;\nexport async function getAllSlides(\n  insertSectionBreakers = sectionBreakerConfig\n) {\n  var qix = await getSlideGenApp();\n  //insert breakers before a change of topic? YES/NO... breakers are annoying when you make a menu selection or want to link to a sheet\n  sectionBreakerConfig = insertSectionBreakers;\n  var table = insertSectionBreakers\n    ? await getAllSlideHeaders(qix)\n    : await getAllSlideHeadersPlain(qix);\n  Session.set(\"slideHeaders\", table);\n}\n\nexport async function getComment(qix) {\n  var sessionModel = await qix.createSessionObject({\n    qInfo: {\n      qType: \"cube\",\n    },\n    qHyperCubeDef: {\n      qDimensions: [\n        {\n          qDef: {\n            qFieldDefs: [\"Comment\"],\n          },\n        },\n      ],\n    },\n  });\n  sessionData = await sessionModel.getHyperCubeData(\"/qHyperCubeDef\", [\n    {\n      qTop: 0,\n      qLeft: 0,\n      qWidth: 3,\n      qHeight: 3333,\n    },\n  ]);\n  Session.set(\"slideComment\", sessionData[0].qMatrix);\n  // console.log('sessionModel', sessionModel)\n  // console.log('slide Comment', Session.get('slideComment'));\n}\n\n//this code does not work since enigma v2...\nexport async function setChangeListener(qix) {\n  console.log('We are connected to Qlik Sense via the APIs, now setChangeListener', qix)\n    try {\n      qix.on(\"changed\", async () => {\n        // console.log('QIX instance change event received, so get the new data set out of Qlik Sense, and store the current selection in the database.');\n        await getCurrentSelections();\n        // Session.set(\"slideHeaders\", null); //reset the slideheaders to ensure all slide content templates are re-rendered.\n        // Meteor.setTimeout(async function wait() {\n        //     await getAllSlides();\n        //     Reveal.slide(0); //go to the first slide after a data refresh.\n        // }, 100)\n      });\n    } catch (error) {\n      console.error(\"failed to set change listener: \", error);\n    }\n}\n\nfunction insertSectionBreakers(table) {\n  var currentLevel1,\n    previousLevel1 = \"\";\n  var newTableWithChapter = [];\n\n  table.forEach(function (currentRow) {\n    var currentLevel1 = textOfLevel(currentRow, 1);\n    if (previousLevel1 !== currentLevel1) {\n      newTableWithChapter.push(currentLevel1);\n      previousLevel1 = currentLevel1;\n    }\n    newTableWithChapter.push(currentRow);\n  });\n  // console.log('table with chapters is', newTableWithChapter);\n  return newTableWithChapter;\n}\n\nfunction textOfLevel(row, level) {\n  level -= 1;\n  return row[level].qText;\n}\n\n//http://help.qlik.com/en-US/sense-developer/September2017/Subsystems/EngineAPI/Content/DiscoveringAndAnalysing/MakeSelections/get-current-selections.htm\nasync function getCurrentSelections() {\n  console.log('function: getCurrentSelections');\n  try {\n    var qix = await getSlideGenApp();\n    var genericObject = await qix.createSessionObject({\n      qInfo: {\n        qType: \"SessionLists\",\n      },\n      qSelectionObjectDef: {},\n    });\n    console.log(\"sessionObject\", genericObject);\n\n    var layout = await genericObject.getLayout();\n    console.log('genericObject layout', layout)\n    var currentSelections = layout.qSelectionObject.qSelections;\n    SenseSelections.insert(\n      {\n        userId: Meteor.userId,\n        userName: Meteor.user().profile.name,\n        eventType: \"selectionChanged\",\n        selection: currentSelections,\n        selectionDate: new Date(), // current time\n      },\n      function (err, currentSelectionId) {\n        if (err) {\n          console.error(\"Failed to store the selection in mongoDb\");\n        }\n        Session.set(\"currentSelectionId\", currentSelectionId);\n        return currentSelections;\n      }\n    );\n  } catch (error) {\n    var message =\n      \"getCurrentSelections: Can not connect to the Qlik Sense Engine API via enigmaJS\";\n    console.error(message, error);\n    // sAlert.error(message, error);\n  }\n}\n"]},"sourceType":"script","hash":"96a662c620bb251f3cda8d898ebe392e9c88816b"}
