{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"packages/accounts-base/accounts_url_tests.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/accounts-base/accounts_url_tests.js","filename":"packages/accounts-base/accounts_url_tests.js","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/martijn/Documents/GitHub/QRSMeteor","root":"/home/martijn/Documents/GitHub/QRSMeteor","generatorOpts":{"filename":"packages/accounts-base/accounts_url_tests.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/accounts-base/accounts_url_tests.js"}},"code":"var AccountsTest;\nmodule.watch(require(\"meteor/accounts-base\"), {\n  AccountsTest: function (v) {\n    AccountsTest = v;\n  }\n}, 0);\nTinytest.add(\"accounts - parse urls for accounts-password\", function (test) {\n  var actions = [\"reset-password\", \"verify-email\", \"enroll-account\"]; // make sure the callback was called the right number of times\n\n  var actionsParsed = [];\n\n  _.each(actions, function (hashPart) {\n    var fakeToken = \"asdf\";\n    var hashTokenOnly = \"#/\" + hashPart + \"/\" + fakeToken;\n    AccountsTest.attemptToMatchHash(hashTokenOnly, function (token, action) {\n      test.equal(token, fakeToken);\n      test.equal(action, hashPart); // XXX COMPAT WITH 0.9.3\n\n      if (hashPart === \"reset-password\") {\n        test.equal(Accounts._resetPasswordToken, fakeToken);\n      } else if (hashPart === \"verify-email\") {\n        test.equal(Accounts._verifyEmailToken, fakeToken);\n      } else if (hashPart === \"enroll-account\") {\n        test.equal(Accounts._enrollAccountToken, fakeToken);\n      } // Reset variables for the next test\n\n\n      Accounts._resetPasswordToken = null;\n      Accounts._verifyEmailToken = null;\n      Accounts._enrollAccountToken = null;\n      actionsParsed.push(action);\n    });\n  }); // make sure each action is called once, in order\n\n\n  test.equal(actionsParsed, actions);\n});","map":{"version":3,"sources":["packages/accounts-base/accounts_url_tests.js"],"names":["AccountsTest","module","watch","require","v","Tinytest","add","test","actions","actionsParsed","_","each","hashPart","fakeToken","hashTokenOnly","attemptToMatchHash","token","action","equal","Accounts","_resetPasswordToken","_verifyEmailToken","_enrollAccountToken","push"],"mappings":"AAAA,IAAIA,YAAJ;AAAiBC,OAAOC,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAACH,cAAD,YAAcI,CAAd,EAAgB;AAACJ,mBAAaI,CAAb;AAAe;AAAhC,CAA7C,EAA+E,CAA/E;AAEjBC,SAASC,GAAT,CAAa,6CAAb,EACE,UAAUC,IAAV,EAAgB;AACd,MAAIC,UAAU,CAAC,gBAAD,EAAmB,cAAnB,EAAmC,gBAAnC,CAAd,CADc,CAGd;;AACA,MAAIC,gBAAgB,EAApB;;AAEAC,IAAEC,IAAF,CAAOH,OAAP,EAAgB,UAAUI,QAAV,EAAoB;AAClC,QAAIC,YAAY,MAAhB;AAEA,QAAIC,gBAAgB,OAAOF,QAAP,GAAkB,GAAlB,GAAwBC,SAA5C;AACAb,iBAAae,kBAAb,CAAgCD,aAAhC,EAA+C,UAAUE,KAAV,EAAiBC,MAAjB,EAAyB;AACtEV,WAAKW,KAAL,CAAWF,KAAX,EAAkBH,SAAlB;AACAN,WAAKW,KAAL,CAAWD,MAAX,EAAmBL,QAAnB,EAFsE,CAItE;;AACA,UAAIA,aAAa,gBAAjB,EAAmC;AACjCL,aAAKW,KAAL,CAAWC,SAASC,mBAApB,EAAyCP,SAAzC;AACD,OAFD,MAEO,IAAID,aAAa,cAAjB,EAAiC;AACtCL,aAAKW,KAAL,CAAWC,SAASE,iBAApB,EAAuCR,SAAvC;AACD,OAFM,MAEA,IAAID,aAAa,gBAAjB,EAAmC;AACxCL,aAAKW,KAAL,CAAWC,SAASG,mBAApB,EAAyCT,SAAzC;AACD,OAXqE,CAatE;;;AACAM,eAASC,mBAAT,GAA+B,IAA/B;AACAD,eAASE,iBAAT,GAA6B,IAA7B;AACAF,eAASG,mBAAT,GAA+B,IAA/B;AAEAb,oBAAcc,IAAd,CAAmBN,MAAnB;AACD,KAnBD;AAoBD,GAxBD,EANc,CAgCd;;;AACAV,OAAKW,KAAL,CAAWT,aAAX,EAA0BD,OAA1B;AACD,CAnCH","sourcesContent":["import {AccountsTest} from \"meteor/accounts-base\";\n\nTinytest.add(\"accounts - parse urls for accounts-password\",\n  function (test) {\n    var actions = [\"reset-password\", \"verify-email\", \"enroll-account\"];\n\n    // make sure the callback was called the right number of times\n    var actionsParsed = [];\n\n    _.each(actions, function (hashPart) {\n      var fakeToken = \"asdf\";\n      \n      var hashTokenOnly = \"#/\" + hashPart + \"/\" + fakeToken;\n      AccountsTest.attemptToMatchHash(hashTokenOnly, function (token, action) {\n        test.equal(token, fakeToken);\n        test.equal(action, hashPart);\n\n        // XXX COMPAT WITH 0.9.3\n        if (hashPart === \"reset-password\") {\n          test.equal(Accounts._resetPasswordToken, fakeToken);\n        } else if (hashPart === \"verify-email\") {\n          test.equal(Accounts._verifyEmailToken, fakeToken);\n        } else if (hashPart === \"enroll-account\") {\n          test.equal(Accounts._enrollAccountToken, fakeToken);\n        }\n\n        // Reset variables for the next test\n        Accounts._resetPasswordToken = null;\n        Accounts._verifyEmailToken = null;\n        Accounts._enrollAccountToken = null;\n\n        actionsParsed.push(action);\n      });\n    });\n\n    // make sure each action is called once, in order\n    test.equal(actionsParsed, actions);\n  });\n"]},"sourceType":"script","hash":"4ee1d77345831ae3ad0329403f4cfaed692e91c1"}
