{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/ui/nav.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/ui/nav.js","filename":"imports/ui/nav.js","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/martijn/Documents/GitHub/QRSMeteor","root":"/home/martijn/Documents/GitHub/QRSMeteor","presets":[],"generatorOpts":{"filename":"imports/ui/nav.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/nav.js"}},"code":"module.export({\n  selectViaQueryId: () => selectViaQueryId,\n  selectInSense: () => selectInSense,\n  selectMenuItemInSense: () => selectMenuItemInSense,\n  makeSelectionInField: () => makeSelectionInField,\n  makeSearchSelectionInField: () => makeSearchSelectionInField,\n  makeClearSelectionInField: () => makeClearSelectionInField,\n  makeClearAll: () => makeClearAll,\n  makeSelectionInFields: () => makeSelectionInFields\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Template;\nmodule.watch(require(\"meteor/templating\"), {\n  Template(v) {\n    Template = v;\n  }\n\n}, 1);\nmodule.watch(require(\"/imports/ui/nav.html\"));\nlet getSlideGenApp, getAllSlides, getLevel1;\nmodule.watch(require(\"/imports/ui/useCases/useCaseSelection\"), {\n  getSlideGenApp(v) {\n    getSlideGenApp = v;\n  },\n\n  getAllSlides(v) {\n    getAllSlides = v;\n  },\n\n  getLevel1(v) {\n    getLevel1 = v;\n  }\n\n}, 2);\nlet MenuItems;\nmodule.watch(require(\"/imports/ui/slideGenerator/slides\"), {\n  MenuItems(v) {\n    MenuItems = v;\n  }\n\n}, 3);\nlet Session;\nmodule.watch(require(\"meteor/session\"), {\n  Session(v) {\n    Session = v;\n  }\n\n}, 4);\nlet slideApp;\nmodule.watch(require(\"/imports/ui/useCases/useCaseSelection\"), {\n  \"*\"(v) {\n    slideApp = v;\n  }\n\n}, 5);\nlet initQlikSense;\nmodule.watch(require(\"/imports/ui/useCases/useCaseSelection\"), {\n  initQlikSense(v) {\n    initQlikSense = v;\n  }\n\n}, 6);\n\n// import { senseConfig } from \"/imports/api/config.js\";\nconst enigma = require(\"enigma.js\");\n\nconst Cookies = require(\"js-cookie\");\n\nTemplate.nav.helpers({\n  isSlide() {\n    var show = Router.current().route.getName() == 'useCaseSelection' ? false : true;\n    return show;\n  },\n\n  items() {\n    var items = MenuItems.find({}, {\n      sort: {\n        qElemNumber: 1\n      }\n    }); // console.log(\"ðŸš€ ~ file: nav.js ~ line 23 ~ items ~ items\", items.fetch())\n\n    return items;\n  },\n\n  active(item) {\n    var text = item.qText;\n\n    if (text === Session.get(\"currentSubjectArea\")) {\n      return 'active';\n    }\n  }\n\n}); //\n// â”€â”€â”€ CLICK EVENTS ON MENU ITEMS â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€.\n//\n\nTemplate.nav.events({\n  \"click #home\": function () {\n    window.location.replace('/');\n  },\n  \"click a\": function (event, template) {\n    return Promise.asyncApply(() => {\n      var menuItem = event.currentTarget.id;\n\n      if (menuItem === \"sharePresentation\") {\n        initQlikSense();\n        event.preventDefault();\n        var id = Session.get('currentSelectionId');\n        var shareLinkURL = window.location.origin + '/?selection=' + id; //update the value of the helper for the share link popup\n\n        Session.set('shareLinkURL', shareLinkURL);\n      } else {\n        // console.log('only see me for an area selection')\n        Session.set(\"showSubjectAreaIntroduction\", false);\n        Session.set(\"currentSubjectArea\", menuItem);\n        Session.set(\"currentChapter\", null);\n        Promise.await(selectInSense('Subject area', menuItem));\n      }\n    });\n  }\n});\nTemplate.yourSaasPlatformMenu.onRendered(function () {\n  this.$(\".ui.dropdown\").dropdown();\n});\n\nfunction selectViaQueryId(mongoId) {\n  return Promise.asyncApply(() => {\n    var qSelection = Promise.await(Meteor.callPromise(\"getSenseSelectionObject\", mongoId));\n\n    if (qSelection) {\n      Promise.await(makeSelectionInFields(qSelection.selection));\n    } else {\n      sAlert.warning(\"We could not retreive a stored selection for this id...\");\n    }\n  });\n}\n\nfunction selectInSense(field, selection) {\n  return Promise.asyncApply(() => {\n    // console.log('make selection for field' + field + ' for value ' + selection);\n    Session.set(\"slideHeaders\", null);\n    Promise.await(makeSearchSelectionInField(field, selection)); //get slides\n\n    Promise.await(getAllSlides(true));\n    Router.go(\"slides\");\n  });\n}\n\nfunction selectMenuItemInSense(slide) {\n  return Promise.asyncApply(() => {\n    // console.log(\"selectMenuItemInSense - slide\", slide);\n    Session.set(\"slideHeaders\", null);\n    Promise.await(makeSearchSelectionInField(\"Level 2\", slide)); //get slides\n\n    Promise.await(getAllSlides(true));\n    Router.go(\"slides\");\n  });\n}\n\nfunction makeSelectionInField(fieldName, value) {\n  return Promise.asyncApply(() => {\n    console.log(\"makeSelectionInField\", fieldName + \" : \" + value.toString());\n\n    try {\n      var qix = Promise.await(slideApp.getSlideGenApp());\n      var myField = Promise.await(qix.getField(fieldName));\n      var result = Promise.await(myField.selectValues(value));\n    } catch (error) {\n      var message = \"makeSelectionInField: Can not connect to the Qlik Sense Engine API via enigmaJS\";\n      console.error(message + \" Sense reported the following error: \", error);\n      sAlert.error(message, error);\n    }\n  });\n}\n\nfunction makeSearchSelectionInField(fieldName, value) {\n  return Promise.asyncApply(() => {\n    // console.log(\n    //   \"make search SelectionInField\",\n    //   fieldName + \" : \" + value.toString()\n    // );\n    try {\n      var qix = Promise.await(slideApp.getSlideGenApp());\n      var myField = Promise.await(qix.getField(fieldName));\n      var result = Promise.await(myField.select(value));\n    } catch (error) {\n      var message = \"make search SelectionInField: Can not connect to the Qlik Sense Engine API via enigmaJS\";\n      console.error(message + \" Sense reported the following error: \", error);\n      sAlert.error(message, error);\n    }\n  });\n}\n\nfunction makeClearSelectionInField(fieldName) {\n  return Promise.asyncApply(() => {\n    // console.log(\"ðŸš€ ~ file: nav.js ~ line 127 ~ makeClearSelectionInField ~ makeClearSelectionInField\", fieldName)\n    try {\n      var qix = Promise.await(slideApp.getSlideGenApp());\n      var myField = Promise.await(qix.getField(fieldName));\n      var result = Promise.await(myField.clear());\n    } catch (error) {\n      var message = \"make clear SelectionInField: Can not connect to the Qlik Sense Engine API via enigmaJS\";\n      console.error(message + \" Sense reported the following error: \", error);\n      sAlert.error(message, error);\n    }\n  });\n}\n\nfunction makeClearAll() {\n  return Promise.asyncApply(() => {\n    // console.log(\"ðŸš€ ~ file: nav.js ~ line 142 ~ makeClearAll\")\n    try {\n      var qix = Promise.await(slideApp.getSlideGenApp());\n      Promise.await(qix.clearAll());\n    } catch (error) {\n      var message = \"clear all selections: Can not connect to the Qlik Sense Engine API via enigmaJS\";\n      console.error(message + \" Sense reported the following error: \", error);\n      sAlert.error(message, error);\n    }\n  });\n}\n\nfunction makeSelectionInFields(selections) {\n  return Promise.asyncApply(() => {\n    // console.log(\"makeSelectionInFields(selections)\", selections);\n    //for each qField\n    selections.forEach(function (selectionField) {\n      // console.log(\"selectionField\", selectionField);\n      //for each selected value (qSelectedFieldSelectionInfo) (e.g. country can have germany and france selected)\n      var selectValues = [];\n      selectionField.qSelectedFieldSelectionInfo.forEach(function (fieldValue) {\n        // console.log(\"fieldValue\", fieldValue);\n        selectValues.push({\n          qText: fieldValue.qName,\n          qIsNumeric: false,\n          qNumber: 0\n        }); // console.log(\"selectValues\", selectValues);\n      });\n      makeSelectionInField(selectionField.qField, selectValues);\n    });\n  });\n}","map":{"version":3,"sources":["imports/ui/nav.js"],"names":["module","export","selectViaQueryId","selectInSense","selectMenuItemInSense","makeSelectionInField","makeSearchSelectionInField","makeClearSelectionInField","makeClearAll","makeSelectionInFields","Meteor","watch","require","v","Template","getSlideGenApp","getAllSlides","getLevel1","MenuItems","Session","slideApp","initQlikSense","enigma","Cookies","nav","helpers","isSlide","show","Router","current","route","getName","items","find","sort","qElemNumber","active","item","text","qText","get","events","window","location","replace","event","template","menuItem","currentTarget","id","preventDefault","shareLinkURL","origin","set","yourSaasPlatformMenu","onRendered","$","dropdown","mongoId","qSelection","callPromise","selection","sAlert","warning","field","go","slide","fieldName","value","console","log","toString","qix","myField","getField","result","selectValues","error","message","select","clear","clearAll","selections","forEach","selectionField","qSelectedFieldSelectionInfo","fieldValue","push","qName","qIsNumeric","qNumber","qField"],"mappings":"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","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\n// import { senseConfig } from \"/imports/api/config.js\";\nconst enigma = require(\"enigma.js\");\nimport \"/imports/ui/nav.html\";\nimport { getSlideGenApp, getAllSlides, getLevel1 } from \"/imports/ui/useCases/useCaseSelection\";\nimport { MenuItems } from \"/imports/ui/slideGenerator/slides\"\nimport { Session } from \"meteor/session\";\nimport * as slideApp from \"/imports/ui/useCases/useCaseSelection\";\n\n\nconst Cookies = require(\"js-cookie\");\n\n\n\nTemplate.nav.helpers({\n  isSlide() {\n    var show = Router.current().route.getName() == 'useCaseSelection' ? false : true;\n    return show;\n  },\n  items() {\n    var items = MenuItems.find({}, { sort: { qElemNumber: 1 } });\n    // console.log(\"ðŸš€ ~ file: nav.js ~ line 23 ~ items ~ items\", items.fetch())\n    return items;\n  },\n  active(item) {\n    var text = item.qText;\n    if (text === Session.get(\"currentSubjectArea\")) {\n      return 'active'\n    }\n  }\n});\n\n//\n// â”€â”€â”€ CLICK EVENTS ON MENU ITEMS â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€.\n//\nimport { initQlikSense } from \"/imports/ui/useCases/useCaseSelection\";\n\n\nTemplate.nav.events({\n  \"click #home\": function () {\n    window.location.replace('/');\n  },\n  \"click a\": async function (event, template) {\n    var menuItem = event.currentTarget.id;\n\n    if (menuItem === \"sharePresentation\") {\n      initQlikSense();\n      event.preventDefault();\n\n      var id = Session.get('currentSelectionId');\n      var shareLinkURL = window.location.origin + '/?selection=' + id;\n      //update the value of the helper for the share link popup\n      Session.set('shareLinkURL', shareLinkURL);\n    } else {\n      // console.log('only see me for an area selection')\n      Session.set(\"showSubjectAreaIntroduction\", false);\n      Session.set(\"currentSubjectArea\", menuItem);\n      Session.set(\"currentChapter\", null)\n      await selectInSense('Subject area', menuItem);\n    }\n  }\n});\n\nTemplate.yourSaasPlatformMenu.onRendered(function () {\n  this.$(\".ui.dropdown\").dropdown();\n});\n\nexport async function selectViaQueryId(mongoId) {\n  var qSelection = await Meteor.callPromise(\"getSenseSelectionObject\", mongoId);\n  if (qSelection) {\n    await makeSelectionInFields(qSelection.selection);\n  } else {\n    sAlert.warning(\"We could not retreive a stored selection for this id...\");\n  }\n}\n\nexport async function selectInSense(field, selection) {\n  // console.log('make selection for field' + field + ' for value ' + selection);\n  Session.set(\"slideHeaders\", null);\n  await makeSearchSelectionInField(field, selection);\n  //get slides\n  await getAllSlides(true);\n  Router.go(\"slides\");\n}\n\n\n// if people click on a menu item, you want a specific slide to be selected, so the slide is the value to search for...\nexport async function selectMenuItemInSense(slide) {\n  // console.log(\"selectMenuItemInSense - slide\", slide);\n  Session.set(\"slideHeaders\", null);\n  await makeSearchSelectionInField(\"Level 2\", slide);\n  //get slides\n  await getAllSlides(true);\n  Router.go(\"slides\");\n}\n\nexport async function makeSelectionInField(fieldName, value) {\n  console.log(\"makeSelectionInField\", fieldName + \" : \" + value.toString());\n  try {\n    var qix =     await slideApp.getSlideGenApp();\n    var myField = await qix.getField(fieldName);\n    var result =  await myField.selectValues(value);\n  } catch (error) {\n    var message =\n      \"makeSelectionInField: Can not connect to the Qlik Sense Engine API via enigmaJS\";\n    console.error(message + \" Sense reported the following error: \", error);\n    sAlert.error(message, error);\n  }\n}\n\n//https://qlikcore.com/docs/services/qix-engine/apis/qix/field/#select\nexport async function makeSearchSelectionInField(fieldName, value) {\n  // console.log(\n  //   \"make search SelectionInField\",\n  //   fieldName + \" : \" + value.toString()\n  // );\n  try {\n    var qix = await slideApp.getSlideGenApp();\n    var myField = await qix.getField(fieldName);\n    var result = await myField.select(value);\n  } catch (error) {\n    var message =\n      \"make search SelectionInField: Can not connect to the Qlik Sense Engine API via enigmaJS\";\n    console.error(message + \" Sense reported the following error: \", error);\n    sAlert.error(message, error);\n  }\n}\n\nexport async function makeClearSelectionInField(fieldName) {\n  // console.log(\"ðŸš€ ~ file: nav.js ~ line 127 ~ makeClearSelectionInField ~ makeClearSelectionInField\", fieldName)\n\n  try {\n    var qix = await slideApp.getSlideGenApp();\n    var myField = await qix.getField(fieldName);\n    var result = await myField.clear();\n  } catch (error) {\n    var message =\n      \"make clear SelectionInField: Can not connect to the Qlik Sense Engine API via enigmaJS\";\n    console.error(message + \" Sense reported the following error: \", error);\n    sAlert.error(message, error);\n  }\n}\n\nexport async function makeClearAll() {\n  // console.log(\"ðŸš€ ~ file: nav.js ~ line 142 ~ makeClearAll\")\n\n  try {\n    var qix = await slideApp.getSlideGenApp();\n    await qix.clearAll();\n  } catch (error) {\n    var message =\n      \"clear all selections: Can not connect to the Qlik Sense Engine API via enigmaJS\";\n    console.error(message + \" Sense reported the following error: \", error);\n    sAlert.error(message, error);\n  }\n}\n\n\n//\n\nexport async function makeSelectionInFields(selections) {\n  // console.log(\"makeSelectionInFields(selections)\", selections);\n  //for each qField\n  selections.forEach(function (selectionField) {\n    // console.log(\"selectionField\", selectionField);\n    //for each selected value (qSelectedFieldSelectionInfo) (e.g. country can have germany and france selected)\n    var selectValues = [];\n    selectionField.qSelectedFieldSelectionInfo.forEach(function (fieldValue) {\n      // console.log(\"fieldValue\", fieldValue);\n      selectValues.push({\n        qText: fieldValue.qName,\n        qIsNumeric: false,\n        qNumber: 0\n      });\n      // console.log(\"selectValues\", selectValues);\n    });\n    makeSelectionInField(selectionField.qField, selectValues);\n  });\n}\n"]},"sourceType":"script","hash":"8e15672c9465a586641a76a892870d42896cca1c"}
