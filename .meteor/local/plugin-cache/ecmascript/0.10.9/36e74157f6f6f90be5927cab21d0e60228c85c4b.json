{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"client/lib/definitions/behaviors/visit.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"client/lib/definitions/behaviors/visit.js","filename":"client/lib/definitions/behaviors/visit.js","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/martijn/Documents/GitHub/QRSMeteor","root":"/home/martijn/Documents/GitHub/QRSMeteor","generatorOpts":{"filename":"client/lib/definitions/behaviors/visit.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/definitions/behaviors/visit.js"}},"code":"/*\n  DO NOT MODIFY - This file has been generated and will be regenerated\n  Semantic UI v2.1.8\n*/\n\n/*!\n * # Semantic UI - Visit\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Copyright 2015 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n;\n\n(function ($, window, document, undefined) {\n  \"use strict\";\n\n  $.visit = $.fn.visit = function (parameters) {\n    var $allModules = $.isFunction(this) ? $(window) : $(this),\n        moduleSelector = $allModules.selector || '',\n        time = new Date().getTime(),\n        performance = [],\n        query = arguments[0],\n        methodInvoked = typeof query == 'string',\n        queryArguments = [].slice.call(arguments, 1),\n        returnedValue;\n    $allModules.each(function () {\n      var settings = $.isPlainObject(parameters) ? $.extend(true, {}, $.fn.visit.settings, parameters) : $.extend({}, $.fn.visit.settings),\n          error = settings.error,\n          namespace = settings.namespace,\n          eventNamespace = '.' + namespace,\n          moduleNamespace = namespace + '-module',\n          $module = $(this),\n          $displays = $(),\n          element = this,\n          instance = $module.data(moduleNamespace),\n          module;\n      module = {\n        initialize: function () {\n          if (settings.count) {\n            module.store(settings.key.count, settings.count);\n          } else if (settings.id) {\n            module.add.id(settings.id);\n          } else if (settings.increment && methodInvoked !== 'increment') {\n            module.increment();\n          }\n\n          module.add.display($module);\n          module.instantiate();\n        },\n        instantiate: function () {\n          module.verbose('Storing instance of visit module', module);\n          instance = module;\n          $module.data(moduleNamespace, module);\n        },\n        destroy: function () {\n          module.verbose('Destroying instance');\n          $module.removeData(moduleNamespace);\n        },\n        increment: function (id) {\n          var currentValue = module.get.count(),\n              newValue = +currentValue + 1;\n\n          if (id) {\n            module.add.id(id);\n          } else {\n            if (newValue > settings.limit && !settings.surpass) {\n              newValue = settings.limit;\n            }\n\n            module.debug('Incrementing visits', newValue);\n            module.store(settings.key.count, newValue);\n          }\n        },\n        decrement: function (id) {\n          var currentValue = module.get.count(),\n              newValue = +currentValue - 1;\n\n          if (id) {\n            module.remove.id(id);\n          } else {\n            module.debug('Removing visit');\n            module.store(settings.key.count, newValue);\n          }\n        },\n        get: {\n          count: function () {\n            return +module.retrieve(settings.key.count) || 0;\n          },\n          idCount: function (ids) {\n            ids = ids || module.get.ids();\n            return ids.length;\n          },\n          ids: function (delimitedIDs) {\n            var idArray = [];\n            delimitedIDs = delimitedIDs || module.retrieve(settings.key.ids);\n\n            if (typeof delimitedIDs === 'string') {\n              idArray = delimitedIDs.split(settings.delimiter);\n            }\n\n            module.verbose('Found visited ID list', idArray);\n            return idArray;\n          },\n          storageOptions: function (data) {\n            var options = {};\n\n            if (settings.expires) {\n              options.expires = settings.expires;\n            }\n\n            if (settings.domain) {\n              options.domain = settings.domain;\n            }\n\n            if (settings.path) {\n              options.path = settings.path;\n            }\n\n            return options;\n          }\n        },\n        has: {\n          visited: function (id, ids) {\n            var visited = false;\n            ids = ids || module.get.ids();\n\n            if (id !== undefined && ids) {\n              $.each(ids, function (index, value) {\n                if (value == id) {\n                  visited = true;\n                }\n              });\n            }\n\n            return visited;\n          }\n        },\n        set: {\n          count: function (value) {\n            module.store(settings.key.count, value);\n          },\n          ids: function (value) {\n            module.store(settings.key.ids, value);\n          }\n        },\n        reset: function () {\n          module.store(settings.key.count, 0);\n          module.store(settings.key.ids, null);\n        },\n        add: {\n          id: function (id) {\n            var currentIDs = module.retrieve(settings.key.ids),\n                newIDs = currentIDs === undefined || currentIDs === '' ? id : currentIDs + settings.delimiter + id;\n\n            if (module.has.visited(id)) {\n              module.debug('Unique content already visited, not adding visit', id, currentIDs);\n            } else if (id === undefined) {\n              module.debug('ID is not defined');\n            } else {\n              module.debug('Adding visit to unique content', id);\n              module.store(settings.key.ids, newIDs);\n            }\n\n            module.set.count(module.get.idCount());\n          },\n          display: function (selector) {\n            var $element = $(selector);\n\n            if ($element.length > 0 && !$.isWindow($element[0])) {\n              module.debug('Updating visit count for element', $element);\n              $displays = $displays.length > 0 ? $displays.add($element) : $element;\n            }\n          }\n        },\n        remove: {\n          id: function (id) {\n            var currentIDs = module.get.ids(),\n                newIDs = [];\n\n            if (id !== undefined && currentIDs !== undefined) {\n              module.debug('Removing visit to unique content', id, currentIDs);\n              $.each(currentIDs, function (index, value) {\n                if (value !== id) {\n                  newIDs.push(value);\n                }\n              });\n              newIDs = newIDs.join(settings.delimiter);\n              module.store(settings.key.ids, newIDs);\n            }\n\n            module.set.count(module.get.idCount());\n          }\n        },\n        check: {\n          limit: function (value) {\n            value = value || module.get.count();\n\n            if (settings.limit) {\n              if (value >= settings.limit) {\n                module.debug('Pages viewed exceeded limit, firing callback', value, settings.limit);\n                settings.onLimit.call(element, value);\n              }\n\n              module.debug('Limit not reached', value, settings.limit);\n              settings.onChange.call(element, value);\n            }\n\n            module.update.display(value);\n          }\n        },\n        update: {\n          display: function (value) {\n            value = value || module.get.count();\n\n            if ($displays.length > 0) {\n              module.debug('Updating displayed view count', $displays);\n              $displays.html(value);\n            }\n          }\n        },\n        store: function (key, value) {\n          var options = module.get.storageOptions(value);\n\n          if (settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {\n            window.localStorage.setItem(key, value);\n            module.debug('Value stored using local storage', key, value);\n          } else if ($.cookie !== undefined) {\n            $.cookie(key, value, options);\n            module.debug('Value stored using cookie', key, value, options);\n          } else {\n            module.error(error.noCookieStorage);\n            return;\n          }\n\n          if (key == settings.key.count) {\n            module.check.limit(value);\n          }\n        },\n        retrieve: function (key, value) {\n          var storedValue;\n\n          if (settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {\n            storedValue = window.localStorage.getItem(key);\n          } // get by cookie\n          else if ($.cookie !== undefined) {\n              storedValue = $.cookie(key);\n            } else {\n              module.error(error.noCookieStorage);\n            }\n\n          if (storedValue == 'undefined' || storedValue == 'null' || storedValue === undefined || storedValue === null) {\n            storedValue = undefined;\n          }\n\n          return storedValue;\n        },\n        setting: function (name, value) {\n          if ($.isPlainObject(name)) {\n            $.extend(true, settings, name);\n          } else if (value !== undefined) {\n            settings[name] = value;\n          } else {\n            return settings[name];\n          }\n        },\n        internal: function (name, value) {\n          module.debug('Changing internal', name, value);\n\n          if (value !== undefined) {\n            if ($.isPlainObject(name)) {\n              $.extend(true, module, name);\n            } else {\n              module[name] = value;\n            }\n          } else {\n            return module[name];\n          }\n        },\n        debug: function () {\n          if (settings.debug) {\n            if (settings.performance) {\n              module.performance.log(arguments);\n            } else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function () {\n          if (settings.verbose && settings.debug) {\n            if (settings.performance) {\n              module.performance.log(arguments);\n            } else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function () {\n          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n          module.error.apply(console, arguments);\n        },\n        performance: {\n          log: function (message) {\n            var currentTime, executionTime, previousTime;\n\n            if (settings.performance) {\n              currentTime = new Date().getTime();\n              previousTime = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time = currentTime;\n              performance.push({\n                'Name': message[0],\n                'Arguments': [].slice.call(message, 1) || '',\n                'Element': element,\n                'Execution Time': executionTime\n              });\n            }\n\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function () {\n            var title = settings.name + ':',\n                totalTime = 0;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function (index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n\n            if (moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n\n            if ($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n\n            if ((console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n\n              if (console.table) {\n                console.table(performance);\n              } else {\n                $.each(performance, function (index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time'] + 'ms');\n                });\n              }\n\n              console.groupEnd();\n            }\n\n            performance = [];\n          }\n        },\n        invoke: function (query, passedArguments, context) {\n          var object = instance,\n              maxDepth,\n              found,\n              response;\n          passedArguments = passedArguments || queryArguments;\n          context = element || context;\n\n          if (typeof query == 'string' && object !== undefined) {\n            query = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function (depth, value) {\n              var camelCaseValue = depth != maxDepth ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1) : query;\n\n              if ($.isPlainObject(object[camelCaseValue]) && depth != maxDepth) {\n                object = object[camelCaseValue];\n              } else if (object[camelCaseValue] !== undefined) {\n                found = object[camelCaseValue];\n                return false;\n              } else if ($.isPlainObject(object[value]) && depth != maxDepth) {\n                object = object[value];\n              } else if (object[value] !== undefined) {\n                found = object[value];\n                return false;\n              } else {\n                return false;\n              }\n            });\n          }\n\n          if ($.isFunction(found)) {\n            response = found.apply(context, passedArguments);\n          } else if (found !== undefined) {\n            response = found;\n          }\n\n          if ($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          } else if (returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          } else if (response !== undefined) {\n            returnedValue = response;\n          }\n\n          return found;\n        }\n      };\n\n      if (methodInvoked) {\n        if (instance === undefined) {\n          module.initialize();\n        }\n\n        module.invoke(query);\n      } else {\n        if (instance !== undefined) {\n          instance.invoke('destroy');\n        }\n\n        module.initialize();\n      }\n    });\n    return returnedValue !== undefined ? returnedValue : this;\n  };\n\n  $.fn.visit.settings = {\n    name: 'Visit',\n    debug: false,\n    verbose: false,\n    performance: true,\n    namespace: 'visit',\n    increment: false,\n    surpass: false,\n    count: false,\n    limit: false,\n    delimiter: '&',\n    storageMethod: 'localstorage',\n    key: {\n      count: 'visit-count',\n      ids: 'visit-ids'\n    },\n    expires: 30,\n    domain: false,\n    path: '/',\n    onLimit: function () {},\n    onChange: function () {},\n    error: {\n      method: 'The method you called is not defined',\n      missingPersist: 'Using the persist setting requires the inclusion of PersistJS',\n      noCookieStorage: 'The default storage cookie requires $.cookie to be included.'\n    }\n  };\n})(jQuery, window, document);","map":{"version":3,"sources":["client/lib/definitions/behaviors/visit.js"],"names":["$","window","document","undefined","visit","fn","parameters","$allModules","isFunction","moduleSelector","selector","time","Date","getTime","performance","query","arguments","methodInvoked","queryArguments","slice","call","returnedValue","each","settings","isPlainObject","extend","error","namespace","eventNamespace","moduleNamespace","$module","$displays","element","instance","data","module","initialize","count","store","key","id","add","increment","display","instantiate","verbose","destroy","removeData","currentValue","get","newValue","limit","surpass","debug","decrement","remove","retrieve","idCount","ids","length","delimitedIDs","idArray","split","delimiter","storageOptions","options","expires","domain","path","has","visited","index","value","set","reset","currentIDs","newIDs","$element","isWindow","push","join","check","onLimit","onChange","update","html","storageMethod","localStorage","setItem","cookie","noCookieStorage","storedValue","getItem","setting","name","internal","log","Function","prototype","bind","console","info","apply","message","currentTime","executionTime","previousTime","clearTimeout","timer","setTimeout","title","totalTime","group","table","groupCollapsed","groupEnd","invoke","passedArguments","context","object","maxDepth","found","response","depth","camelCaseValue","charAt","toUpperCase","isArray","method","missingPersist","jQuery"],"mappings":"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","sourcesContent":["/*\n  DO NOT MODIFY - This file has been generated and will be regenerated\n  Semantic UI v2.1.8\n*/\n/*!\n * # Semantic UI - Visit\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Copyright 2015 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\n$.visit = $.fn.visit = function(parameters) {\n  var\n    $allModules     = $.isFunction(this)\n        ? $(window)\n        : $(this),\n    moduleSelector  = $allModules.selector || '',\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n  $allModules\n    .each(function() {\n      var\n        settings          = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.visit.settings, parameters)\n          : $.extend({}, $.fn.visit.settings),\n\n        error           = settings.error,\n        namespace       = settings.namespace,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = namespace + '-module',\n\n        $module         = $(this),\n        $displays       = $(),\n\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n        module\n      ;\n      module = {\n\n        initialize: function() {\n          if(settings.count) {\n            module.store(settings.key.count, settings.count);\n          }\n          else if(settings.id) {\n            module.add.id(settings.id);\n          }\n          else if(settings.increment && methodInvoked !== 'increment') {\n            module.increment();\n          }\n          module.add.display($module);\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of visit module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying instance');\n          $module\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        increment: function(id) {\n          var\n            currentValue = module.get.count(),\n            newValue     = +(currentValue) + 1\n          ;\n          if(id) {\n            module.add.id(id);\n          }\n          else {\n            if(newValue > settings.limit && !settings.surpass) {\n              newValue = settings.limit;\n            }\n            module.debug('Incrementing visits', newValue);\n            module.store(settings.key.count, newValue);\n          }\n        },\n\n        decrement: function(id) {\n          var\n            currentValue = module.get.count(),\n            newValue     = +(currentValue) - 1\n          ;\n          if(id) {\n            module.remove.id(id);\n          }\n          else {\n            module.debug('Removing visit');\n            module.store(settings.key.count, newValue);\n          }\n        },\n\n        get: {\n          count: function() {\n            return +(module.retrieve(settings.key.count)) || 0;\n          },\n          idCount: function(ids) {\n            ids = ids || module.get.ids();\n            return ids.length;\n          },\n          ids: function(delimitedIDs) {\n            var\n              idArray = []\n            ;\n            delimitedIDs = delimitedIDs || module.retrieve(settings.key.ids);\n            if(typeof delimitedIDs === 'string') {\n              idArray = delimitedIDs.split(settings.delimiter);\n            }\n            module.verbose('Found visited ID list', idArray);\n            return idArray;\n          },\n          storageOptions: function(data) {\n            var\n              options = {}\n            ;\n            if(settings.expires) {\n              options.expires = settings.expires;\n            }\n            if(settings.domain) {\n              options.domain = settings.domain;\n            }\n            if(settings.path) {\n              options.path = settings.path;\n            }\n            return options;\n          }\n        },\n\n        has: {\n          visited: function(id, ids) {\n            var\n              visited = false\n            ;\n            ids = ids || module.get.ids();\n            if(id !== undefined && ids) {\n              $.each(ids, function(index, value){\n                if(value == id) {\n                  visited = true;\n                }\n              });\n            }\n            return visited;\n          }\n        },\n\n        set: {\n          count: function(value) {\n            module.store(settings.key.count, value);\n          },\n          ids: function(value) {\n            module.store(settings.key.ids, value);\n          }\n        },\n\n        reset: function() {\n          module.store(settings.key.count, 0);\n          module.store(settings.key.ids, null);\n        },\n\n        add: {\n          id: function(id) {\n            var\n              currentIDs = module.retrieve(settings.key.ids),\n              newIDs = (currentIDs === undefined || currentIDs === '')\n                ? id\n                : currentIDs + settings.delimiter + id\n            ;\n            if( module.has.visited(id) ) {\n              module.debug('Unique content already visited, not adding visit', id, currentIDs);\n            }\n            else if(id === undefined) {\n              module.debug('ID is not defined');\n            }\n            else {\n              module.debug('Adding visit to unique content', id);\n              module.store(settings.key.ids, newIDs);\n            }\n            module.set.count( module.get.idCount() );\n          },\n          display: function(selector) {\n            var\n              $element = $(selector)\n            ;\n            if($element.length > 0 && !$.isWindow($element[0])) {\n              module.debug('Updating visit count for element', $element);\n              $displays = ($displays.length > 0)\n                ? $displays.add($element)\n                : $element\n              ;\n            }\n          }\n        },\n\n        remove: {\n          id: function(id) {\n            var\n              currentIDs = module.get.ids(),\n              newIDs     = []\n            ;\n            if(id !== undefined && currentIDs !== undefined) {\n              module.debug('Removing visit to unique content', id, currentIDs);\n              $.each(currentIDs, function(index, value){\n                if(value !== id) {\n                  newIDs.push(value);\n                }\n              });\n              newIDs = newIDs.join(settings.delimiter);\n              module.store(settings.key.ids, newIDs );\n            }\n            module.set.count( module.get.idCount() );\n          }\n        },\n\n        check: {\n          limit: function(value) {\n            value = value || module.get.count();\n            if(settings.limit) {\n              if(value >= settings.limit) {\n                module.debug('Pages viewed exceeded limit, firing callback', value, settings.limit);\n                settings.onLimit.call(element, value);\n              }\n              module.debug('Limit not reached', value, settings.limit);\n              settings.onChange.call(element, value);\n            }\n            module.update.display(value);\n          }\n        },\n\n        update: {\n          display: function(value) {\n            value = value || module.get.count();\n            if($displays.length > 0) {\n              module.debug('Updating displayed view count', $displays);\n              $displays.html(value);\n            }\n          }\n        },\n\n        store: function(key, value) {\n          var\n            options = module.get.storageOptions(value)\n          ;\n          if(settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {\n            window.localStorage.setItem(key, value);\n            module.debug('Value stored using local storage', key, value);\n          }\n          else if($.cookie !== undefined) {\n            $.cookie(key, value, options);\n            module.debug('Value stored using cookie', key, value, options);\n          }\n          else {\n            module.error(error.noCookieStorage);\n            return;\n          }\n          if(key == settings.key.count) {\n            module.check.limit(value);\n          }\n        },\n        retrieve: function(key, value) {\n          var\n            storedValue\n          ;\n          if(settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {\n            storedValue = window.localStorage.getItem(key);\n          }\n          // get by cookie\n          else if($.cookie !== undefined) {\n            storedValue = $.cookie(key);\n          }\n          else {\n            module.error(error.noCookieStorage);\n          }\n          if(storedValue == 'undefined' || storedValue == 'null' || storedValue === undefined || storedValue === null) {\n            storedValue = undefined;\n          }\n          return storedValue;\n        },\n\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          module.debug('Changing internal', name, value);\n          if(value !== undefined) {\n            if( $.isPlainObject(name) ) {\n              $.extend(true, module, name);\n            }\n            else {\n              module[name] = value;\n            }\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n          module.error.apply(console, arguments);\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n\n    })\n  ;\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.visit.settings = {\n\n  name          : 'Visit',\n\n  debug         : false,\n  verbose       : false,\n  performance   : true,\n\n  namespace     : 'visit',\n\n  increment     : false,\n  surpass       : false,\n  count         : false,\n  limit         : false,\n\n  delimiter     : '&',\n  storageMethod : 'localstorage',\n\n  key           : {\n    count : 'visit-count',\n    ids   : 'visit-ids'\n  },\n\n  expires       : 30,\n  domain        : false,\n  path          : '/',\n\n  onLimit       : function() {},\n  onChange      : function() {},\n\n  error         : {\n    method          : 'The method you called is not defined',\n    missingPersist  : 'Using the persist setting requires the inclusion of PersistJS',\n    noCookieStorage : 'The default storage cookie requires $.cookie to be included.'\n  }\n\n};\n\n})( jQuery, window, document );\n"]},"sourceType":"script","hash":"36e74157f6f6f90be5927cab21d0e60228c85c4b"}
