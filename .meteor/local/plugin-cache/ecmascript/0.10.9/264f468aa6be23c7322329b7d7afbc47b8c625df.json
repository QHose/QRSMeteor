{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"packages/id-map/id-map.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/id-map/id-map.js","filename":"packages/id-map/id-map.js","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/martijn/Documents/GitHub/QRSMeteor","root":"/home/martijn/Documents/GitHub/QRSMeteor","presets":[],"generatorOpts":{"filename":"packages/id-map/id-map.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/id-map/id-map.js"}},"code":"module.export({\n  IdMap: () => IdMap\n});\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nclass IdMap {\n  constructor(idStringify, idParse) {\n    this.clear();\n    this._idStringify = idStringify || JSON.stringify;\n    this._idParse = idParse || JSON.parse;\n  } // Some of these methods are designed to match methods on OrderedDict, since\n  // (eg) ObserveMultiplex and _CachingChangeObserver use them interchangeably.\n  // (Conceivably, this should be replaced with \"UnorderedDict\" with a specific\n  // set of methods that overlap between the two.)\n\n\n  get(id) {\n    var key = this._idStringify(id);\n\n    return this._map[key];\n  }\n\n  set(id, value) {\n    var key = this._idStringify(id);\n\n    this._map[key] = value;\n  }\n\n  remove(id) {\n    var key = this._idStringify(id);\n\n    delete this._map[key];\n  }\n\n  has(id) {\n    var key = this._idStringify(id);\n\n    return hasOwn.call(this._map, key);\n  }\n\n  empty() {\n    for (let key in this._map) {\n      return false;\n    }\n\n    return true;\n  }\n\n  clear() {\n    this._map = Object.create(null);\n  } // Iterates over the items in the map. Return `false` to break the loop.\n\n\n  forEach(iterator) {\n    // don't use _.each, because we can't break out of it.\n    var keys = Object.keys(this._map);\n\n    for (var i = 0; i < keys.length; i++) {\n      var breakIfFalse = iterator.call(null, this._map[keys[i]], this._idParse(keys[i]));\n\n      if (breakIfFalse === false) {\n        return;\n      }\n    }\n  }\n\n  size() {\n    return Object.keys(this._map).length;\n  }\n\n  setDefault(id, def) {\n    var key = this._idStringify(id);\n\n    if (hasOwn.call(this._map, key)) {\n      return this._map[key];\n    }\n\n    this._map[key] = def;\n    return def;\n  } // Assumes that values are EJSON-cloneable, and that we don't need to clone\n  // IDs (ie, that nobody is going to mutate an ObjectId).\n\n\n  clone() {\n    var clone = new IdMap(this._idStringify, this._idParse);\n    this.forEach(function (value, id) {\n      clone.set(id, EJSON.clone(value));\n    });\n    return clone;\n  }\n\n}","map":{"version":3,"sources":["packages/id-map/id-map.js"],"names":["module","export","IdMap","hasOwn","Object","prototype","hasOwnProperty","constructor","idStringify","idParse","clear","_idStringify","JSON","stringify","_idParse","parse","get","id","key","_map","set","value","remove","has","call","empty","create","forEach","iterator","keys","i","length","breakIfFalse","size","setDefault","def","clone","EJSON"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,SAAM,MAAIA;AAAX,CAAd;AAAA,MAAMC,SAASC,OAAOC,SAAP,CAAiBC,cAAhC;;AAEO,MAAMJ,KAAN,CAAY;AACjBK,cAAYC,WAAZ,EAAyBC,OAAzB,EAAkC;AAChC,SAAKC,KAAL;AACA,SAAKC,YAAL,GAAoBH,eAAeI,KAAKC,SAAxC;AACA,SAAKC,QAAL,GAAgBL,WAAWG,KAAKG,KAAhC;AACD,GALgB,CAOnB;AACA;AACA;AACA;;;AAEEC,MAAIC,EAAJ,EAAQ;AACN,QAAIC,MAAM,KAAKP,YAAL,CAAkBM,EAAlB,CAAV;;AACA,WAAO,KAAKE,IAAL,CAAUD,GAAV,CAAP;AACD;;AAEDE,MAAIH,EAAJ,EAAQI,KAAR,EAAe;AACb,QAAIH,MAAM,KAAKP,YAAL,CAAkBM,EAAlB,CAAV;;AACA,SAAKE,IAAL,CAAUD,GAAV,IAAiBG,KAAjB;AACD;;AAEDC,SAAOL,EAAP,EAAW;AACT,QAAIC,MAAM,KAAKP,YAAL,CAAkBM,EAAlB,CAAV;;AACA,WAAO,KAAKE,IAAL,CAAUD,GAAV,CAAP;AACD;;AAEDK,MAAIN,EAAJ,EAAQ;AACN,QAAIC,MAAM,KAAKP,YAAL,CAAkBM,EAAlB,CAAV;;AACA,WAAOd,OAAOqB,IAAP,CAAY,KAAKL,IAAjB,EAAuBD,GAAvB,CAAP;AACD;;AAEDO,UAAQ;AACN,SAAK,IAAIP,GAAT,IAAgB,KAAKC,IAArB,EAA2B;AACzB,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD;;AAEDT,UAAQ;AACN,SAAKS,IAAL,GAAYf,OAAOsB,MAAP,CAAc,IAAd,CAAZ;AACD,GAzCgB,CA2CjB;;;AACAC,UAAQC,QAAR,EAAkB;AAChB;AACA,QAAIC,OAAOzB,OAAOyB,IAAP,CAAY,KAAKV,IAAjB,CAAX;;AACA,SAAK,IAAIW,IAAI,CAAb,EAAgBA,IAAID,KAAKE,MAAzB,EAAiCD,GAAjC,EAAsC;AACpC,UAAIE,eAAeJ,SAASJ,IAAT,CACjB,IADiB,EAEjB,KAAKL,IAAL,CAAUU,KAAKC,CAAL,CAAV,CAFiB,EAGjB,KAAKhB,QAAL,CAAce,KAAKC,CAAL,CAAd,CAHiB,CAAnB;;AAKA,UAAIE,iBAAiB,KAArB,EAA4B;AAC1B;AACD;AACF;AACF;;AAEDC,SAAO;AACL,WAAO7B,OAAOyB,IAAP,CAAY,KAAKV,IAAjB,EAAuBY,MAA9B;AACD;;AAEDG,aAAWjB,EAAX,EAAekB,GAAf,EAAoB;AAClB,QAAIjB,MAAM,KAAKP,YAAL,CAAkBM,EAAlB,CAAV;;AACA,QAAId,OAAOqB,IAAP,CAAY,KAAKL,IAAjB,EAAuBD,GAAvB,CAAJ,EAAiC;AAC/B,aAAO,KAAKC,IAAL,CAAUD,GAAV,CAAP;AACD;;AACD,SAAKC,IAAL,CAAUD,GAAV,IAAiBiB,GAAjB;AACA,WAAOA,GAAP;AACD,GAtEgB,CAwEjB;AACA;;;AACAC,UAAQ;AACN,QAAIA,QAAQ,IAAIlC,KAAJ,CAAU,KAAKS,YAAf,EAA6B,KAAKG,QAAlC,CAAZ;AACA,SAAKa,OAAL,CAAa,UAAUN,KAAV,EAAiBJ,EAAjB,EAAqB;AAChCmB,YAAMhB,GAAN,CAAUH,EAAV,EAAcoB,MAAMD,KAAN,CAAYf,KAAZ,CAAd;AACD,KAFD;AAGA,WAAOe,KAAP;AACD;;AAhFgB","sourcesContent":["const hasOwn = Object.prototype.hasOwnProperty;\n\nexport class IdMap {\n  constructor(idStringify, idParse) {\n    this.clear();\n    this._idStringify = idStringify || JSON.stringify;\n    this._idParse = idParse || JSON.parse;\n  }\n\n// Some of these methods are designed to match methods on OrderedDict, since\n// (eg) ObserveMultiplex and _CachingChangeObserver use them interchangeably.\n// (Conceivably, this should be replaced with \"UnorderedDict\" with a specific\n// set of methods that overlap between the two.)\n\n  get(id) {\n    var key = this._idStringify(id);\n    return this._map[key];\n  }\n\n  set(id, value) {\n    var key = this._idStringify(id);\n    this._map[key] = value;\n  }\n\n  remove(id) {\n    var key = this._idStringify(id);\n    delete this._map[key];\n  }\n\n  has(id) {\n    var key = this._idStringify(id);\n    return hasOwn.call(this._map, key);\n  }\n\n  empty() {\n    for (let key in this._map) {\n      return false;\n    }\n    return true;\n  }\n\n  clear() {\n    this._map = Object.create(null);\n  }\n\n  // Iterates over the items in the map. Return `false` to break the loop.\n  forEach(iterator) {\n    // don't use _.each, because we can't break out of it.\n    var keys = Object.keys(this._map);\n    for (var i = 0; i < keys.length; i++) {\n      var breakIfFalse = iterator.call(\n        null,\n        this._map[keys[i]],\n        this._idParse(keys[i])\n      );\n      if (breakIfFalse === false) {\n        return;\n      }\n    }\n  }\n\n  size() {\n    return Object.keys(this._map).length;\n  }\n\n  setDefault(id, def) {\n    var key = this._idStringify(id);\n    if (hasOwn.call(this._map, key)) {\n      return this._map[key];\n    }\n    this._map[key] = def;\n    return def;\n  }\n\n  // Assumes that values are EJSON-cloneable, and that we don't need to clone\n  // IDs (ie, that nobody is going to mutate an ObjectId).\n  clone() {\n    var clone = new IdMap(this._idStringify, this._idParse);\n    this.forEach(function (value, id) {\n      clone.set(id, EJSON.clone(value));\n    });\n    return clone;\n  }\n}\n"]},"sourceType":"script","hash":"264f468aa6be23c7322329b7d7afbc47b8c625df"}
