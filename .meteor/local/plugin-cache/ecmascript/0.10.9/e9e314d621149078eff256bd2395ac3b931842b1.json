{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"packages/socket-stream-client/node.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/socket-stream-client/node.js","filename":"packages/socket-stream-client/node.js","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/martijn/Documents/GitHub/QRSMeteor","root":"/home/martijn/Documents/GitHub/QRSMeteor","generatorOpts":{"filename":"packages/socket-stream-client/node.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/socket-stream-client/node.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar module1 = module;\nmodule1.export({\n  ClientStream: function () {\n    return ClientStream;\n  }\n});\nvar Meteor;\nmodule1.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar toWebsocketUrl;\nmodule1.watch(require(\"./urls.js\"), {\n  toWebsocketUrl: function (v) {\n    toWebsocketUrl = v;\n  }\n}, 1);\nvar StreamClientCommon;\nmodule1.watch(require(\"./common.js\"), {\n  StreamClientCommon: function (v) {\n    StreamClientCommon = v;\n  }\n}, 2);\n\nvar ClientStream =\n/*#__PURE__*/\nfunction (_StreamClientCommon) {\n  (0, _inheritsLoose2.default)(ClientStream, _StreamClientCommon);\n\n  function ClientStream(endpoint, options) {\n    var _this;\n\n    _this = _StreamClientCommon.call(this, options) || this;\n    _this.client = null; // created in _launchConnection\n\n    _this.endpoint = endpoint;\n    _this.headers = _this.options.headers || Object.create(null);\n    _this.npmFayeOptions = _this.options.npmFayeOptions || Object.create(null);\n\n    _this._initCommon(_this.options); //// Kickoff!\n\n\n    _this._launchConnection();\n\n    return _this;\n  } // data is a utf8 string. Data sent while not connected is dropped on\n  // the floor, and it is up the user of this API to retransmit lost\n  // messages on 'reset'\n\n\n  var _proto = ClientStream.prototype;\n\n  _proto.send = function () {\n    function send(data) {\n      if (this.currentStatus.connected) {\n        this.client.send(data);\n      }\n    }\n\n    return send;\n  }(); // Changes where this connection points\n\n\n  _proto._changeUrl = function () {\n    function _changeUrl(url) {\n      this.endpoint = url;\n    }\n\n    return _changeUrl;\n  }();\n\n  _proto._onConnect = function () {\n    function _onConnect(client) {\n      if (client !== this.client) {\n        // This connection is not from the last call to _launchConnection.\n        // But _launchConnection calls _cleanup which closes previous connections.\n        // It's our belief that this stifles future 'open' events, but maybe\n        // we are wrong?\n        throw new Error('Got open from inactive client ' + !!this.client);\n      }\n\n      if (this._forcedToDisconnect) {\n        // We were asked to disconnect between trying to open the connection and\n        // actually opening it. Let's just pretend this never happened.\n        this.client.close();\n        this.client = null;\n        return;\n      }\n\n      if (this.currentStatus.connected) {\n        // We already have a connection. It must have been the case that we\n        // started two parallel connection attempts (because we wanted to\n        // 'reconnect now' on a hanging connection and we had no way to cancel the\n        // connection attempt.) But this shouldn't happen (similarly to the client\n        // !== this.client check above).\n        throw new Error('Two parallel connections?');\n      }\n\n      this._clearConnectionTimer(); // update status\n\n\n      this.currentStatus.status = 'connected';\n      this.currentStatus.connected = true;\n      this.currentStatus.retryCount = 0;\n      this.statusChanged(); // fire resets. This must come after status change so that clients\n      // can call send from within a reset callback.\n\n      this.forEachCallback('reset', function (callback) {\n        callback();\n      });\n    }\n\n    return _onConnect;\n  }();\n\n  _proto._cleanup = function () {\n    function _cleanup(maybeError) {\n      this._clearConnectionTimer();\n\n      if (this.client) {\n        var client = this.client;\n        this.client = null;\n        client.close();\n        this.forEachCallback('disconnect', function (callback) {\n          callback(maybeError);\n        });\n      }\n    }\n\n    return _cleanup;\n  }();\n\n  _proto._clearConnectionTimer = function () {\n    function _clearConnectionTimer() {\n      if (this.connectionTimer) {\n        clearTimeout(this.connectionTimer);\n        this.connectionTimer = null;\n      }\n    }\n\n    return _clearConnectionTimer;\n  }();\n\n  _proto._getProxyUrl = function () {\n    function _getProxyUrl(targetUrl) {\n      // Similar to code in tools/http-helpers.js.\n      var proxy = process.env.HTTP_PROXY || process.env.http_proxy || null; // if we're going to a secure url, try the https_proxy env variable first.\n\n      if (targetUrl.match(/^wss:/)) {\n        proxy = process.env.HTTPS_PROXY || process.env.https_proxy || proxy;\n      }\n\n      return proxy;\n    }\n\n    return _getProxyUrl;\n  }();\n\n  _proto._launchConnection = function () {\n    function _launchConnection() {\n      var _this2 = this;\n\n      this._cleanup(); // cleanup the old socket, if there was one.\n      // Since server-to-server DDP is still an experimental feature, we only\n      // require the module if we actually create a server-to-server\n      // connection.\n\n\n      var FayeWebSocket = Npm.require('faye-websocket');\n\n      var deflate = Npm.require('permessage-deflate');\n\n      var targetUrl = toWebsocketUrl(this.endpoint);\n      var fayeOptions = {\n        headers: this.headers,\n        extensions: [deflate]\n      };\n      fayeOptions = Object.assign(fayeOptions, this.npmFayeOptions);\n\n      var proxyUrl = this._getProxyUrl(targetUrl);\n\n      if (proxyUrl) {\n        fayeOptions.proxy = {\n          origin: proxyUrl\n        };\n      } // We would like to specify 'ddp' as the subprotocol here. The npm module we\n      // used to use as a client would fail the handshake if we ask for a\n      // subprotocol and the server doesn't send one back (and sockjs doesn't).\n      // Faye doesn't have that behavior; it's unclear from reading RFC 6455 if\n      // Faye is erroneous or not.  So for now, we don't specify protocols.\n\n\n      var subprotocols = [];\n      var client = this.client = new FayeWebSocket.Client(targetUrl, subprotocols, fayeOptions);\n\n      this._clearConnectionTimer();\n\n      this.connectionTimer = Meteor.setTimeout(function () {\n        _this2._lostConnection(new _this2.ConnectionError('DDP connection timed out'));\n      }, this.CONNECT_TIMEOUT);\n      this.client.on('open', Meteor.bindEnvironment(function () {\n        return _this2._onConnect(client);\n      }, 'stream connect callback'));\n\n      var clientOnIfCurrent = function (event, description, callback) {\n        _this2.client.on(event, Meteor.bindEnvironment(function () {\n          // Ignore events from any connection we've already cleaned up.\n          if (client !== _this2.client) return;\n          callback.apply(void 0, arguments);\n        }, description));\n      };\n\n      clientOnIfCurrent('error', 'stream error callback', function (error) {\n        if (!_this2.options._dontPrintErrors) Meteor._debug('stream error', error.message); // Faye's 'error' object is not a JS error (and among other things,\n        // doesn't stringify well). Convert it to one.\n\n        _this2._lostConnection(new _this2.ConnectionError(error.message));\n      });\n      clientOnIfCurrent('close', 'stream close callback', function () {\n        _this2._lostConnection();\n      });\n      clientOnIfCurrent('message', 'stream message callback', function (message) {\n        // Ignore binary frames, where message.data is a Buffer\n        if (typeof message.data !== 'string') return;\n\n        _this2.forEachCallback('message', function (callback) {\n          callback(message.data);\n        });\n      });\n    }\n\n    return _launchConnection;\n  }();\n\n  return ClientStream;\n}(StreamClientCommon);","map":{"version":3,"sources":["packages/socket-stream-client/node.js"],"names":["module1","module","export","ClientStream","Meteor","watch","require","v","toWebsocketUrl","StreamClientCommon","endpoint","options","client","headers","Object","create","npmFayeOptions","_initCommon","_launchConnection","send","data","currentStatus","connected","_changeUrl","url","_onConnect","Error","_forcedToDisconnect","close","_clearConnectionTimer","status","retryCount","statusChanged","forEachCallback","callback","_cleanup","maybeError","connectionTimer","clearTimeout","_getProxyUrl","targetUrl","proxy","process","env","HTTP_PROXY","http_proxy","match","HTTPS_PROXY","https_proxy","FayeWebSocket","Npm","deflate","fayeOptions","extensions","assign","proxyUrl","origin","subprotocols","Client","setTimeout","_lostConnection","ConnectionError","CONNECT_TIMEOUT","on","bindEnvironment","clientOnIfCurrent","event","description","_dontPrintErrors","_debug","error","message"],"mappings":"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","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { toWebsocketUrl } from \"./urls.js\";\nimport { StreamClientCommon } from \"./common.js\";\n\n// @param endpoint {String} URL to Meteor app\n//   \"http://subdomain.meteor.com/\" or \"/\" or\n//   \"ddp+sockjs://foo-**.meteor.com/sockjs\"\n//\n// We do some rewriting of the URL to eventually make it \"ws://\" or \"wss://\",\n// whatever was passed in.  At the very least, what Meteor.absoluteUrl() returns\n// us should work.\n//\n// We don't do any heartbeating. (The logic that did this in sockjs was removed,\n// because it used a built-in sockjs mechanism. We could do it with WebSocket\n// ping frames or with DDP-level messages.)\nexport class ClientStream extends StreamClientCommon {\n  constructor(endpoint, options) {\n    super(options);\n\n    this.client = null; // created in _launchConnection\n    this.endpoint = endpoint;\n\n    this.headers = this.options.headers || Object.create(null);\n    this.npmFayeOptions = this.options.npmFayeOptions || Object.create(null);\n\n    this._initCommon(this.options);\n\n    //// Kickoff!\n    this._launchConnection();\n  }\n\n  // data is a utf8 string. Data sent while not connected is dropped on\n  // the floor, and it is up the user of this API to retransmit lost\n  // messages on 'reset'\n  send(data) {\n    if (this.currentStatus.connected) {\n      this.client.send(data);\n    }\n  }\n\n  // Changes where this connection points\n  _changeUrl(url) {\n    this.endpoint = url;\n  }\n\n  _onConnect(client) {\n    if (client !== this.client) {\n      // This connection is not from the last call to _launchConnection.\n      // But _launchConnection calls _cleanup which closes previous connections.\n      // It's our belief that this stifles future 'open' events, but maybe\n      // we are wrong?\n      throw new Error('Got open from inactive client ' + !!this.client);\n    }\n\n    if (this._forcedToDisconnect) {\n      // We were asked to disconnect between trying to open the connection and\n      // actually opening it. Let's just pretend this never happened.\n      this.client.close();\n      this.client = null;\n      return;\n    }\n\n    if (this.currentStatus.connected) {\n      // We already have a connection. It must have been the case that we\n      // started two parallel connection attempts (because we wanted to\n      // 'reconnect now' on a hanging connection and we had no way to cancel the\n      // connection attempt.) But this shouldn't happen (similarly to the client\n      // !== this.client check above).\n      throw new Error('Two parallel connections?');\n    }\n\n    this._clearConnectionTimer();\n\n    // update status\n    this.currentStatus.status = 'connected';\n    this.currentStatus.connected = true;\n    this.currentStatus.retryCount = 0;\n    this.statusChanged();\n\n    // fire resets. This must come after status change so that clients\n    // can call send from within a reset callback.\n    this.forEachCallback('reset', callback => {\n      callback();\n    });\n  }\n\n  _cleanup(maybeError) {\n    this._clearConnectionTimer();\n    if (this.client) {\n      var client = this.client;\n      this.client = null;\n      client.close();\n\n      this.forEachCallback('disconnect', callback => {\n        callback(maybeError);\n      });\n    }\n  }\n\n  _clearConnectionTimer() {\n    if (this.connectionTimer) {\n      clearTimeout(this.connectionTimer);\n      this.connectionTimer = null;\n    }\n  }\n\n  _getProxyUrl(targetUrl) {\n    // Similar to code in tools/http-helpers.js.\n    var proxy = process.env.HTTP_PROXY || process.env.http_proxy || null;\n    // if we're going to a secure url, try the https_proxy env variable first.\n    if (targetUrl.match(/^wss:/)) {\n      proxy = process.env.HTTPS_PROXY || process.env.https_proxy || proxy;\n    }\n    return proxy;\n  }\n\n  _launchConnection() {\n    this._cleanup(); // cleanup the old socket, if there was one.\n\n    // Since server-to-server DDP is still an experimental feature, we only\n    // require the module if we actually create a server-to-server\n    // connection.\n    var FayeWebSocket = Npm.require('faye-websocket');\n    var deflate = Npm.require('permessage-deflate');\n\n    var targetUrl = toWebsocketUrl(this.endpoint);\n    var fayeOptions = {\n      headers: this.headers,\n      extensions: [deflate]\n    };\n    fayeOptions = Object.assign(fayeOptions, this.npmFayeOptions);\n    var proxyUrl = this._getProxyUrl(targetUrl);\n    if (proxyUrl) {\n      fayeOptions.proxy = { origin: proxyUrl };\n    }\n\n    // We would like to specify 'ddp' as the subprotocol here. The npm module we\n    // used to use as a client would fail the handshake if we ask for a\n    // subprotocol and the server doesn't send one back (and sockjs doesn't).\n    // Faye doesn't have that behavior; it's unclear from reading RFC 6455 if\n    // Faye is erroneous or not.  So for now, we don't specify protocols.\n    var subprotocols = [];\n\n    var client = (this.client = new FayeWebSocket.Client(\n      targetUrl,\n      subprotocols,\n      fayeOptions\n    ));\n\n    this._clearConnectionTimer();\n    this.connectionTimer = Meteor.setTimeout(() => {\n      this._lostConnection(new this.ConnectionError('DDP connection timed out'));\n    }, this.CONNECT_TIMEOUT);\n\n    this.client.on(\n      'open',\n      Meteor.bindEnvironment(() => {\n        return this._onConnect(client);\n      }, 'stream connect callback')\n    );\n\n    var clientOnIfCurrent = (event, description, callback) => {\n      this.client.on(\n        event,\n        Meteor.bindEnvironment((...args) => {\n          // Ignore events from any connection we've already cleaned up.\n          if (client !== this.client) return;\n          callback(...args);\n        }, description)\n      );\n    };\n\n    clientOnIfCurrent('error', 'stream error callback', error => {\n      if (!this.options._dontPrintErrors)\n        Meteor._debug('stream error', error.message);\n\n      // Faye's 'error' object is not a JS error (and among other things,\n      // doesn't stringify well). Convert it to one.\n      this._lostConnection(new this.ConnectionError(error.message));\n    });\n\n    clientOnIfCurrent('close', 'stream close callback', () => {\n      this._lostConnection();\n    });\n\n    clientOnIfCurrent('message', 'stream message callback', message => {\n      // Ignore binary frames, where message.data is a Buffer\n      if (typeof message.data !== 'string') return;\n\n      this.forEachCallback('message', callback => {\n        callback(message.data);\n      });\n    });\n  }\n}\n"]},"sourceType":"script","hash":"e9e314d621149078eff256bd2395ac3b931842b1"}
