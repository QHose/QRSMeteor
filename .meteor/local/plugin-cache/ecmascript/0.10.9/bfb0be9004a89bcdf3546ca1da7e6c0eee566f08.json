{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/ui/nav.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/ui/nav.js","filename":"imports/ui/nav.js","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/martijn/Documents/GitHub/QRSMeteor","root":"/home/martijn/Documents/GitHub/QRSMeteor","generatorOpts":{"filename":"imports/ui/nav.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/nav.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nmodule.export({\n  selectViaQueryId: function () {\n    return selectViaQueryId;\n  },\n  selectInSense: function () {\n    return selectInSense;\n  },\n  selectMenuItemInSense: function () {\n    return selectMenuItemInSense;\n  },\n  makeSelectionInField: function () {\n    return makeSelectionInField;\n  },\n  makeSearchSelectionInField: function () {\n    return makeSearchSelectionInField;\n  },\n  makeClearSelectionInField: function () {\n    return makeClearSelectionInField;\n  },\n  makeClearAll: function () {\n    return makeClearAll;\n  },\n  makeSelectionInFields: function () {\n    return makeSelectionInFields;\n  }\n});\nvar Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Template;\nmodule.watch(require(\"meteor/templating\"), {\n  Template: function (v) {\n    Template = v;\n  }\n}, 1);\nmodule.watch(require(\"/imports/ui/nav.html\"));\nvar getSlideGenApp, getAllSlides, getLevel1;\nmodule.watch(require(\"/imports/ui/useCases/useCaseSelection\"), {\n  getSlideGenApp: function (v) {\n    getSlideGenApp = v;\n  },\n  getAllSlides: function (v) {\n    getAllSlides = v;\n  },\n  getLevel1: function (v) {\n    getLevel1 = v;\n  }\n}, 2);\nvar MenuItems;\nmodule.watch(require(\"/imports/ui/slideGenerator/slides\"), {\n  MenuItems: function (v) {\n    MenuItems = v;\n  }\n}, 3);\nvar Session;\nmodule.watch(require(\"meteor/session\"), {\n  Session: function (v) {\n    Session = v;\n  }\n}, 4);\nvar slideApp;\nmodule.watch(require(\"/imports/ui/useCases/useCaseSelection\"), {\n  \"*\": function (v) {\n    slideApp = v;\n  }\n}, 5);\nvar initQlikSense;\nmodule.watch(require(\"/imports/ui/useCases/useCaseSelection\"), {\n  initQlikSense: function (v) {\n    initQlikSense = v;\n  }\n}, 6);\n\n// import { senseConfig } from \"/imports/api/config.js\";\nvar enigma = require(\"enigma.js\");\n\nvar Cookies = require(\"js-cookie\");\n\nTemplate.nav.helpers({\n  isSlide: function () {\n    var show = Router.current().route.getName() == 'useCaseSelection' ? false : true;\n    return show;\n  },\n  items: function () {\n    var items = MenuItems.find({}, {\n      sort: {\n        qElemNumber: 1\n      }\n    }); // console.log(\"🚀 ~ file: nav.js ~ line 23 ~ items ~ items\", items.fetch())\n\n    return items;\n  },\n  active: function (item) {\n    var text = item.qText;\n\n    if (text === Session.get(\"currentSubjectArea\")) {\n      return 'active';\n    }\n  }\n}); //\n// ─── CLICK EVENTS ON MENU ITEMS ─────────────────────────────────────────────────.\n//\n\nTemplate.nav.events({\n  \"click #home\": function () {\n    window.location.replace('/');\n  },\n  \"click a\": function () {\n    function _callee(event, template) {\n      var menuItem, id, shareLinkURL;\n      return _regenerator.default.async(function () {\n        function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                menuItem = event.currentTarget.id;\n\n                if (!(menuItem === \"sharePresentation\")) {\n                  _context.next = 9;\n                  break;\n                }\n\n                initQlikSense();\n                event.preventDefault();\n                id = Session.get('currentSelectionId');\n                shareLinkURL = window.location.origin + '/?selection=' + id; //update the value of the helper for the share link popup\n\n                Session.set('shareLinkURL', shareLinkURL);\n                _context.next = 14;\n                break;\n\n              case 9:\n                // console.log('only see me for an area selection')\n                Session.set(\"showSubjectAreaIntroduction\", false);\n                Session.set(\"currentSubjectArea\", menuItem);\n                Session.set(\"currentChapter\", null);\n                _context.next = 14;\n                return _regenerator.default.awrap(selectInSense('Subject area', menuItem));\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }\n\n        return _callee$;\n      }(), null, this);\n    }\n\n    return _callee;\n  }()\n});\nTemplate.yourSaasPlatformMenu.onRendered(function () {\n  this.$(\".ui.dropdown\").dropdown();\n});\n\nfunction selectViaQueryId(mongoId) {\n  var qSelection;\n  return _regenerator.default.async(function () {\n    function selectViaQueryId$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regenerator.default.awrap(Meteor.callPromise(\"getSenseSelectionObject\", mongoId));\n\n          case 2:\n            qSelection = _context2.sent;\n\n            if (!qSelection) {\n              _context2.next = 8;\n              break;\n            }\n\n            _context2.next = 6;\n            return _regenerator.default.awrap(makeSelectionInFields(qSelection.selection));\n\n          case 6:\n            _context2.next = 9;\n            break;\n\n          case 8:\n            sAlert.warning(\"We could not retreive a stored selection for this id...\");\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }\n\n    return selectViaQueryId$;\n  }(), null, this);\n}\n\nfunction selectInSense(field, selection) {\n  return _regenerator.default.async(function () {\n    function selectInSense$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            // console.log('make selection for field' + field + ' for value ' + selection);\n            Session.set(\"slideHeaders\", null);\n            _context3.next = 3;\n            return _regenerator.default.awrap(makeSearchSelectionInField(field, selection));\n\n          case 3:\n            _context3.next = 5;\n            return _regenerator.default.awrap(getAllSlides(true));\n\n          case 5:\n            Router.go(\"slides\");\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }\n\n    return selectInSense$;\n  }(), null, this);\n}\n\nfunction selectMenuItemInSense(slide) {\n  return _regenerator.default.async(function () {\n    function selectMenuItemInSense$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            // console.log(\"selectMenuItemInSense - slide\", slide);\n            Session.set(\"slideHeaders\", null);\n            _context4.next = 3;\n            return _regenerator.default.awrap(makeSearchSelectionInField(\"Level 2\", slide));\n\n          case 3:\n            _context4.next = 5;\n            return _regenerator.default.awrap(getAllSlides(true));\n\n          case 5:\n            Router.go(\"slides\");\n\n          case 6:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }\n\n    return selectMenuItemInSense$;\n  }(), null, this);\n}\n\nfunction makeSelectionInField(fieldName, value) {\n  var qix, myField, result, message;\n  return _regenerator.default.async(function () {\n    function makeSelectionInField$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            console.log(\"makeSelectionInField\", fieldName + \" : \" + value.toString());\n            _context5.prev = 1;\n            _context5.next = 4;\n            return _regenerator.default.awrap(slideApp.getSlideGenApp());\n\n          case 4:\n            qix = _context5.sent;\n            _context5.next = 7;\n            return _regenerator.default.awrap(qix.getField(fieldName));\n\n          case 7:\n            myField = _context5.sent;\n            _context5.next = 10;\n            return _regenerator.default.awrap(myField.selectValues(value));\n\n          case 10:\n            result = _context5.sent;\n            _context5.next = 18;\n            break;\n\n          case 13:\n            _context5.prev = 13;\n            _context5.t0 = _context5[\"catch\"](1);\n            message = \"makeSelectionInField: Can not connect to the Qlik Sense Engine API via enigmaJS\";\n            console.error(message + \" Sense reported the following error: \", _context5.t0);\n            sAlert.error(message, _context5.t0);\n\n          case 18:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }\n\n    return makeSelectionInField$;\n  }(), null, this, [[1, 13]]);\n}\n\nfunction makeSearchSelectionInField(fieldName, value) {\n  var qix, myField, result, message;\n  return _regenerator.default.async(function () {\n    function makeSearchSelectionInField$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            _context6.next = 3;\n            return _regenerator.default.awrap(slideApp.getSlideGenApp());\n\n          case 3:\n            qix = _context6.sent;\n            _context6.next = 6;\n            return _regenerator.default.awrap(qix.getField(fieldName));\n\n          case 6:\n            myField = _context6.sent;\n            _context6.next = 9;\n            return _regenerator.default.awrap(myField.select(value));\n\n          case 9:\n            result = _context6.sent;\n            _context6.next = 17;\n            break;\n\n          case 12:\n            _context6.prev = 12;\n            _context6.t0 = _context6[\"catch\"](0);\n            message = \"make search SelectionInField: Can not connect to the Qlik Sense Engine API via enigmaJS\";\n            console.error(message + \" Sense reported the following error: \", _context6.t0);\n            sAlert.error(message, _context6.t0);\n\n          case 17:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }\n\n    return makeSearchSelectionInField$;\n  }(), null, this, [[0, 12]]);\n}\n\nfunction makeClearSelectionInField(fieldName) {\n  var qix, myField, result, message;\n  return _regenerator.default.async(function () {\n    function makeClearSelectionInField$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            _context7.next = 3;\n            return _regenerator.default.awrap(slideApp.getSlideGenApp());\n\n          case 3:\n            qix = _context7.sent;\n            _context7.next = 6;\n            return _regenerator.default.awrap(qix.getField(fieldName));\n\n          case 6:\n            myField = _context7.sent;\n            _context7.next = 9;\n            return _regenerator.default.awrap(myField.clear());\n\n          case 9:\n            result = _context7.sent;\n            _context7.next = 17;\n            break;\n\n          case 12:\n            _context7.prev = 12;\n            _context7.t0 = _context7[\"catch\"](0);\n            message = \"make clear SelectionInField: Can not connect to the Qlik Sense Engine API via enigmaJS\";\n            console.error(message + \" Sense reported the following error: \", _context7.t0);\n            sAlert.error(message, _context7.t0);\n\n          case 17:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }\n\n    return makeClearSelectionInField$;\n  }(), null, this, [[0, 12]]);\n}\n\nfunction makeClearAll() {\n  var qix, message;\n  return _regenerator.default.async(function () {\n    function makeClearAll$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n            _context8.next = 3;\n            return _regenerator.default.awrap(slideApp.getSlideGenApp());\n\n          case 3:\n            qix = _context8.sent;\n            _context8.next = 6;\n            return _regenerator.default.awrap(qix.clearAll());\n\n          case 6:\n            _context8.next = 13;\n            break;\n\n          case 8:\n            _context8.prev = 8;\n            _context8.t0 = _context8[\"catch\"](0);\n            message = \"clear all selections: Can not connect to the Qlik Sense Engine API via enigmaJS\";\n            console.error(message + \" Sense reported the following error: \", _context8.t0);\n            sAlert.error(message, _context8.t0);\n\n          case 13:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }\n\n    return makeClearAll$;\n  }(), null, this, [[0, 8]]);\n}\n\nfunction makeSelectionInFields(selections) {\n  return _regenerator.default.async(function () {\n    function makeSelectionInFields$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            // console.log(\"makeSelectionInFields(selections)\", selections);\n            //for each qField\n            selections.forEach(function (selectionField) {\n              // console.log(\"selectionField\", selectionField);\n              //for each selected value (qSelectedFieldSelectionInfo) (e.g. country can have germany and france selected)\n              var selectValues = [];\n              selectionField.qSelectedFieldSelectionInfo.forEach(function (fieldValue) {\n                // console.log(\"fieldValue\", fieldValue);\n                selectValues.push({\n                  qText: fieldValue.qName,\n                  qIsNumeric: false,\n                  qNumber: 0\n                }); // console.log(\"selectValues\", selectValues);\n              });\n              makeSelectionInField(selectionField.qField, selectValues);\n            });\n\n          case 1:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }\n\n    return makeSelectionInFields$;\n  }(), null, this);\n}","map":{"version":3,"sources":["imports/ui/nav.js"],"names":["module","export","selectViaQueryId","selectInSense","selectMenuItemInSense","makeSelectionInField","makeSearchSelectionInField","makeClearSelectionInField","makeClearAll","makeSelectionInFields","Meteor","watch","require","v","Template","getSlideGenApp","getAllSlides","getLevel1","MenuItems","Session","slideApp","initQlikSense","enigma","Cookies","nav","helpers","isSlide","show","Router","current","route","getName","items","find","sort","qElemNumber","active","item","text","qText","get","events","window","location","replace","event","template","menuItem","currentTarget","id","preventDefault","shareLinkURL","origin","set","yourSaasPlatformMenu","onRendered","$","dropdown","mongoId","callPromise","qSelection","selection","sAlert","warning","field","go","slide","fieldName","value","console","log","toString","qix","getField","myField","selectValues","result","message","error","select","clear","clearAll","selections","forEach","selectionField","qSelectedFieldSelectionInfo","fieldValue","push","qName","qIsNumeric","qNumber","qField"],"mappings":"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","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\n// import { senseConfig } from \"/imports/api/config.js\";\nconst enigma = require(\"enigma.js\");\nimport \"/imports/ui/nav.html\";\nimport { getSlideGenApp, getAllSlides, getLevel1 } from \"/imports/ui/useCases/useCaseSelection\";\nimport { MenuItems } from \"/imports/ui/slideGenerator/slides\"\nimport { Session } from \"meteor/session\";\nimport * as slideApp from \"/imports/ui/useCases/useCaseSelection\";\n\n\nconst Cookies = require(\"js-cookie\");\n\n\n\nTemplate.nav.helpers({\n  isSlide() {\n    var show = Router.current().route.getName() == 'useCaseSelection' ? false : true;\n    return show;\n  },\n  items() {\n    var items = MenuItems.find({}, { sort: { qElemNumber: 1 } });\n    // console.log(\"🚀 ~ file: nav.js ~ line 23 ~ items ~ items\", items.fetch())\n    return items;\n  },\n  active(item) {\n    var text = item.qText;\n    if (text === Session.get(\"currentSubjectArea\")) {\n      return 'active'\n    }\n  }\n});\n\n//\n// ─── CLICK EVENTS ON MENU ITEMS ─────────────────────────────────────────────────.\n//\nimport { initQlikSense } from \"/imports/ui/useCases/useCaseSelection\";\n\n\nTemplate.nav.events({\n  \"click #home\": function () {\n    window.location.replace('/');\n  },\n  \"click a\": async function (event, template) {\n    var menuItem = event.currentTarget.id;\n\n    if (menuItem === \"sharePresentation\") {\n      initQlikSense();\n      event.preventDefault();\n\n      var id = Session.get('currentSelectionId');\n      var shareLinkURL = window.location.origin + '/?selection=' + id;\n      //update the value of the helper for the share link popup\n      Session.set('shareLinkURL', shareLinkURL);\n    } else {\n      // console.log('only see me for an area selection')\n      Session.set(\"showSubjectAreaIntroduction\", false);\n      Session.set(\"currentSubjectArea\", menuItem);\n      Session.set(\"currentChapter\", null)\n      await selectInSense('Subject area', menuItem);\n    }\n  }\n});\n\nTemplate.yourSaasPlatformMenu.onRendered(function () {\n  this.$(\".ui.dropdown\").dropdown();\n});\n\nexport async function selectViaQueryId(mongoId) {\n  var qSelection = await Meteor.callPromise(\"getSenseSelectionObject\", mongoId);\n  if (qSelection) {\n    await makeSelectionInFields(qSelection.selection);\n  } else {\n    sAlert.warning(\"We could not retreive a stored selection for this id...\");\n  }\n}\n\nexport async function selectInSense(field, selection) {\n  // console.log('make selection for field' + field + ' for value ' + selection);\n  Session.set(\"slideHeaders\", null);\n  await makeSearchSelectionInField(field, selection);\n  //get slides\n  await getAllSlides(true);\n  Router.go(\"slides\");\n}\n\n\n// if people click on a menu item, you want a specific slide to be selected, so the slide is the value to search for...\nexport async function selectMenuItemInSense(slide) {\n  // console.log(\"selectMenuItemInSense - slide\", slide);\n  Session.set(\"slideHeaders\", null);\n  await makeSearchSelectionInField(\"Level 2\", slide);\n  //get slides\n  await getAllSlides(true);\n  Router.go(\"slides\");\n}\n\nexport async function makeSelectionInField(fieldName, value) {\n  console.log(\"makeSelectionInField\", fieldName + \" : \" + value.toString());\n  try {\n    var qix =     await slideApp.getSlideGenApp();\n    var myField = await qix.getField(fieldName);\n    var result =  await myField.selectValues(value);\n  } catch (error) {\n    var message =\n      \"makeSelectionInField: Can not connect to the Qlik Sense Engine API via enigmaJS\";\n    console.error(message + \" Sense reported the following error: \", error);\n    sAlert.error(message, error);\n  }\n}\n\n//https://qlikcore.com/docs/services/qix-engine/apis/qix/field/#select\nexport async function makeSearchSelectionInField(fieldName, value) {\n  // console.log(\n  //   \"make search SelectionInField\",\n  //   fieldName + \" : \" + value.toString()\n  // );\n  try {\n    var qix = await slideApp.getSlideGenApp();\n    var myField = await qix.getField(fieldName);\n    var result = await myField.select(value);\n  } catch (error) {\n    var message =\n      \"make search SelectionInField: Can not connect to the Qlik Sense Engine API via enigmaJS\";\n    console.error(message + \" Sense reported the following error: \", error);\n    sAlert.error(message, error);\n  }\n}\n\nexport async function makeClearSelectionInField(fieldName) {\n  // console.log(\"🚀 ~ file: nav.js ~ line 127 ~ makeClearSelectionInField ~ makeClearSelectionInField\", fieldName)\n\n  try {\n    var qix = await slideApp.getSlideGenApp();\n    var myField = await qix.getField(fieldName);\n    var result = await myField.clear();\n  } catch (error) {\n    var message =\n      \"make clear SelectionInField: Can not connect to the Qlik Sense Engine API via enigmaJS\";\n    console.error(message + \" Sense reported the following error: \", error);\n    sAlert.error(message, error);\n  }\n}\n\nexport async function makeClearAll() {\n  // console.log(\"🚀 ~ file: nav.js ~ line 142 ~ makeClearAll\")\n\n  try {\n    var qix = await slideApp.getSlideGenApp();\n    await qix.clearAll();\n  } catch (error) {\n    var message =\n      \"clear all selections: Can not connect to the Qlik Sense Engine API via enigmaJS\";\n    console.error(message + \" Sense reported the following error: \", error);\n    sAlert.error(message, error);\n  }\n}\n\n\n//\n\nexport async function makeSelectionInFields(selections) {\n  // console.log(\"makeSelectionInFields(selections)\", selections);\n  //for each qField\n  selections.forEach(function (selectionField) {\n    // console.log(\"selectionField\", selectionField);\n    //for each selected value (qSelectedFieldSelectionInfo) (e.g. country can have germany and france selected)\n    var selectValues = [];\n    selectionField.qSelectedFieldSelectionInfo.forEach(function (fieldValue) {\n      // console.log(\"fieldValue\", fieldValue);\n      selectValues.push({\n        qText: fieldValue.qName,\n        qIsNumeric: false,\n        qNumber: 0\n      });\n      // console.log(\"selectValues\", selectValues);\n    });\n    makeSelectionInField(selectionField.qField, selectValues);\n  });\n}\n"]},"sourceType":"script","hash":"bfb0be9004a89bcdf3546ca1da7e6c0eee566f08"}
