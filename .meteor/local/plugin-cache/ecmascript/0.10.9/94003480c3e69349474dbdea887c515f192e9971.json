{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"packages/server-render/server-sink.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/server-render/server-sink.js","filename":"packages/server-render/server-sink.js","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/martijn/Documents/GitHub/QRSMeteor","root":"/home/martijn/Documents/GitHub/QRSMeteor","generatorOpts":{"filename":"packages/server-render/server-sink.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/server-render/server-sink.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nmodule.export({\n  ServerSink: function () {\n    return ServerSink;\n  },\n  isReadable: function () {\n    return isReadable;\n  }\n});\n\nvar ServerSink =\n/*#__PURE__*/\nfunction () {\n  function ServerSink(request, arch) {\n    this.request = request;\n    this.arch = arch;\n    this.head = \"\";\n    this.body = \"\";\n    this.htmlById = Object.create(null);\n    this.maybeMadeChanges = false;\n    this.statusCode = null;\n    this.responseHeaders = {};\n  }\n\n  var _proto = ServerSink.prototype;\n\n  _proto.appendToHead = function () {\n    function appendToHead(html) {\n      if (appendContent(this, \"head\", html)) {\n        this.maybeMadeChanges = true;\n      }\n    }\n\n    return appendToHead;\n  }();\n\n  _proto.appendToBody = function () {\n    function appendToBody(html) {\n      if (appendContent(this, \"body\", html)) {\n        this.maybeMadeChanges = true;\n      }\n    }\n\n    return appendToBody;\n  }();\n\n  _proto.appendToElementById = function () {\n    function appendToElementById(id, html) {\n      if (appendContent(this.htmlById, id, html)) {\n        this.maybeMadeChanges = true;\n      }\n    }\n\n    return appendToElementById;\n  }();\n\n  _proto.renderIntoElementById = function () {\n    function renderIntoElementById(id, html) {\n      this.htmlById[id] = \"\";\n      this.appendToElementById(id, html);\n    }\n\n    return renderIntoElementById;\n  }();\n\n  _proto.redirect = function () {\n    function redirect(location) {\n      var code = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 301;\n      this.maybeMadeChanges = true;\n      this.statusCode = code;\n      this.responseHeaders.Location = location;\n    }\n\n    return redirect;\n  }(); // server only methods\n\n\n  _proto.setStatusCode = function () {\n    function setStatusCode(code) {\n      this.maybeMadeChanges = true;\n      this.statusCode = code;\n    }\n\n    return setStatusCode;\n  }();\n\n  _proto.setHeader = function () {\n    function setHeader(key, value) {\n      this.maybeMadeChanges = true;\n      this.responseHeaders[key] = value;\n    }\n\n    return setHeader;\n  }();\n\n  _proto.getHeaders = function () {\n    function getHeaders() {\n      return this.request.headers;\n    }\n\n    return getHeaders;\n  }();\n\n  _proto.getCookies = function () {\n    function getCookies() {\n      return this.request.cookies;\n    }\n\n    return getCookies;\n  }();\n\n  return ServerSink;\n}();\n\nfunction isReadable(stream) {\n  return stream !== null && (0, _typeof2.default)(stream) === 'object' && typeof stream.pipe === 'function' && stream.readable !== false && typeof stream._read === 'function' && (0, _typeof2.default)(stream._readableState) === 'object';\n}\n\nfunction appendContent(object, property, content) {\n  var madeChanges = false;\n\n  if (Array.isArray(content)) {\n    content.forEach(function (elem) {\n      if (appendContent(object, property, elem)) {\n        madeChanges = true;\n      }\n    });\n  } else if (isReadable(content)) {\n    object[property] = content;\n    madeChanges = true;\n  } else if (content = content && content.toString(\"utf8\")) {\n    object[property] = (object[property] || \"\") + content;\n    madeChanges = true;\n  }\n\n  return madeChanges;\n}","map":{"version":3,"sources":["packages/server-render/server-sink.js"],"names":["module","export","ServerSink","isReadable","request","arch","head","body","htmlById","Object","create","maybeMadeChanges","statusCode","responseHeaders","appendToHead","html","appendContent","appendToBody","appendToElementById","id","renderIntoElementById","redirect","location","code","Location","setStatusCode","setHeader","key","value","getHeaders","headers","getCookies","cookies","stream","pipe","readable","_read","_readableState","object","property","content","madeChanges","Array","isArray","forEach","elem","toString"],"mappings":";;;;AAAAA,OAAOC,MAAP,CAAc;AAACC,cAAW;AAAA,WAAIA,UAAJ;AAAA,GAAZ;AAA2BC,cAAW;AAAA,WAAIA,UAAJ;AAAA;AAAtC,CAAd;;IAAaD,U;;;AACX,sBAAYE,OAAZ,EAAqBC,IAArB,EAA2B;AACzB,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,IAAL,GAAY,EAAZ;AACA,SAAKC,IAAL,GAAY,EAAZ;AACA,SAAKC,QAAL,GAAgBC,OAAOC,MAAP,CAAc,IAAd,CAAhB;AACA,SAAKC,gBAAL,GAAwB,KAAxB;AACA,SAAKC,UAAL,GAAkB,IAAlB;AACA,SAAKC,eAAL,GAAuB,EAAvB;AACD;;;;SAEDC,Y;0BAAaC,I,EAAM;AACjB,UAAIC,cAAc,IAAd,EAAoB,MAApB,EAA4BD,IAA5B,CAAJ,EAAuC;AACrC,aAAKJ,gBAAL,GAAwB,IAAxB;AACD;AACF;;;;;SAEDM,Y;0BAAaF,I,EAAM;AACjB,UAAIC,cAAc,IAAd,EAAoB,MAApB,EAA4BD,IAA5B,CAAJ,EAAuC;AACrC,aAAKJ,gBAAL,GAAwB,IAAxB;AACD;AACF;;;;;SAEDO,mB;iCAAoBC,E,EAAIJ,I,EAAM;AAC5B,UAAIC,cAAc,KAAKR,QAAnB,EAA6BW,EAA7B,EAAiCJ,IAAjC,CAAJ,EAA4C;AAC1C,aAAKJ,gBAAL,GAAwB,IAAxB;AACD;AACF;;;;;SAEDS,qB;mCAAsBD,E,EAAIJ,I,EAAM;AAC9B,WAAKP,QAAL,CAAcW,EAAd,IAAoB,EAApB;AACA,WAAKD,mBAAL,CAAyBC,EAAzB,EAA6BJ,IAA7B;AACD;;;;;SAEDM,Q;sBAASC,Q,EAAsB;AAAA,UAAZC,IAAY,uEAAL,GAAK;AAC7B,WAAKZ,gBAAL,GAAwB,IAAxB;AACA,WAAKC,UAAL,GAAkBW,IAAlB;AACA,WAAKV,eAAL,CAAqBW,QAArB,GAAgCF,QAAhC;AACD;;;OAED;;;SACAG,a;2BAAcF,I,EAAM;AAClB,WAAKZ,gBAAL,GAAwB,IAAxB;AACA,WAAKC,UAAL,GAAkBW,IAAlB;AACD;;;;;SAEDG,S;uBAAUC,G,EAAKC,K,EAAO;AACpB,WAAKjB,gBAAL,GAAwB,IAAxB;AACA,WAAKE,eAAL,CAAqBc,GAArB,IAA4BC,KAA5B;AACD;;;;;SAEDC,U;0BAAa;AACX,aAAO,KAAKzB,OAAL,CAAa0B,OAApB;AACD;;;;;SAEDC,U;0BAAa;AACX,aAAO,KAAK3B,OAAL,CAAa4B,OAApB;AACD;;;;;;;;AAGI,SAAS7B,UAAT,CAAoB8B,MAApB,EAA4B;AACjC,SACEA,WAAW,IAAX,IACA,sBAAOA,MAAP,MAAkB,QADlB,IAEA,OAAOA,OAAOC,IAAd,KAAuB,UAFvB,IAGAD,OAAOE,QAAP,KAAoB,KAHpB,IAIA,OAAOF,OAAOG,KAAd,KAAwB,UAJxB,IAKA,sBAAOH,OAAOI,cAAd,MAAiC,QANnC;AAQD;;AAED,SAASrB,aAAT,CAAuBsB,MAAvB,EAA+BC,QAA/B,EAAyCC,OAAzC,EAAkD;AAChD,MAAIC,cAAc,KAAlB;;AAEA,MAAIC,MAAMC,OAAN,CAAcH,OAAd,CAAJ,EAA4B;AAC1BA,YAAQI,OAAR,CAAgB,gBAAQ;AACtB,UAAI5B,cAAcsB,MAAd,EAAsBC,QAAtB,EAAgCM,IAAhC,CAAJ,EAA2C;AACzCJ,sBAAc,IAAd;AACD;AACF,KAJD;AAKD,GAND,MAMO,IAAItC,WAAWqC,OAAX,CAAJ,EAAyB;AAC9BF,WAAOC,QAAP,IAAmBC,OAAnB;AACAC,kBAAc,IAAd;AACD,GAHM,MAGA,IAAKD,UAAUA,WAAWA,QAAQM,QAAR,CAAiB,MAAjB,CAA1B,EAAqD;AAC1DR,WAAOC,QAAP,IAAmB,CAACD,OAAOC,QAAP,KAAoB,EAArB,IAA2BC,OAA9C;AACAC,kBAAc,IAAd;AACD;;AACD,SAAOA,WAAP;AACD","sourcesContent":["export class ServerSink {\n  constructor(request, arch) {\n    this.request = request;\n    this.arch = arch;\n    this.head = \"\";\n    this.body = \"\";\n    this.htmlById = Object.create(null);\n    this.maybeMadeChanges = false;\n    this.statusCode = null;\n    this.responseHeaders = {};\n  }\n\n  appendToHead(html) {\n    if (appendContent(this, \"head\", html)) {\n      this.maybeMadeChanges = true;\n    }\n  }\n\n  appendToBody(html) {\n    if (appendContent(this, \"body\", html)) {\n      this.maybeMadeChanges = true;\n    }\n  }\n\n  appendToElementById(id, html) {\n    if (appendContent(this.htmlById, id, html)) {\n      this.maybeMadeChanges = true;\n    }\n  }\n\n  renderIntoElementById(id, html) {\n    this.htmlById[id] = \"\";\n    this.appendToElementById(id, html);\n  }\n\n  redirect(location, code = 301) {\n    this.maybeMadeChanges = true;\n    this.statusCode = code;\n    this.responseHeaders.Location = location;\n  }\n\n  // server only methods\n  setStatusCode(code) {\n    this.maybeMadeChanges = true;\n    this.statusCode = code;\n  }\n\n  setHeader(key, value) {\n    this.maybeMadeChanges = true;\n    this.responseHeaders[key] = value;\n  }\n\n  getHeaders() {\n    return this.request.headers;\n  }\n\n  getCookies() {\n    return this.request.cookies;\n  }\n}\n\nexport function isReadable(stream) {\n  return (\n    stream !== null &&\n    typeof stream === 'object' &&\n    typeof stream.pipe === 'function' &&\n    stream.readable !== false &&\n    typeof stream._read === 'function' &&\n    typeof stream._readableState === 'object'\n  );\n}\n\nfunction appendContent(object, property, content) {\n  let madeChanges = false;\n\n  if (Array.isArray(content)) {\n    content.forEach(elem => {\n      if (appendContent(object, property, elem)) {\n        madeChanges = true;\n      }\n    });\n  } else if (isReadable(content)) {\n    object[property] = content;\n    madeChanges = true;\n  } else if ((content = content && content.toString(\"utf8\"))) {\n    object[property] = (object[property] || \"\") + content;\n    madeChanges = true;\n  } \n  return madeChanges;\n}\n"]},"sourceType":"script","hash":"94003480c3e69349474dbdea887c515f192e9971"}
