{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"packages/server-render/server-render-tests.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/server-render/server-render-tests.js","filename":"packages/server-render/server-render-tests.js","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/martijn/Documents/GitHub/QRSMeteor","root":"/home/martijn/Documents/GitHub/QRSMeteor","presets":[],"generatorOpts":{"filename":"packages/server-render/server-render-tests.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/server-render/server-render-tests.js"}},"code":"let Tinytest;\nmodule.watch(require(\"meteor/tinytest\"), {\n  Tinytest(v) {\n    Tinytest = v;\n  }\n\n}, 0);\nlet WebAppInternals;\nmodule.watch(require(\"meteor/webapp\"), {\n  WebAppInternals(v) {\n    WebAppInternals = v;\n  }\n\n}, 1);\nlet onPageLoad;\nmodule.watch(require(\"meteor/server-render\"), {\n  onPageLoad(v) {\n    onPageLoad = v;\n  }\n\n}, 2);\nlet parse;\nmodule.watch(require(\"parse5\"), {\n  parse(v) {\n    parse = v;\n  }\n\n}, 3);\nlet streamToString;\nmodule.watch(require(\"stream-to-string\"), {\n  default(v) {\n    streamToString = v;\n  }\n\n}, 4);\nconst skeleton = `\n  <h1>Look, Ma... static HTML!</h1>\n  <div id=\"container-2\"></div>\n  <p>\n    <div id=\"container-1\">\n    </div>\n  </p>`;\nTinytest.addAsync('server-render - boilerplate', function (test) {\n  return Promise.asyncApply(() => {\n    // This test is not a very good demonstration of the server-render\n    // abstraction. In normal usage, you would call renderIntoElementById\n    // and not think about the rest of this stuff. The extra complexity owes\n    // to the trickiness of testing this package without using a real\n    // browser to parse the resulting HTTP response.\n    const realCallback = // Use the underlying abstraction to set the static HTML skeleton.\n    WebAppInternals.registerBoilerplateDataCallback(\"meteor/server-render\", (request, data, arch) => {\n      if (request.isServerRenderTest) {\n        test.equal(arch, \"web.browser\");\n        test.equal(request.url, \"/server-render/test\");\n        data.body = skeleton;\n      }\n\n      return realCallback.call(this, request, data, arch);\n    });\n    const callback1 = onPageLoad(sink => {\n      sink.renderIntoElementById(\"container-1\", \"<oyez/>\");\n    }); // This callback is async, and that's fine because\n    // WebAppInternals.getBoilerplate is able to yield. Internally the\n    // webapp package uses a function called getBoilerplateAsync, so the\n    // Fiber power-tools need not be involved in typical requests.\n\n    const callback2 = onPageLoad(sink => Promise.asyncApply(() => {\n      sink.renderIntoElementById(\"container-2\", Promise.await(\"oy\") + Promise.await(\"ez\"));\n    }));\n\n    try {\n      const {\n        stream\n      } = WebAppInternals.getBoilerplate({\n        isServerRenderTest: true,\n        browser: {\n          name: \"fake\"\n        },\n        url: \"/server-render/test\"\n      }, \"web.browser\");\n      const boilerplate = Promise.await(streamToString(stream));\n      const ids = [];\n      const seen = new Set();\n\n      function walk(node) {\n        if (node && !seen.has(node)) {\n          seen.add(node);\n\n          if (node.nodeName === \"div\" && node.attrs) {\n            node.attrs.some(attr => {\n              if (attr.name === \"id\") {\n                const id = attr.value;\n\n                if (id === \"container-1\") {\n                  test.equal(node.childNodes[0].nodeName, \"oyez\");\n                  ids.push(id);\n                } else if (id === \"container-2\") {\n                  const child = node.childNodes[0];\n                  test.equal(child.nodeName, \"#text\");\n                  test.equal(child.value.trim(), \"oyez\");\n                  ids.push(id);\n                }\n\n                return true;\n              }\n            });\n          }\n\n          if (node.childNodes) {\n            node.childNodes.forEach(walk);\n          }\n        }\n      }\n\n      walk(parse(boilerplate));\n      test.equal(ids, [\"container-2\", \"container-1\"]);\n    } finally {\n      // Cleanup to minimize interference with other tests:\n      WebAppInternals.registerBoilerplateDataCallback(\"meteor/server-render\", realCallback);\n      onPageLoad.remove(callback1);\n      onPageLoad.remove(callback2);\n    }\n  });\n});","map":{"version":3,"sources":["packages/server-render/server-render-tests.js"],"names":["Tinytest","module","watch","require","v","WebAppInternals","onPageLoad","parse","streamToString","default","skeleton","addAsync","test","realCallback","registerBoilerplateDataCallback","request","data","arch","isServerRenderTest","equal","url","body","call","callback1","sink","renderIntoElementById","callback2","stream","getBoilerplate","browser","name","boilerplate","ids","seen","Set","walk","node","has","add","nodeName","attrs","some","attr","id","value","childNodes","push","child","trim","forEach","remove"],"mappings":"AAAA,IAAIA,QAAJ;AAAaC,OAAOC,KAAP,CAAaC,QAAQ,iBAAR,CAAb,EAAwC;AAACH,WAASI,CAAT,EAAW;AAACJ,eAASI,CAAT;AAAW;;AAAxB,CAAxC,EAAkE,CAAlE;AAAqE,IAAIC,eAAJ;AAAoBJ,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACE,kBAAgBD,CAAhB,EAAkB;AAACC,sBAAgBD,CAAhB;AAAkB;;AAAtC,CAAtC,EAA8E,CAA9E;AAAiF,IAAIE,UAAJ;AAAeL,OAAOC,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAACG,aAAWF,CAAX,EAAa;AAACE,iBAAWF,CAAX;AAAa;;AAA5B,CAA7C,EAA2E,CAA3E;AAA8E,IAAIG,KAAJ;AAAUN,OAAOC,KAAP,CAAaC,QAAQ,QAAR,CAAb,EAA+B;AAACI,QAAMH,CAAN,EAAQ;AAACG,YAAMH,CAAN;AAAQ;;AAAlB,CAA/B,EAAmD,CAAnD;AAAsD,IAAII,cAAJ;AAAmBP,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACM,UAAQL,CAAR,EAAU;AAACI,qBAAeJ,CAAf;AAAiB;;AAA7B,CAAzC,EAAwE,CAAxE;AAMvW,MAAMM,WAAY;;;;;;OAAlB;AAQAV,SAASW,QAAT,CACE,6BADF,EAEE,UAAgBC,IAAhB;AAAA,kCAAsB;AACpB;AACA;AACA;AACA;AACA;AAEA,UAAMC,eACJ;AACAR,oBAAgBS,+BAAhB,CACE,sBADF,EAEE,CAACC,OAAD,EAAUC,IAAV,EAAgBC,IAAhB,KAAyB;AACvB,UAAIF,QAAQG,kBAAZ,EAAgC;AAC9BN,aAAKO,KAAL,CAAWF,IAAX,EAAiB,aAAjB;AACAL,aAAKO,KAAL,CAAWJ,QAAQK,GAAnB,EAAwB,qBAAxB;AACAJ,aAAKK,IAAL,GAAYX,QAAZ;AACD;;AACD,aAAOG,aAAaS,IAAb,CAAkB,IAAlB,EAAwBP,OAAxB,EAAiCC,IAAjC,EAAuCC,IAAvC,CAAP;AACD,KATH,CAFF;AAcA,UAAMM,YAAYjB,WAAWkB,QAAQ;AACnCA,WAAKC,qBAAL,CAA2B,aAA3B,EAA0C,SAA1C;AACD,KAFiB,CAAlB,CArBoB,CAyBpB;AACA;AACA;AACA;;AACA,UAAMC,YAAYpB,WAAiBkB,IAAN,6BAAc;AACzCA,WAAKC,qBAAL,CACE,aADF,EAEE,cAAO,IAAP,kBAAsB,IAAtB,CAFF;AAID,KAL4B,CAAX,CAAlB;;AAOA,QAAI;AACF,YAAM;AAAEE;AAAF,UAAatB,gBAAgBuB,cAAhB,CAA+B;AAChDV,4BAAoB,IAD4B;AAEhDW,iBAAS;AAAEC,gBAAM;AAAR,SAFuC;AAGhDV,aAAK;AAH2C,OAA/B,EAIhB,aAJgB,CAAnB;AAMA,YAAMW,4BAAoBvB,eAAemB,MAAf,CAApB,CAAN;AAEA,YAAMK,MAAM,EAAZ;AACA,YAAMC,OAAO,IAAIC,GAAJ,EAAb;;AAEA,eAASC,IAAT,CAAcC,IAAd,EAAoB;AAClB,YAAIA,QAAQ,CAAEH,KAAKI,GAAL,CAASD,IAAT,CAAd,EAA8B;AAC5BH,eAAKK,GAAL,CAASF,IAAT;;AAEA,cAAIA,KAAKG,QAAL,KAAkB,KAAlB,IAA2BH,KAAKI,KAApC,EAA2C;AACzCJ,iBAAKI,KAAL,CAAWC,IAAX,CAAgBC,QAAQ;AACtB,kBAAIA,KAAKZ,IAAL,KAAc,IAAlB,EAAwB;AACtB,sBAAMa,KAAKD,KAAKE,KAAhB;;AAEA,oBAAID,OAAO,aAAX,EAA0B;AACxB/B,uBAAKO,KAAL,CAAWiB,KAAKS,UAAL,CAAgB,CAAhB,EAAmBN,QAA9B,EAAwC,MAAxC;AACAP,sBAAIc,IAAJ,CAASH,EAAT;AACD,iBAHD,MAGO,IAAIA,OAAO,aAAX,EAA0B;AAC/B,wBAAMI,QAAQX,KAAKS,UAAL,CAAgB,CAAhB,CAAd;AACAjC,uBAAKO,KAAL,CAAW4B,MAAMR,QAAjB,EAA2B,OAA3B;AACA3B,uBAAKO,KAAL,CAAW4B,MAAMH,KAAN,CAAYI,IAAZ,EAAX,EAA+B,MAA/B;AACAhB,sBAAIc,IAAJ,CAASH,EAAT;AACD;;AAED,uBAAO,IAAP;AACD;AACF,aAhBD;AAiBD;;AAED,cAAIP,KAAKS,UAAT,EAAqB;AACnBT,iBAAKS,UAAL,CAAgBI,OAAhB,CAAwBd,IAAxB;AACD;AACF;AACF;;AAEDA,WAAK5B,MAAMwB,WAAN,CAAL;AAEAnB,WAAKO,KAAL,CAAWa,GAAX,EAAgB,CAAC,aAAD,EAAgB,aAAhB,CAAhB;AAED,KA9CD,SA8CU;AACR;AACA3B,sBAAgBS,+BAAhB,CACE,sBADF,EAEED,YAFF;AAKAP,iBAAW4C,MAAX,CAAkB3B,SAAlB;AACAjB,iBAAW4C,MAAX,CAAkBxB,SAAlB;AACD;AACF,GA5FD;AAAA,CAFF","sourcesContent":["import { Tinytest } from \"meteor/tinytest\";\nimport { WebAppInternals } from \"meteor/webapp\";\nimport { onPageLoad } from \"meteor/server-render\";\nimport { parse } from \"parse5\";\nimport streamToString from \"stream-to-string\";\n\nconst skeleton = `\n  <h1>Look, Ma... static HTML!</h1>\n  <div id=\"container-2\"></div>\n  <p>\n    <div id=\"container-1\">\n    </div>\n  </p>`;\n\nTinytest.addAsync(\n  'server-render - boilerplate',\n  async function (test) {\n    // This test is not a very good demonstration of the server-render\n    // abstraction. In normal usage, you would call renderIntoElementById\n    // and not think about the rest of this stuff. The extra complexity owes\n    // to the trickiness of testing this package without using a real\n    // browser to parse the resulting HTTP response.\n\n    const realCallback =\n      // Use the underlying abstraction to set the static HTML skeleton.\n      WebAppInternals.registerBoilerplateDataCallback(\n        \"meteor/server-render\",\n        (request, data, arch) => {\n          if (request.isServerRenderTest) {\n            test.equal(arch, \"web.browser\");\n            test.equal(request.url, \"/server-render/test\");\n            data.body = skeleton;\n          }\n          return realCallback.call(this, request, data, arch);\n        }\n      );\n\n    const callback1 = onPageLoad(sink => {\n      sink.renderIntoElementById(\"container-1\", \"<oyez/>\");\n    });\n\n    // This callback is async, and that's fine because\n    // WebAppInternals.getBoilerplate is able to yield. Internally the\n    // webapp package uses a function called getBoilerplateAsync, so the\n    // Fiber power-tools need not be involved in typical requests.\n    const callback2 = onPageLoad(async sink => {\n      sink.renderIntoElementById(\n        \"container-2\",\n        (await \"oy\") + (await \"ez\")\n      );\n    });\n\n    try {\n      const { stream } = WebAppInternals.getBoilerplate({\n        isServerRenderTest: true,\n        browser: { name: \"fake\" },\n        url: \"/server-render/test\",\n      }, \"web.browser\");\n\n      const boilerplate = await streamToString(stream);\n\n      const ids = [];\n      const seen = new Set;\n\n      function walk(node) {\n        if (node && ! seen.has(node)) {\n          seen.add(node);\n\n          if (node.nodeName === \"div\" && node.attrs) {\n            node.attrs.some(attr => {\n              if (attr.name === \"id\") {\n                const id = attr.value;\n\n                if (id === \"container-1\") {\n                  test.equal(node.childNodes[0].nodeName, \"oyez\");\n                  ids.push(id);\n                } else if (id === \"container-2\") {\n                  const child = node.childNodes[0];\n                  test.equal(child.nodeName, \"#text\");\n                  test.equal(child.value.trim(), \"oyez\");\n                  ids.push(id);\n                }\n\n                return true;\n              }\n            });\n          }\n\n          if (node.childNodes) {\n            node.childNodes.forEach(walk)\n          }\n        }\n      }\n\n      walk(parse(boilerplate));\n\n      test.equal(ids, [\"container-2\", \"container-1\"]);\n\n    } finally {\n      // Cleanup to minimize interference with other tests:\n      WebAppInternals.registerBoilerplateDataCallback(\n        \"meteor/server-render\",\n        realCallback\n      );\n\n      onPageLoad.remove(callback1);\n      onPageLoad.remove(callback2);\n    }\n  }\n);\n"]},"sourceType":"script","hash":"390e8dfef0a302bad66ff13c2e45813d0deecc68"}
