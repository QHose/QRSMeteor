{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"packages/socket-stream-client/node.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/socket-stream-client/node.js","filename":"packages/socket-stream-client/node.js","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/martijn/Documents/GitHub/QRSMeteor","root":"/home/martijn/Documents/GitHub/QRSMeteor","presets":[],"generatorOpts":{"filename":"packages/socket-stream-client/node.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/socket-stream-client/node.js"}},"code":"const module1 = module;\nmodule1.export({\n  ClientStream: () => ClientStream\n});\nlet Meteor;\nmodule1.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet toWebsocketUrl;\nmodule1.watch(require(\"./urls.js\"), {\n  toWebsocketUrl(v) {\n    toWebsocketUrl = v;\n  }\n\n}, 1);\nlet StreamClientCommon;\nmodule1.watch(require(\"./common.js\"), {\n  StreamClientCommon(v) {\n    StreamClientCommon = v;\n  }\n\n}, 2);\n\nclass ClientStream extends StreamClientCommon {\n  constructor(endpoint, options) {\n    super(options);\n    this.client = null; // created in _launchConnection\n\n    this.endpoint = endpoint;\n    this.headers = this.options.headers || Object.create(null);\n    this.npmFayeOptions = this.options.npmFayeOptions || Object.create(null);\n\n    this._initCommon(this.options); //// Kickoff!\n\n\n    this._launchConnection();\n  } // data is a utf8 string. Data sent while not connected is dropped on\n  // the floor, and it is up the user of this API to retransmit lost\n  // messages on 'reset'\n\n\n  send(data) {\n    if (this.currentStatus.connected) {\n      this.client.send(data);\n    }\n  } // Changes where this connection points\n\n\n  _changeUrl(url) {\n    this.endpoint = url;\n  }\n\n  _onConnect(client) {\n    if (client !== this.client) {\n      // This connection is not from the last call to _launchConnection.\n      // But _launchConnection calls _cleanup which closes previous connections.\n      // It's our belief that this stifles future 'open' events, but maybe\n      // we are wrong?\n      throw new Error('Got open from inactive client ' + !!this.client);\n    }\n\n    if (this._forcedToDisconnect) {\n      // We were asked to disconnect between trying to open the connection and\n      // actually opening it. Let's just pretend this never happened.\n      this.client.close();\n      this.client = null;\n      return;\n    }\n\n    if (this.currentStatus.connected) {\n      // We already have a connection. It must have been the case that we\n      // started two parallel connection attempts (because we wanted to\n      // 'reconnect now' on a hanging connection and we had no way to cancel the\n      // connection attempt.) But this shouldn't happen (similarly to the client\n      // !== this.client check above).\n      throw new Error('Two parallel connections?');\n    }\n\n    this._clearConnectionTimer(); // update status\n\n\n    this.currentStatus.status = 'connected';\n    this.currentStatus.connected = true;\n    this.currentStatus.retryCount = 0;\n    this.statusChanged(); // fire resets. This must come after status change so that clients\n    // can call send from within a reset callback.\n\n    this.forEachCallback('reset', callback => {\n      callback();\n    });\n  }\n\n  _cleanup(maybeError) {\n    this._clearConnectionTimer();\n\n    if (this.client) {\n      var client = this.client;\n      this.client = null;\n      client.close();\n      this.forEachCallback('disconnect', callback => {\n        callback(maybeError);\n      });\n    }\n  }\n\n  _clearConnectionTimer() {\n    if (this.connectionTimer) {\n      clearTimeout(this.connectionTimer);\n      this.connectionTimer = null;\n    }\n  }\n\n  _getProxyUrl(targetUrl) {\n    // Similar to code in tools/http-helpers.js.\n    var proxy = process.env.HTTP_PROXY || process.env.http_proxy || null; // if we're going to a secure url, try the https_proxy env variable first.\n\n    if (targetUrl.match(/^wss:/)) {\n      proxy = process.env.HTTPS_PROXY || process.env.https_proxy || proxy;\n    }\n\n    return proxy;\n  }\n\n  _launchConnection() {\n    this._cleanup(); // cleanup the old socket, if there was one.\n    // Since server-to-server DDP is still an experimental feature, we only\n    // require the module if we actually create a server-to-server\n    // connection.\n\n\n    var FayeWebSocket = Npm.require('faye-websocket');\n\n    var deflate = Npm.require('permessage-deflate');\n\n    var targetUrl = toWebsocketUrl(this.endpoint);\n    var fayeOptions = {\n      headers: this.headers,\n      extensions: [deflate]\n    };\n    fayeOptions = Object.assign(fayeOptions, this.npmFayeOptions);\n\n    var proxyUrl = this._getProxyUrl(targetUrl);\n\n    if (proxyUrl) {\n      fayeOptions.proxy = {\n        origin: proxyUrl\n      };\n    } // We would like to specify 'ddp' as the subprotocol here. The npm module we\n    // used to use as a client would fail the handshake if we ask for a\n    // subprotocol and the server doesn't send one back (and sockjs doesn't).\n    // Faye doesn't have that behavior; it's unclear from reading RFC 6455 if\n    // Faye is erroneous or not.  So for now, we don't specify protocols.\n\n\n    var subprotocols = [];\n    var client = this.client = new FayeWebSocket.Client(targetUrl, subprotocols, fayeOptions);\n\n    this._clearConnectionTimer();\n\n    this.connectionTimer = Meteor.setTimeout(() => {\n      this._lostConnection(new this.ConnectionError('DDP connection timed out'));\n    }, this.CONNECT_TIMEOUT);\n    this.client.on('open', Meteor.bindEnvironment(() => {\n      return this._onConnect(client);\n    }, 'stream connect callback'));\n\n    var clientOnIfCurrent = (event, description, callback) => {\n      this.client.on(event, Meteor.bindEnvironment((...args) => {\n        // Ignore events from any connection we've already cleaned up.\n        if (client !== this.client) return;\n        callback(...args);\n      }, description));\n    };\n\n    clientOnIfCurrent('error', 'stream error callback', error => {\n      if (!this.options._dontPrintErrors) Meteor._debug('stream error', error.message); // Faye's 'error' object is not a JS error (and among other things,\n      // doesn't stringify well). Convert it to one.\n\n      this._lostConnection(new this.ConnectionError(error.message));\n    });\n    clientOnIfCurrent('close', 'stream close callback', () => {\n      this._lostConnection();\n    });\n    clientOnIfCurrent('message', 'stream message callback', message => {\n      // Ignore binary frames, where message.data is a Buffer\n      if (typeof message.data !== 'string') return;\n      this.forEachCallback('message', callback => {\n        callback(message.data);\n      });\n    });\n  }\n\n}","map":{"version":3,"sources":["packages/socket-stream-client/node.js"],"names":["module1","module","export","ClientStream","Meteor","watch","require","v","toWebsocketUrl","StreamClientCommon","constructor","endpoint","options","client","headers","Object","create","npmFayeOptions","_initCommon","_launchConnection","send","data","currentStatus","connected","_changeUrl","url","_onConnect","Error","_forcedToDisconnect","close","_clearConnectionTimer","status","retryCount","statusChanged","forEachCallback","callback","_cleanup","maybeError","connectionTimer","clearTimeout","_getProxyUrl","targetUrl","proxy","process","env","HTTP_PROXY","http_proxy","match","HTTPS_PROXY","https_proxy","FayeWebSocket","Npm","deflate","fayeOptions","extensions","assign","proxyUrl","origin","subprotocols","Client","setTimeout","_lostConnection","ConnectionError","CONNECT_TIMEOUT","on","bindEnvironment","clientOnIfCurrent","event","description","args","error","_dontPrintErrors","_debug","message"],"mappings":"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","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { toWebsocketUrl } from \"./urls.js\";\nimport { StreamClientCommon } from \"./common.js\";\n\n// @param endpoint {String} URL to Meteor app\n//   \"http://subdomain.meteor.com/\" or \"/\" or\n//   \"ddp+sockjs://foo-**.meteor.com/sockjs\"\n//\n// We do some rewriting of the URL to eventually make it \"ws://\" or \"wss://\",\n// whatever was passed in.  At the very least, what Meteor.absoluteUrl() returns\n// us should work.\n//\n// We don't do any heartbeating. (The logic that did this in sockjs was removed,\n// because it used a built-in sockjs mechanism. We could do it with WebSocket\n// ping frames or with DDP-level messages.)\nexport class ClientStream extends StreamClientCommon {\n  constructor(endpoint, options) {\n    super(options);\n\n    this.client = null; // created in _launchConnection\n    this.endpoint = endpoint;\n\n    this.headers = this.options.headers || Object.create(null);\n    this.npmFayeOptions = this.options.npmFayeOptions || Object.create(null);\n\n    this._initCommon(this.options);\n\n    //// Kickoff!\n    this._launchConnection();\n  }\n\n  // data is a utf8 string. Data sent while not connected is dropped on\n  // the floor, and it is up the user of this API to retransmit lost\n  // messages on 'reset'\n  send(data) {\n    if (this.currentStatus.connected) {\n      this.client.send(data);\n    }\n  }\n\n  // Changes where this connection points\n  _changeUrl(url) {\n    this.endpoint = url;\n  }\n\n  _onConnect(client) {\n    if (client !== this.client) {\n      // This connection is not from the last call to _launchConnection.\n      // But _launchConnection calls _cleanup which closes previous connections.\n      // It's our belief that this stifles future 'open' events, but maybe\n      // we are wrong?\n      throw new Error('Got open from inactive client ' + !!this.client);\n    }\n\n    if (this._forcedToDisconnect) {\n      // We were asked to disconnect between trying to open the connection and\n      // actually opening it. Let's just pretend this never happened.\n      this.client.close();\n      this.client = null;\n      return;\n    }\n\n    if (this.currentStatus.connected) {\n      // We already have a connection. It must have been the case that we\n      // started two parallel connection attempts (because we wanted to\n      // 'reconnect now' on a hanging connection and we had no way to cancel the\n      // connection attempt.) But this shouldn't happen (similarly to the client\n      // !== this.client check above).\n      throw new Error('Two parallel connections?');\n    }\n\n    this._clearConnectionTimer();\n\n    // update status\n    this.currentStatus.status = 'connected';\n    this.currentStatus.connected = true;\n    this.currentStatus.retryCount = 0;\n    this.statusChanged();\n\n    // fire resets. This must come after status change so that clients\n    // can call send from within a reset callback.\n    this.forEachCallback('reset', callback => {\n      callback();\n    });\n  }\n\n  _cleanup(maybeError) {\n    this._clearConnectionTimer();\n    if (this.client) {\n      var client = this.client;\n      this.client = null;\n      client.close();\n\n      this.forEachCallback('disconnect', callback => {\n        callback(maybeError);\n      });\n    }\n  }\n\n  _clearConnectionTimer() {\n    if (this.connectionTimer) {\n      clearTimeout(this.connectionTimer);\n      this.connectionTimer = null;\n    }\n  }\n\n  _getProxyUrl(targetUrl) {\n    // Similar to code in tools/http-helpers.js.\n    var proxy = process.env.HTTP_PROXY || process.env.http_proxy || null;\n    // if we're going to a secure url, try the https_proxy env variable first.\n    if (targetUrl.match(/^wss:/)) {\n      proxy = process.env.HTTPS_PROXY || process.env.https_proxy || proxy;\n    }\n    return proxy;\n  }\n\n  _launchConnection() {\n    this._cleanup(); // cleanup the old socket, if there was one.\n\n    // Since server-to-server DDP is still an experimental feature, we only\n    // require the module if we actually create a server-to-server\n    // connection.\n    var FayeWebSocket = Npm.require('faye-websocket');\n    var deflate = Npm.require('permessage-deflate');\n\n    var targetUrl = toWebsocketUrl(this.endpoint);\n    var fayeOptions = {\n      headers: this.headers,\n      extensions: [deflate]\n    };\n    fayeOptions = Object.assign(fayeOptions, this.npmFayeOptions);\n    var proxyUrl = this._getProxyUrl(targetUrl);\n    if (proxyUrl) {\n      fayeOptions.proxy = { origin: proxyUrl };\n    }\n\n    // We would like to specify 'ddp' as the subprotocol here. The npm module we\n    // used to use as a client would fail the handshake if we ask for a\n    // subprotocol and the server doesn't send one back (and sockjs doesn't).\n    // Faye doesn't have that behavior; it's unclear from reading RFC 6455 if\n    // Faye is erroneous or not.  So for now, we don't specify protocols.\n    var subprotocols = [];\n\n    var client = (this.client = new FayeWebSocket.Client(\n      targetUrl,\n      subprotocols,\n      fayeOptions\n    ));\n\n    this._clearConnectionTimer();\n    this.connectionTimer = Meteor.setTimeout(() => {\n      this._lostConnection(new this.ConnectionError('DDP connection timed out'));\n    }, this.CONNECT_TIMEOUT);\n\n    this.client.on(\n      'open',\n      Meteor.bindEnvironment(() => {\n        return this._onConnect(client);\n      }, 'stream connect callback')\n    );\n\n    var clientOnIfCurrent = (event, description, callback) => {\n      this.client.on(\n        event,\n        Meteor.bindEnvironment((...args) => {\n          // Ignore events from any connection we've already cleaned up.\n          if (client !== this.client) return;\n          callback(...args);\n        }, description)\n      );\n    };\n\n    clientOnIfCurrent('error', 'stream error callback', error => {\n      if (!this.options._dontPrintErrors)\n        Meteor._debug('stream error', error.message);\n\n      // Faye's 'error' object is not a JS error (and among other things,\n      // doesn't stringify well). Convert it to one.\n      this._lostConnection(new this.ConnectionError(error.message));\n    });\n\n    clientOnIfCurrent('close', 'stream close callback', () => {\n      this._lostConnection();\n    });\n\n    clientOnIfCurrent('message', 'stream message callback', message => {\n      // Ignore binary frames, where message.data is a Buffer\n      if (typeof message.data !== 'string') return;\n\n      this.forEachCallback('message', callback => {\n        callback(message.data);\n      });\n    });\n  }\n}\n"]},"sourceType":"script","hash":"775b1f3b2712495019817266c25b506671867601"}
