{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"packages/socket-stream-client/client-tests.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/socket-stream-client/client-tests.js","filename":"packages/socket-stream-client/client-tests.js","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/martijn/Documents/GitHub/QRSMeteor","root":"/home/martijn/Documents/GitHub/QRSMeteor","presets":[],"generatorOpts":{"filename":"packages/socket-stream-client/client-tests.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/socket-stream-client/client-tests.js"}},"code":"let toSockjsUrl;\nmodule.watch(require(\"./urls.js\"), {\n  toSockjsUrl(v) {\n    toSockjsUrl = v;\n  }\n\n}, 0);\nlet ClientStream;\nmodule.watch(require(\"meteor/socket-stream-client\"), {\n  ClientStream(v) {\n    ClientStream = v;\n  }\n\n}, 1);\nTinytest.add('stream - status', function (test) {\n  // Very basic test. Just see that it runs and returns something. Not a\n  // lot of coverage, but enough that it would have caught a recent bug.\n  var status = Meteor.status();\n  test.equal(typeof status, 'object');\n  test.isTrue(status.status); // Make sure backward-compatiblity names are defined.\n\n  test.equal(status.retryCount, status.retryCount);\n  test.equal(status.retryTime, status.retryTime);\n});\ntestAsyncMulti('stream - reconnect', [function (test, expect) {\n  var callback = _.once(expect(function () {\n    var status;\n    status = Meteor.status();\n    test.equal(status.status, 'connected');\n    Meteor.reconnect();\n    status = Meteor.status();\n    test.equal(status.status, 'connected');\n    Meteor.reconnect({\n      _force: true\n    });\n    status = Meteor.status();\n    test.equal(status.status, 'waiting');\n  }));\n\n  if (Meteor.status().status !== 'connected') Meteor.connection._stream.on('reset', callback);else callback();\n}]); // Disconnecting and reconnecting transitions through the correct statuses.\n\ntestAsyncMulti('stream - basic disconnect', [function (test, expect) {\n  var history = [];\n  var stream = new ClientStream('/');\n  var onTestComplete = expect(function (unexpectedHistory) {\n    stream.disconnect();\n\n    if (unexpectedHistory) {\n      test.fail('Unexpected status history: ' + JSON.stringify(unexpectedHistory));\n    }\n  });\n  Tracker.autorun(function () {\n    var status = stream.status();\n\n    if (_.last(history) !== status.status) {\n      history.push(status.status);\n\n      if (_.isEqual(history, ['connecting'])) {// do nothing; wait for the next state\n      } else if (_.isEqual(history, ['connecting', 'connected'])) {\n        stream.disconnect();\n      } else if (_.isEqual(history, ['connecting', 'connected', 'offline'])) {\n        stream.reconnect();\n      } else if (_.isEqual(history, ['connecting', 'connected', 'offline', 'connecting'])) {// do nothing; wait for the next state\n      } else if (_.isEqual(history, ['connecting', 'connected', 'offline', 'connecting', 'connected'])) {\n        onTestComplete();\n      } else {\n        onTestComplete(history);\n      }\n    }\n  });\n}]); // Remain offline if the online event is received while offline.\n\ntestAsyncMulti('stream - disconnect remains offline', [function (test, expect) {\n  var history = [];\n  var stream = new ClientStream('/');\n  var onTestComplete = expect(function (unexpectedHistory) {\n    stream.disconnect();\n\n    if (unexpectedHistory) {\n      test.fail('Unexpected status history: ' + JSON.stringify(unexpectedHistory));\n    }\n  });\n  Tracker.autorun(function () {\n    var status = stream.status();\n\n    if (_.last(history) !== status.status) {\n      history.push(status.status);\n\n      if (_.isEqual(history, ['connecting'])) {// do nothing; wait for the next status\n      } else if (_.isEqual(history, ['connecting', 'connected'])) {\n        stream.disconnect();\n      } else if (_.isEqual(history, ['connecting', 'connected', 'offline'])) {\n        stream._online();\n\n        test.isTrue(status.status === 'offline');\n        onTestComplete();\n      } else {\n        onTestComplete(history);\n      }\n    }\n  });\n}]);\nTinytest.add('stream - sockjs urls are computed correctly', function (test) {\n  var testHasSockjsUrl = function (raw, expectedSockjsUrl) {\n    var actual = toSockjsUrl(raw);\n    if (expectedSockjsUrl instanceof RegExp) test.isTrue(actual.match(expectedSockjsUrl), actual);else test.equal(actual, expectedSockjsUrl);\n  };\n\n  testHasSockjsUrl('http://subdomain.meteor.com/', 'http://subdomain.meteor.com/sockjs');\n  testHasSockjsUrl('http://subdomain.meteor.com', 'http://subdomain.meteor.com/sockjs');\n  testHasSockjsUrl('subdomain.meteor.com/', 'http://subdomain.meteor.com/sockjs');\n  testHasSockjsUrl('subdomain.meteor.com', 'http://subdomain.meteor.com/sockjs');\n  testHasSockjsUrl('/', Meteor._relativeToSiteRootUrl('/sockjs'));\n  testHasSockjsUrl('http://localhost:3000/', 'http://localhost:3000/sockjs');\n  testHasSockjsUrl('http://localhost:3000', 'http://localhost:3000/sockjs');\n  testHasSockjsUrl('localhost:3000', 'http://localhost:3000/sockjs');\n  testHasSockjsUrl('https://subdomain.meteor.com/', 'https://subdomain.meteor.com/sockjs');\n  testHasSockjsUrl('https://subdomain.meteor.com', 'https://subdomain.meteor.com/sockjs');\n  testHasSockjsUrl('ddp+sockjs://ddp--****-foo.meteor.com/sockjs', /^https:\\/\\/ddp--\\d\\d\\d\\d-foo\\.meteor\\.com\\/sockjs$/);\n  testHasSockjsUrl('ddpi+sockjs://ddp--****-foo.meteor.com/sockjs', /^http:\\/\\/ddp--\\d\\d\\d\\d-foo\\.meteor\\.com\\/sockjs$/);\n});\ntestAsyncMulti('stream - /websocket is a websocket endpoint', [function (test, expect) {\n  //\n  // Verify that /websocket and /websocket/ don't return the main page\n  //\n  _.each(['/websocket', '/websocket/'], function (path) {\n    HTTP.get(Meteor._relativeToSiteRootUrl(path), expect(function (error, result) {\n      test.isNotNull(error);\n      test.equal('Not a valid websocket request', result.content);\n    }));\n  }); //\n  // For sanity, also verify that /websockets and /websockets/ return\n  // the main page\n  //\n  // Somewhat contorted but we can't call nested expects (XXX why?)\n\n\n  var pageContent;\n  var wrappedCallback = expect(function (error, result) {\n    test.isNull(error);\n    test.equal(pageContent, result.content);\n  });\n  HTTP.get(Meteor._relativeToSiteRootUrl('/'), expect(function (error, result) {\n    test.isNull(error);\n    pageContent = result.content;\n\n    _.each(['/websockets', '/websockets/'], function (path) {\n      HTTP.get(Meteor._relativeToSiteRootUrl(path), wrappedCallback);\n    });\n  }));\n}]);","map":{"version":3,"sources":["packages/socket-stream-client/client-tests.js"],"names":["toSockjsUrl","module","watch","require","v","ClientStream","Tinytest","add","test","status","Meteor","equal","isTrue","retryCount","retryTime","testAsyncMulti","expect","callback","_","once","reconnect","_force","connection","_stream","on","history","stream","onTestComplete","unexpectedHistory","disconnect","fail","JSON","stringify","Tracker","autorun","last","push","isEqual","_online","testHasSockjsUrl","raw","expectedSockjsUrl","actual","RegExp","match","_relativeToSiteRootUrl","each","path","HTTP","get","error","result","isNotNull","content","pageContent","wrappedCallback","isNull"],"mappings":"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","sourcesContent":["import { toSockjsUrl } from \"./urls.js\";\nimport { ClientStream } from \"meteor/socket-stream-client\";\n\nTinytest.add('stream - status', function(test) {\n  // Very basic test. Just see that it runs and returns something. Not a\n  // lot of coverage, but enough that it would have caught a recent bug.\n  var status = Meteor.status();\n  test.equal(typeof status, 'object');\n  test.isTrue(status.status);\n  // Make sure backward-compatiblity names are defined.\n  test.equal(status.retryCount, status.retryCount);\n  test.equal(status.retryTime, status.retryTime);\n});\n\ntestAsyncMulti('stream - reconnect', [\n  function(test, expect) {\n    var callback = _.once(\n      expect(function() {\n        var status;\n        status = Meteor.status();\n        test.equal(status.status, 'connected');\n\n        Meteor.reconnect();\n        status = Meteor.status();\n        test.equal(status.status, 'connected');\n\n        Meteor.reconnect({ _force: true });\n        status = Meteor.status();\n        test.equal(status.status, 'waiting');\n      })\n    );\n\n    if (Meteor.status().status !== 'connected')\n      Meteor.connection._stream.on('reset', callback);\n    else callback();\n  }\n]);\n\n// Disconnecting and reconnecting transitions through the correct statuses.\ntestAsyncMulti('stream - basic disconnect', [\n  function(test, expect) {\n    var history = [];\n    var stream = new ClientStream('/');\n    var onTestComplete = expect(function(unexpectedHistory) {\n      stream.disconnect();\n      if (unexpectedHistory) {\n        test.fail(\n          'Unexpected status history: ' + JSON.stringify(unexpectedHistory)\n        );\n      }\n    });\n\n    Tracker.autorun(function() {\n      var status = stream.status();\n\n      if (_.last(history) !== status.status) {\n        history.push(status.status);\n\n        if (_.isEqual(history, ['connecting'])) {\n          // do nothing; wait for the next state\n        } else if (_.isEqual(history, ['connecting', 'connected'])) {\n          stream.disconnect();\n        } else if (_.isEqual(history, ['connecting', 'connected', 'offline'])) {\n          stream.reconnect();\n        } else if (\n          _.isEqual(history, [\n            'connecting',\n            'connected',\n            'offline',\n            'connecting'\n          ])\n        ) {\n          // do nothing; wait for the next state\n        } else if (\n          _.isEqual(history, [\n            'connecting',\n            'connected',\n            'offline',\n            'connecting',\n            'connected'\n          ])\n        ) {\n          onTestComplete();\n        } else {\n          onTestComplete(history);\n        }\n      }\n    });\n  }\n]);\n\n// Remain offline if the online event is received while offline.\ntestAsyncMulti('stream - disconnect remains offline', [\n  function(test, expect) {\n    var history = [];\n    var stream = new ClientStream('/');\n    var onTestComplete = expect(function(unexpectedHistory) {\n      stream.disconnect();\n      if (unexpectedHistory) {\n        test.fail(\n          'Unexpected status history: ' + JSON.stringify(unexpectedHistory)\n        );\n      }\n    });\n\n    Tracker.autorun(function() {\n      var status = stream.status();\n\n      if (_.last(history) !== status.status) {\n        history.push(status.status);\n\n        if (_.isEqual(history, ['connecting'])) {\n          // do nothing; wait for the next status\n        } else if (_.isEqual(history, ['connecting', 'connected'])) {\n          stream.disconnect();\n        } else if (_.isEqual(history, ['connecting', 'connected', 'offline'])) {\n          stream._online();\n          test.isTrue(status.status === 'offline');\n          onTestComplete();\n        } else {\n          onTestComplete(history);\n        }\n      }\n    });\n  }\n]);\n\nTinytest.add('stream - sockjs urls are computed correctly', function(test) {\n  var testHasSockjsUrl = function(raw, expectedSockjsUrl) {\n    var actual = toSockjsUrl(raw);\n    if (expectedSockjsUrl instanceof RegExp)\n      test.isTrue(actual.match(expectedSockjsUrl), actual);\n    else test.equal(actual, expectedSockjsUrl);\n  };\n\n  testHasSockjsUrl(\n    'http://subdomain.meteor.com/',\n    'http://subdomain.meteor.com/sockjs'\n  );\n  testHasSockjsUrl(\n    'http://subdomain.meteor.com',\n    'http://subdomain.meteor.com/sockjs'\n  );\n  testHasSockjsUrl(\n    'subdomain.meteor.com/',\n    'http://subdomain.meteor.com/sockjs'\n  );\n  testHasSockjsUrl(\n    'subdomain.meteor.com',\n    'http://subdomain.meteor.com/sockjs'\n  );\n  testHasSockjsUrl('/', Meteor._relativeToSiteRootUrl('/sockjs'));\n\n  testHasSockjsUrl('http://localhost:3000/', 'http://localhost:3000/sockjs');\n  testHasSockjsUrl('http://localhost:3000', 'http://localhost:3000/sockjs');\n  testHasSockjsUrl('localhost:3000', 'http://localhost:3000/sockjs');\n\n  testHasSockjsUrl(\n    'https://subdomain.meteor.com/',\n    'https://subdomain.meteor.com/sockjs'\n  );\n  testHasSockjsUrl(\n    'https://subdomain.meteor.com',\n    'https://subdomain.meteor.com/sockjs'\n  );\n\n  testHasSockjsUrl(\n    'ddp+sockjs://ddp--****-foo.meteor.com/sockjs',\n    /^https:\\/\\/ddp--\\d\\d\\d\\d-foo\\.meteor\\.com\\/sockjs$/\n  );\n  testHasSockjsUrl(\n    'ddpi+sockjs://ddp--****-foo.meteor.com/sockjs',\n    /^http:\\/\\/ddp--\\d\\d\\d\\d-foo\\.meteor\\.com\\/sockjs$/\n  );\n});\n\ntestAsyncMulti('stream - /websocket is a websocket endpoint', [\n  function(test, expect) {\n    //\n    // Verify that /websocket and /websocket/ don't return the main page\n    //\n    _.each(['/websocket', '/websocket/'], function(path) {\n      HTTP.get(\n        Meteor._relativeToSiteRootUrl(path),\n        expect(function(error, result) {\n          test.isNotNull(error);\n          test.equal('Not a valid websocket request', result.content);\n        })\n      );\n    });\n\n    //\n    // For sanity, also verify that /websockets and /websockets/ return\n    // the main page\n    //\n\n    // Somewhat contorted but we can't call nested expects (XXX why?)\n    var pageContent;\n    var wrappedCallback = expect(function(error, result) {\n      test.isNull(error);\n      test.equal(pageContent, result.content);\n    });\n\n    HTTP.get(\n      Meteor._relativeToSiteRootUrl('/'),\n      expect(function(error, result) {\n        test.isNull(error);\n        pageContent = result.content;\n\n        _.each(['/websockets', '/websockets/'], function(path) {\n          HTTP.get(Meteor._relativeToSiteRootUrl(path), wrappedCallback);\n        });\n      })\n    );\n  }\n]);\n"]},"sourceType":"script","hash":"bac73cf38ddc8fafea08ea8d5c736f3559fdc9a6"}
