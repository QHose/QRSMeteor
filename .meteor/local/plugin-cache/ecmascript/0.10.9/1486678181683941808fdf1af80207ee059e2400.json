{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"server/accounts.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"server/accounts.js","filename":"server/accounts.js","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/martijn/Documents/GitHub/QRSMeteor","root":"/home/martijn/Documents/GitHub/QRSMeteor","presets":[],"generatorOpts":{"filename":"server/accounts.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/accounts.js"}},"code":"// ServiceConfiguration.configurations.upsert({\n//     service: \"facebook\"\n// }, {\n//     $set: {\n//         appId: Meteor.settings.private.facebook.clientId,\n//         loginStyle: \"popup\",\n//         secret: Meteor.settings.private.facebook.secret\n//     }\n// });\n// ServiceConfiguration.configurations.upsert({\n//     service: \"github\"\n// }, {\n//     $set: {\n//         clientId: Meteor.settings.private.github.clientId,\n//         loginStyle: \"popup\",\n//         secret: Meteor.settings.private.github.secret\n//     }\n// });\n// ServiceConfiguration.configurations.upsert({\n//     service: \"linkedin\"\n// },{\n//     loginStyle: \"popup\",\n//     service: \"linkedin\",\n//     clientId: Meteor.settings.private.linkedin.clientId,\n//     secret: Meteor.settings.private.linkedin.secret,\n// });\n// ServiceConfiguration.configurations.upsert({\n//     service: \"twitter\"  \n// },{\n//     service: \"twitter\",\n//     consumerKey: Meteor.settings.private.twitter.clientId,\n//     loginStyle: \"popup\",\n//     secret: Meteor.settings.private.twitter.secret\n// });\n// ServiceConfiguration.configurations.upsert({\n//     service: \"google\"\n// }, {\n//     $set: {\n//         clientId: Meteor.settings.private.google.clientId,\n//         loginStyle: \"popup\",\n//         secret: Meteor.settings.private.google.secret\n//     }\n// });\nconst numberOfUsers = Meteor.users.find().count();\nconsole.log('Checking the user accounts, number of users is: ' + numberOfUsers);\n\nif (!numberOfUsers) {\n  var id = Accounts.createUser({\n    username: 'demo',\n    email: 'demo@qlik.com',\n    password: 'schiphol',\n    profile: {\n      name: 'Qlik test user'\n    }\n  });\n  console.log('user created with id: ', id);\n  Roles.addUsersToRoles(id, 'test', Roles.GLOBAL_GROUP);\n  id = Accounts.createUser({\n    username: 'admin',\n    email: 'test@test.com',\n    //these are just dummies\n    password: 'Qlik456464',\n    profile: {\n      name: 'Qlik admin user'\n    }\n  });\n  console.log('user created with id: ', id);\n  Roles.addUsersToRoles(id, 'admin', Roles.GLOBAL_GROUP);\n} //enable anon access: https://atmospherejs.com/artwells/accounts-guest\n\n\nAccountsGuest.enabled = true;\nAccountsGuest.anonymous = true;","map":{"version":3,"sources":["server/accounts.js"],"names":["numberOfUsers","Meteor","users","find","count","console","log","id","Accounts","createUser","username","email","password","profile","name","Roles","addUsersToRoles","GLOBAL_GROUP","AccountsGuest","enabled","anonymous"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,MAAMA,gBAAgBC,OAAOC,KAAP,CAAaC,IAAb,GAAoBC,KAApB,EAAtB;AACAC,QAAQC,GAAR,CAAY,qDAAqDN,aAAjE;;AAEA,IAAI,CAACA,aAAL,EAAoB;AAChB,MAAIO,KAAKC,SAASC,UAAT,CAAoB;AACzBC,cAAU,MADe;AAEzBC,WAAO,eAFkB;AAGzBC,cAAU,UAHe;AAIzBC,aAAS;AAAEC,YAAM;AAAR;AAJgB,GAApB,CAAT;AAMAT,UAAQC,GAAR,CAAY,wBAAZ,EAAsCC,EAAtC;AACAQ,QAAMC,eAAN,CAAsBT,EAAtB,EAA0B,MAA1B,EAAkCQ,MAAME,YAAxC;AAEAV,OAAKC,SAASC,UAAT,CAAoB;AACrBC,cAAU,OADW;AAErBC,WAAO,eAFc;AAEG;AACxBC,cAAU,YAHW;AAIrBC,aAAS;AAAEC,YAAM;AAAR;AAJY,GAApB,CAAL;AAMAT,UAAQC,GAAR,CAAY,wBAAZ,EAAsCC,EAAtC;AACAQ,QAAMC,eAAN,CAAsBT,EAAtB,EAA0B,OAA1B,EAAmCQ,MAAME,YAAzC;AACH,C,CAED;;;AACAC,cAAcC,OAAd,GAAwB,IAAxB;AACAD,cAAcE,SAAd,GAA0B,IAA1B","sourcesContent":["// ServiceConfiguration.configurations.upsert({\n//     service: \"facebook\"\n// }, {\n//     $set: {\n//         appId: Meteor.settings.private.facebook.clientId,\n//         loginStyle: \"popup\",\n//         secret: Meteor.settings.private.facebook.secret\n//     }\n// });\n\n// ServiceConfiguration.configurations.upsert({\n//     service: \"github\"\n// }, {\n//     $set: {\n//         clientId: Meteor.settings.private.github.clientId,\n//         loginStyle: \"popup\",\n//         secret: Meteor.settings.private.github.secret\n//     }\n// });\n\n// ServiceConfiguration.configurations.upsert({\n//     service: \"linkedin\"\n// },{\n//     loginStyle: \"popup\",\n//     service: \"linkedin\",\n//     clientId: Meteor.settings.private.linkedin.clientId,\n//     secret: Meteor.settings.private.linkedin.secret,\n// });\n\n\n// ServiceConfiguration.configurations.upsert({\n//     service: \"twitter\"  \n// },{\n//     service: \"twitter\",\n//     consumerKey: Meteor.settings.private.twitter.clientId,\n//     loginStyle: \"popup\",\n//     secret: Meteor.settings.private.twitter.secret\n// });\n\n\n// ServiceConfiguration.configurations.upsert({\n//     service: \"google\"\n// }, {\n//     $set: {\n//         clientId: Meteor.settings.private.google.clientId,\n//         loginStyle: \"popup\",\n//         secret: Meteor.settings.private.google.secret\n//     }\n// });\n\n\nconst numberOfUsers = Meteor.users.find().count();\nconsole.log('Checking the user accounts, number of users is: ' + numberOfUsers)\n\nif (!numberOfUsers) {\n    var id = Accounts.createUser({\n        username: 'demo',\n        email: 'demo@qlik.com',\n        password: 'schiphol',\n        profile: { name: 'Qlik test user' }\n    });\n    console.log('user created with id: ', id);\n    Roles.addUsersToRoles(id, 'test', Roles.GLOBAL_GROUP);\n\n    id = Accounts.createUser({\n        username: 'admin',\n        email: 'test@test.com', //these are just dummies\n        password: 'Qlik456464',\n        profile: { name: 'Qlik admin user' }\n    });\n    console.log('user created with id: ', id);\n    Roles.addUsersToRoles(id, 'admin', Roles.GLOBAL_GROUP);\n}\n\n//enable anon access: https://atmospherejs.com/artwells/accounts-guest\nAccountsGuest.enabled = true;\nAccountsGuest.anonymous = true;"]},"sourceType":"script","hash":"1486678181683941808fdf1af80207ee059e2400"}
