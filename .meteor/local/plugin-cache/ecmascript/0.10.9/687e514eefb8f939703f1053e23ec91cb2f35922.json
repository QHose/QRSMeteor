{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"packages/webapp/connect.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/webapp/connect.js","filename":"packages/webapp/connect.js","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/martijn/Documents/GitHub/QRSMeteor","root":"/home/martijn/Documents/GitHub/QRSMeteor","generatorOpts":{"filename":"packages/webapp/connect.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/webapp/connect.js"}},"code":"module.export({\n  connect: function () {\n    return connect;\n  }\n});\nvar npmConnect;\nmodule.watch(require(\"connect\"), {\n  \"default\": function (v) {\n    npmConnect = v;\n  }\n}, 0);\n\nfunction connect() {\n  for (var _len = arguments.length, connectArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n    connectArgs[_key] = arguments[_key];\n  }\n\n  var handlers = npmConnect.apply(this, connectArgs);\n  var originalUse = handlers.use; // Wrap the handlers.use method so that any provided handler functions\n  // alway run in a Fiber.\n\n  handlers.use = function () {\n    function use() {\n      for (var _len2 = arguments.length, useArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        useArgs[_key2] = arguments[_key2];\n      }\n\n      var stack = this.stack;\n      var originalLength = stack.length;\n      var result = originalUse.apply(this, useArgs); // If we just added anything to the stack, wrap each new entry.handle\n      // with a function that calls Promise.asyncApply to ensure the\n      // original handler runs in a Fiber.\n\n      var _loop = function (i) {\n        var entry = stack[i];\n        var originalHandle = entry.handle;\n\n        if (originalHandle.length >= 4) {\n          // If the original handle had four (or more) parameters, the\n          // wrapper must also have four parameters, since connect uses\n          // handle.length to dermine whether to pass the error as the first\n          // argument to the handle function.\n          entry.handle = function () {\n            function handle(err, req, res, next) {\n              return Promise.asyncApply(originalHandle, this, arguments);\n            }\n\n            return handle;\n          }();\n        } else {\n          entry.handle = function () {\n            function handle(req, res, next) {\n              return Promise.asyncApply(originalHandle, this, arguments);\n            }\n\n            return handle;\n          }();\n        }\n      };\n\n      for (var i = originalLength; i < stack.length; ++i) {\n        _loop(i);\n      }\n\n      return result;\n    }\n\n    return use;\n  }();\n\n  return handlers;\n}","map":{"version":3,"sources":["packages/webapp/connect.js"],"names":["module","export","connect","npmConnect","watch","require","v","connectArgs","handlers","apply","originalUse","use","useArgs","stack","originalLength","length","result","i","entry","originalHandle","handle","err","req","res","next","Promise","asyncApply","arguments"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,WAAQ;AAAA,WAAIA,OAAJ;AAAA;AAAT,CAAd;AAAqC,IAAIC,UAAJ;AAAeH,OAAOI,KAAP,CAAaC,QAAQ,SAAR,CAAb,EAAgC;AAAA,uBAASC,CAAT,EAAW;AAACH,iBAAWG,CAAX;AAAa;AAAzB,CAAhC,EAA2D,CAA3D;;AAE7C,SAASJ,OAAT,GAAiC;AAAA,oCAAbK,WAAa;AAAbA,eAAa;AAAA;;AACtC,MAAMC,WAAWL,WAAWM,KAAX,CAAiB,IAAjB,EAAuBF,WAAvB,CAAjB;AACA,MAAMG,cAAcF,SAASG,GAA7B,CAFsC,CAItC;AACA;;AACAH,WAASG,GAAT;AAAe,aAASA,GAAT,GAAyB;AAAA,yCAATC,OAAS;AAATA,eAAS;AAAA;;AAAA,UAC9BC,KAD8B,GACpB,IADoB,CAC9BA,KAD8B;AAEtC,UAAMC,iBAAiBD,MAAME,MAA7B;AACA,UAAMC,SAASN,YAAYD,KAAZ,CAAkB,IAAlB,EAAwBG,OAAxB,CAAf,CAHsC,CAKtC;AACA;AACA;;AAPsC,4BAQ7BK,CAR6B;AASpC,YAAMC,QAAQL,MAAMI,CAAN,CAAd;AACA,YAAME,iBAAiBD,MAAME,MAA7B;;AAEA,YAAID,eAAeJ,MAAf,IAAyB,CAA7B,EAAgC;AAC9B;AACA;AACA;AACA;AACAG,gBAAME,MAAN;AAAe,qBAASA,MAAT,CAAgBC,GAAhB,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqC;AAClD,qBAAOC,QAAQC,UAAR,CAAmBP,cAAnB,EAAmC,IAAnC,EAAyCQ,SAAzC,CAAP;AACD;;AAFD,mBAAwBP,MAAxB;AAAA;AAGD,SARD,MAQO;AACLF,gBAAME,MAAN;AAAe,qBAASA,MAAT,CAAgBE,GAAhB,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgC;AAC7C,qBAAOC,QAAQC,UAAR,CAAmBP,cAAnB,EAAmC,IAAnC,EAAyCQ,SAAzC,CAAP;AACD;;AAFD,mBAAwBP,MAAxB;AAAA;AAGD;AAxBmC;;AAQtC,WAAK,IAAIH,IAAIH,cAAb,EAA6BG,IAAIJ,MAAME,MAAvC,EAA+C,EAAEE,CAAjD,EAAoD;AAAA,cAA3CA,CAA2C;AAiBnD;;AAED,aAAOD,MAAP;AACD;;AA5BD,WAAwBL,GAAxB;AAAA;;AA8BA,SAAOH,QAAP;AACD","sourcesContent":["import npmConnect from \"connect\";\n\nexport function connect(...connectArgs) {\n  const handlers = npmConnect.apply(this, connectArgs);\n  const originalUse = handlers.use;\n\n  // Wrap the handlers.use method so that any provided handler functions\n  // alway run in a Fiber.\n  handlers.use = function use(...useArgs) {\n    const { stack } = this;\n    const originalLength = stack.length;\n    const result = originalUse.apply(this, useArgs);\n\n    // If we just added anything to the stack, wrap each new entry.handle\n    // with a function that calls Promise.asyncApply to ensure the\n    // original handler runs in a Fiber.\n    for (let i = originalLength; i < stack.length; ++i) {\n      const entry = stack[i];\n      const originalHandle = entry.handle;\n\n      if (originalHandle.length >= 4) {\n        // If the original handle had four (or more) parameters, the\n        // wrapper must also have four parameters, since connect uses\n        // handle.length to dermine whether to pass the error as the first\n        // argument to the handle function.\n        entry.handle = function handle(err, req, res, next) {\n          return Promise.asyncApply(originalHandle, this, arguments);\n        };\n      } else {\n        entry.handle = function handle(req, res, next) {\n          return Promise.asyncApply(originalHandle, this, arguments);\n        };\n      }\n    }\n\n    return result;\n  };\n\n  return handlers;\n}\n"]},"sourceType":"script","hash":"687e514eefb8f939703f1053e23ec91cb2f35922"}
