{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"client/lib/definitions/modules/progress.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"client/lib/definitions/modules/progress.js","filename":"client/lib/definitions/modules/progress.js","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/martijn/Documents/GitHub/QRSMeteor","root":"/home/martijn/Documents/GitHub/QRSMeteor","generatorOpts":{"filename":"client/lib/definitions/modules/progress.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/definitions/modules/progress.js"}},"code":"/*\n  DO NOT MODIFY - This file has been generated and will be regenerated\n  Semantic UI v2.1.8\n*/\n\n/*!\n * # Semantic UI - Progress\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Copyright 2015 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n;\n\n(function ($, window, document, undefined) {\n  \"use strict\";\n\n  $.fn.progress = function (parameters) {\n    var $allModules = $(this),\n        moduleSelector = $allModules.selector || '',\n        time = new Date().getTime(),\n        performance = [],\n        query = arguments[0],\n        methodInvoked = typeof query == 'string',\n        queryArguments = [].slice.call(arguments, 1),\n        returnedValue;\n    $allModules.each(function () {\n      var settings = $.isPlainObject(parameters) ? $.extend(true, {}, $.fn.progress.settings, parameters) : $.extend({}, $.fn.progress.settings),\n          className = settings.className,\n          metadata = settings.metadata,\n          namespace = settings.namespace,\n          selector = settings.selector,\n          error = settings.error,\n          eventNamespace = '.' + namespace,\n          moduleNamespace = 'module-' + namespace,\n          $module = $(this),\n          $bar = $(this).find(selector.bar),\n          $progress = $(this).find(selector.progress),\n          $label = $(this).find(selector.label),\n          element = this,\n          instance = $module.data(moduleNamespace),\n          animating = false,\n          transitionEnd,\n          module;\n      module = {\n        initialize: function () {\n          module.debug('Initializing progress bar', settings);\n          module.set.duration();\n          module.set.transitionEvent();\n          module.read.metadata();\n          module.read.settings();\n          module.instantiate();\n        },\n        instantiate: function () {\n          module.verbose('Storing instance of progress', module);\n          instance = module;\n          $module.data(moduleNamespace, module);\n        },\n        destroy: function () {\n          module.verbose('Destroying previous progress for', $module);\n          clearInterval(instance.interval);\n          module.remove.state();\n          $module.removeData(moduleNamespace);\n          instance = undefined;\n        },\n        reset: function () {\n          module.set.percent(0);\n          module.set.value(0);\n        },\n        complete: function () {\n          if (module.percent === undefined || module.percent < 100) {\n            module.set.percent(100);\n          }\n        },\n        read: {\n          metadata: function () {\n            var data = {\n              percent: $module.data(metadata.percent),\n              total: $module.data(metadata.total),\n              value: $module.data(metadata.value)\n            };\n\n            if (data.percent) {\n              module.debug('Current percent value set from metadata', data.percent);\n              module.set.percent(data.percent);\n            }\n\n            if (data.total) {\n              module.debug('Total value set from metadata', data.total);\n              module.set.total(data.total);\n            }\n\n            if (data.value) {\n              module.debug('Current value set from metadata', data.value);\n              module.set.value(data.value);\n              module.set.progress(data.value);\n            }\n          },\n          settings: function () {\n            if (settings.total !== false) {\n              module.debug('Current total set in settings', settings.total);\n              module.set.total(settings.total);\n            }\n\n            if (settings.value !== false) {\n              module.debug('Current value set in settings', settings.value);\n              module.set.value(settings.value);\n              module.set.progress(module.value);\n            }\n\n            if (settings.percent !== false) {\n              module.debug('Current percent set in settings', settings.percent);\n              module.set.percent(settings.percent);\n            }\n          }\n        },\n        increment: function (incrementValue) {\n          var maxValue, startValue, newValue;\n\n          if (module.has.total()) {\n            startValue = module.get.value();\n            incrementValue = incrementValue || 1;\n            newValue = startValue + incrementValue;\n            maxValue = module.get.total();\n            module.debug('Incrementing value', startValue, newValue, maxValue);\n\n            if (newValue > maxValue) {\n              module.debug('Value cannot increment above total', maxValue);\n              newValue = maxValue;\n            }\n          } else {\n            startValue = module.get.percent();\n            incrementValue = incrementValue || module.get.randomValue();\n            newValue = startValue + incrementValue;\n            maxValue = 100;\n            module.debug('Incrementing percentage by', startValue, newValue);\n\n            if (newValue > maxValue) {\n              module.debug('Value cannot increment above 100 percent');\n              newValue = maxValue;\n            }\n          }\n\n          module.set.progress(newValue);\n        },\n        decrement: function (decrementValue) {\n          var total = module.get.total(),\n              startValue,\n              newValue;\n\n          if (total) {\n            startValue = module.get.value();\n            decrementValue = decrementValue || 1;\n            newValue = startValue - decrementValue;\n            module.debug('Decrementing value by', decrementValue, startValue);\n          } else {\n            startValue = module.get.percent();\n            decrementValue = decrementValue || module.get.randomValue();\n            newValue = startValue - decrementValue;\n            module.debug('Decrementing percentage by', decrementValue, startValue);\n          }\n\n          if (newValue < 0) {\n            module.debug('Value cannot decrement below 0');\n            newValue = 0;\n          }\n\n          module.set.progress(newValue);\n        },\n        has: {\n          total: function () {\n            return module.get.total() !== false;\n          }\n        },\n        get: {\n          text: function (templateText) {\n            var value = module.value || 0,\n                total = module.total || 0,\n                percent = animating ? module.get.displayPercent() : module.percent || 0,\n                left = module.total > 0 ? total - value : 100 - percent;\n            templateText = templateText || '';\n            templateText = templateText.replace('{value}', value).replace('{total}', total).replace('{left}', left).replace('{percent}', percent);\n            module.debug('Adding variables to progress bar text', templateText);\n            return templateText;\n          },\n          randomValue: function () {\n            module.debug('Generating random increment percentage');\n            return Math.floor(Math.random() * settings.random.max + settings.random.min);\n          },\n          numericValue: function (value) {\n            return typeof value === 'string' ? value.replace(/[^\\d.]/g, '') !== '' ? +value.replace(/[^\\d.]/g, '') : false : value;\n          },\n          transitionEnd: function () {\n            var element = document.createElement('element'),\n                transitions = {\n              'transition': 'transitionend',\n              'OTransition': 'oTransitionEnd',\n              'MozTransition': 'transitionend',\n              'WebkitTransition': 'webkitTransitionEnd'\n            },\n                transition;\n\n            for (transition in meteorBabelHelpers.sanitizeForInObject(transitions)) {\n              if (element.style[transition] !== undefined) {\n                return transitions[transition];\n              }\n            }\n          },\n          // gets current displayed percentage (if animating values this is the intermediary value)\n          displayPercent: function () {\n            var barWidth = $bar.width(),\n                totalWidth = $module.width(),\n                minDisplay = parseInt($bar.css('min-width'), 10),\n                displayPercent = barWidth > minDisplay ? barWidth / totalWidth * 100 : module.percent;\n            return settings.precision > 0 ? Math.round(displayPercent * (10 * settings.precision)) / (10 * settings.precision) : Math.round(displayPercent);\n          },\n          percent: function () {\n            return module.percent || 0;\n          },\n          value: function () {\n            return module.value || 0;\n          },\n          total: function () {\n            return module.total || false;\n          }\n        },\n        is: {\n          success: function () {\n            return $module.hasClass(className.success);\n          },\n          warning: function () {\n            return $module.hasClass(className.warning);\n          },\n          error: function () {\n            return $module.hasClass(className.error);\n          },\n          active: function () {\n            return $module.hasClass(className.active);\n          },\n          visible: function () {\n            return $module.is(':visible');\n          }\n        },\n        remove: {\n          state: function () {\n            module.verbose('Removing stored state');\n            delete module.total;\n            delete module.percent;\n            delete module.value;\n          },\n          active: function () {\n            module.verbose('Removing active state');\n            $module.removeClass(className.active);\n          },\n          success: function () {\n            module.verbose('Removing success state');\n            $module.removeClass(className.success);\n          },\n          warning: function () {\n            module.verbose('Removing warning state');\n            $module.removeClass(className.warning);\n          },\n          error: function () {\n            module.verbose('Removing error state');\n            $module.removeClass(className.error);\n          }\n        },\n        set: {\n          barWidth: function (value) {\n            if (value > 100) {\n              module.error(error.tooHigh, value);\n            } else if (value < 0) {\n              module.error(error.tooLow, value);\n            } else {\n              $bar.css('width', value + '%');\n              $module.attr('data-percent', parseInt(value, 10));\n            }\n          },\n          duration: function (duration) {\n            duration = duration || settings.duration;\n            duration = typeof duration == 'number' ? duration + 'ms' : duration;\n            module.verbose('Setting progress bar transition duration', duration);\n            $bar.css({\n              'transition-duration': duration\n            });\n          },\n          percent: function (percent) {\n            percent = typeof percent == 'string' ? +percent.replace('%', '') : percent; // round display percentage\n\n            percent = settings.precision > 0 ? Math.round(percent * (10 * settings.precision)) / (10 * settings.precision) : Math.round(percent);\n            module.percent = percent;\n\n            if (!module.has.total()) {\n              module.value = settings.precision > 0 ? Math.round(percent / 100 * module.total * (10 * settings.precision)) / (10 * settings.precision) : Math.round(percent / 100 * module.total * 10) / 10;\n\n              if (settings.limitValues) {\n                module.value = module.value > 100 ? 100 : module.value < 0 ? 0 : module.value;\n              }\n            }\n\n            module.set.barWidth(percent);\n            module.set.labelInterval();\n            module.set.labels();\n            settings.onChange.call(element, percent, module.value, module.total);\n          },\n          labelInterval: function () {\n            var animationCallback = function () {\n              module.verbose('Bar finished animating, removing continuous label updates');\n              clearInterval(module.interval);\n              animating = false;\n              module.set.labels();\n            };\n\n            clearInterval(module.interval);\n            $bar.one(transitionEnd + eventNamespace, animationCallback);\n            module.timer = setTimeout(animationCallback, settings.duration + 100);\n            animating = true;\n            module.interval = setInterval(module.set.labels, settings.framerate);\n          },\n          labels: function () {\n            module.verbose('Setting both bar progress and outer label text');\n            module.set.barLabel();\n            module.set.state();\n          },\n          label: function (text) {\n            text = text || '';\n\n            if (text) {\n              text = module.get.text(text);\n              module.debug('Setting label to text', text);\n              $label.text(text);\n            }\n          },\n          state: function (percent) {\n            percent = percent !== undefined ? percent : module.percent;\n\n            if (percent === 100) {\n              if (settings.autoSuccess && !(module.is.warning() || module.is.error())) {\n                module.set.success();\n                module.debug('Automatically triggering success at 100%');\n              } else {\n                module.verbose('Reached 100% removing active state');\n                module.remove.active();\n              }\n            } else if (percent > 0) {\n              module.verbose('Adjusting active progress bar label', percent);\n              module.set.active();\n            } else {\n              module.remove.active();\n              module.set.label(settings.text.active);\n            }\n          },\n          barLabel: function (text) {\n            if (text !== undefined) {\n              $progress.text(module.get.text(text));\n            } else if (settings.label == 'ratio' && module.total) {\n              module.debug('Adding ratio to bar label');\n              $progress.text(module.get.text(settings.text.ratio));\n            } else if (settings.label == 'percent') {\n              module.debug('Adding percentage to bar label');\n              $progress.text(module.get.text(settings.text.percent));\n            }\n          },\n          active: function (text) {\n            text = text || settings.text.active;\n            module.debug('Setting active state');\n\n            if (settings.showActivity && !module.is.active()) {\n              $module.addClass(className.active);\n            }\n\n            module.remove.warning();\n            module.remove.error();\n            module.remove.success();\n\n            if (text) {\n              module.set.label(text);\n            }\n\n            settings.onActive.call(element, module.value, module.total);\n          },\n          success: function (text) {\n            text = text || settings.text.success;\n            module.debug('Setting success state');\n            $module.addClass(className.success);\n            module.remove.active();\n            module.remove.warning();\n            module.remove.error();\n            module.complete();\n\n            if (text) {\n              module.set.label(text);\n            }\n\n            settings.onSuccess.call(element, module.total);\n          },\n          warning: function (text) {\n            text = text || settings.text.warning;\n            module.debug('Setting warning state');\n            $module.addClass(className.warning);\n            module.remove.active();\n            module.remove.success();\n            module.remove.error();\n            module.complete();\n\n            if (text) {\n              module.set.label(text);\n            }\n\n            settings.onWarning.call(element, module.value, module.total);\n          },\n          error: function (text) {\n            text = text || settings.text.error;\n            module.debug('Setting error state');\n            $module.addClass(className.error);\n            module.remove.active();\n            module.remove.success();\n            module.remove.warning();\n            module.complete();\n\n            if (text) {\n              module.set.label(text);\n            }\n\n            settings.onError.call(element, module.value, module.total);\n          },\n          transitionEvent: function () {\n            transitionEnd = module.get.transitionEnd();\n          },\n          total: function (totalValue) {\n            module.total = totalValue;\n          },\n          value: function (value) {\n            module.value = value;\n          },\n          progress: function (value) {\n            var numericValue = module.get.numericValue(value),\n                percentComplete;\n\n            if (numericValue === false) {\n              module.error(error.nonNumeric, value);\n            }\n\n            if (module.has.total()) {\n              module.set.value(numericValue);\n              percentComplete = numericValue / module.total * 100;\n              module.debug('Calculating percent complete from total', percentComplete);\n              module.set.percent(percentComplete);\n            } else {\n              percentComplete = numericValue;\n              module.debug('Setting value to exact percentage value', percentComplete);\n              module.set.percent(percentComplete);\n            }\n          }\n        },\n        setting: function (name, value) {\n          module.debug('Changing setting', name, value);\n\n          if ($.isPlainObject(name)) {\n            $.extend(true, settings, name);\n          } else if (value !== undefined) {\n            settings[name] = value;\n          } else {\n            return settings[name];\n          }\n        },\n        internal: function (name, value) {\n          if ($.isPlainObject(name)) {\n            $.extend(true, module, name);\n          } else if (value !== undefined) {\n            module[name] = value;\n          } else {\n            return module[name];\n          }\n        },\n        debug: function () {\n          if (settings.debug) {\n            if (settings.performance) {\n              module.performance.log(arguments);\n            } else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function () {\n          if (settings.verbose && settings.debug) {\n            if (settings.performance) {\n              module.performance.log(arguments);\n            } else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function () {\n          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n          module.error.apply(console, arguments);\n        },\n        performance: {\n          log: function (message) {\n            var currentTime, executionTime, previousTime;\n\n            if (settings.performance) {\n              currentTime = new Date().getTime();\n              previousTime = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time = currentTime;\n              performance.push({\n                'Name': message[0],\n                'Arguments': [].slice.call(message, 1) || '',\n                'Element': element,\n                'Execution Time': executionTime\n              });\n            }\n\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function () {\n            var title = settings.name + ':',\n                totalTime = 0;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function (index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n\n            if (moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n\n            if ((console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n\n              if (console.table) {\n                console.table(performance);\n              } else {\n                $.each(performance, function (index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time'] + 'ms');\n                });\n              }\n\n              console.groupEnd();\n            }\n\n            performance = [];\n          }\n        },\n        invoke: function (query, passedArguments, context) {\n          var object = instance,\n              maxDepth,\n              found,\n              response;\n          passedArguments = passedArguments || queryArguments;\n          context = element || context;\n\n          if (typeof query == 'string' && object !== undefined) {\n            query = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function (depth, value) {\n              var camelCaseValue = depth != maxDepth ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1) : query;\n\n              if ($.isPlainObject(object[camelCaseValue]) && depth != maxDepth) {\n                object = object[camelCaseValue];\n              } else if (object[camelCaseValue] !== undefined) {\n                found = object[camelCaseValue];\n                return false;\n              } else if ($.isPlainObject(object[value]) && depth != maxDepth) {\n                object = object[value];\n              } else if (object[value] !== undefined) {\n                found = object[value];\n                return false;\n              } else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n\n          if ($.isFunction(found)) {\n            response = found.apply(context, passedArguments);\n          } else if (found !== undefined) {\n            response = found;\n          }\n\n          if ($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          } else if (returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          } else if (response !== undefined) {\n            returnedValue = response;\n          }\n\n          return found;\n        }\n      };\n\n      if (methodInvoked) {\n        if (instance === undefined) {\n          module.initialize();\n        }\n\n        module.invoke(query);\n      } else {\n        if (instance !== undefined) {\n          instance.invoke('destroy');\n        }\n\n        module.initialize();\n      }\n    });\n    return returnedValue !== undefined ? returnedValue : this;\n  };\n\n  $.fn.progress.settings = {\n    name: 'Progress',\n    namespace: 'progress',\n    debug: false,\n    verbose: false,\n    performance: true,\n    random: {\n      min: 2,\n      max: 5\n    },\n    duration: 300,\n    autoSuccess: true,\n    showActivity: true,\n    limitValues: true,\n    label: 'percent',\n    precision: 0,\n    framerate: 1000 / 30,\n    /// 30 fps\n    percent: false,\n    total: false,\n    value: false,\n    onChange: function (percent, value, total) {},\n    onSuccess: function (total) {},\n    onActive: function (value, total) {},\n    onError: function (value, total) {},\n    onWarning: function (value, total) {},\n    error: {\n      method: 'The method you called is not defined.',\n      nonNumeric: 'Progress value is non numeric',\n      tooHigh: 'Value specified is above 100%',\n      tooLow: 'Value specified is below 0%'\n    },\n    regExp: {\n      variable: /\\{\\$*[A-z0-9]+\\}/g\n    },\n    metadata: {\n      percent: 'percent',\n      total: 'total',\n      value: 'value'\n    },\n    selector: {\n      bar: '> .bar',\n      label: '> .label',\n      progress: '.bar > .progress'\n    },\n    text: {\n      active: false,\n      error: false,\n      success: false,\n      warning: false,\n      percent: '{percent}%',\n      ratio: '{value} of {total}'\n    },\n    className: {\n      active: 'active',\n      error: 'error',\n      success: 'success',\n      warning: 'warning'\n    }\n  };\n})(jQuery, window, document);","map":{"version":3,"sources":["client/lib/definitions/modules/progress.js"],"names":["$","window","document","undefined","fn","progress","parameters","$allModules","moduleSelector","selector","time","Date","getTime","performance","query","arguments","methodInvoked","queryArguments","slice","call","returnedValue","each","settings","isPlainObject","extend","className","metadata","namespace","error","eventNamespace","moduleNamespace","$module","$bar","find","bar","$progress","$label","label","element","instance","data","animating","transitionEnd","module","initialize","debug","set","duration","transitionEvent","read","instantiate","verbose","destroy","clearInterval","interval","remove","state","removeData","reset","percent","value","complete","total","increment","incrementValue","maxValue","startValue","newValue","has","get","randomValue","decrement","decrementValue","text","templateText","displayPercent","left","replace","Math","floor","random","max","min","numericValue","createElement","transitions","transition","style","barWidth","width","totalWidth","minDisplay","parseInt","css","precision","round","is","success","hasClass","warning","active","visible","removeClass","tooHigh","tooLow","attr","limitValues","labelInterval","labels","onChange","animationCallback","one","timer","setTimeout","setInterval","framerate","barLabel","autoSuccess","ratio","showActivity","addClass","onActive","onSuccess","onWarning","onError","totalValue","percentComplete","nonNumeric","setting","name","internal","log","Function","prototype","bind","console","info","apply","message","currentTime","executionTime","previousTime","push","clearTimeout","display","title","totalTime","index","group","table","length","groupCollapsed","groupEnd","invoke","passedArguments","context","object","maxDepth","found","response","split","depth","camelCaseValue","charAt","toUpperCase","method","isFunction","isArray","regExp","variable","jQuery"],"mappings":"AAAA;;;;;AAIA;;;;;;;;;;AAWA;;AAAC,CAAC,UAAWA,CAAX,EAAcC,MAAd,EAAsBC,QAAtB,EAAgCC,SAAhC,EAA4C;AAE9C;;AAEAH,IAAEI,EAAF,CAAKC,QAAL,GAAgB,UAASC,UAAT,EAAqB;AACnC,QACEC,cAAiBP,EAAE,IAAF,CADnB;AAAA,QAGEQ,iBAAiBD,YAAYE,QAAZ,IAAwB,EAH3C;AAAA,QAKEC,OAAiB,IAAIC,IAAJ,GAAWC,OAAX,EALnB;AAAA,QAMEC,cAAiB,EANnB;AAAA,QAQEC,QAAiBC,UAAU,CAAV,CARnB;AAAA,QASEC,gBAAkB,OAAOF,KAAP,IAAgB,QATpC;AAAA,QAUEG,iBAAiB,GAAGC,KAAH,CAASC,IAAT,CAAcJ,SAAd,EAAyB,CAAzB,CAVnB;AAAA,QAYEK,aAZF;AAeAb,gBACGc,IADH,CACQ,YAAW;AACf,UACEC,WAAsBtB,EAAEuB,aAAF,CAAgBjB,UAAhB,CAAF,GAChBN,EAAEwB,MAAF,CAAS,IAAT,EAAe,EAAf,EAAmBxB,EAAEI,EAAF,CAAKC,QAAL,CAAciB,QAAjC,EAA2ChB,UAA3C,CADgB,GAEhBN,EAAEwB,MAAF,CAAS,EAAT,EAAaxB,EAAEI,EAAF,CAAKC,QAAL,CAAciB,QAA3B,CAHN;AAAA,UAKEG,YAAkBH,SAASG,SAL7B;AAAA,UAMEC,WAAkBJ,SAASI,QAN7B;AAAA,UAOEC,YAAkBL,SAASK,SAP7B;AAAA,UAQElB,WAAkBa,SAASb,QAR7B;AAAA,UASEmB,QAAkBN,SAASM,KAT7B;AAAA,UAWEC,iBAAkB,MAAMF,SAX1B;AAAA,UAYEG,kBAAkB,YAAYH,SAZhC;AAAA,UAcEI,UAAkB/B,EAAE,IAAF,CAdpB;AAAA,UAeEgC,OAAkBhC,EAAE,IAAF,EAAQiC,IAAR,CAAaxB,SAASyB,GAAtB,CAfpB;AAAA,UAgBEC,YAAkBnC,EAAE,IAAF,EAAQiC,IAAR,CAAaxB,SAASJ,QAAtB,CAhBpB;AAAA,UAiBE+B,SAAkBpC,EAAE,IAAF,EAAQiC,IAAR,CAAaxB,SAAS4B,KAAtB,CAjBpB;AAAA,UAmBEC,UAAkB,IAnBpB;AAAA,UAoBEC,WAAkBR,QAAQS,IAAR,CAAaV,eAAb,CApBpB;AAAA,UAsBEW,YAAY,KAtBd;AAAA,UAuBEC,aAvBF;AAAA,UAwBEC,MAxBF;AA2BAA,eAAS;AAEPC,oBAAY,YAAW;AACrBD,iBAAOE,KAAP,CAAa,2BAAb,EAA0CvB,QAA1C;AAEAqB,iBAAOG,GAAP,CAAWC,QAAX;AACAJ,iBAAOG,GAAP,CAAWE,eAAX;AAEAL,iBAAOM,IAAP,CAAYvB,QAAZ;AACAiB,iBAAOM,IAAP,CAAY3B,QAAZ;AAEAqB,iBAAOO,WAAP;AACD,SAZM;AAcPA,qBAAa,YAAW;AACtBP,iBAAOQ,OAAP,CAAe,8BAAf,EAA+CR,MAA/C;AACAJ,qBAAWI,MAAX;AACAZ,kBACGS,IADH,CACQV,eADR,EACyBa,MADzB;AAGD,SApBM;AAqBPS,iBAAS,YAAW;AAClBT,iBAAOQ,OAAP,CAAe,kCAAf,EAAmDpB,OAAnD;AACAsB,wBAAcd,SAASe,QAAvB;AACAX,iBAAOY,MAAP,CAAcC,KAAd;AACAzB,kBAAQ0B,UAAR,CAAmB3B,eAAnB;AACAS,qBAAWpC,SAAX;AACD,SA3BM;AA6BPuD,eAAO,YAAW;AAChBf,iBAAOG,GAAP,CAAWa,OAAX,CAAmB,CAAnB;AACAhB,iBAAOG,GAAP,CAAWc,KAAX,CAAiB,CAAjB;AACD,SAhCM;AAkCPC,kBAAU,YAAW;AACnB,cAAGlB,OAAOgB,OAAP,KAAmBxD,SAAnB,IAAgCwC,OAAOgB,OAAP,GAAiB,GAApD,EAAyD;AACvDhB,mBAAOG,GAAP,CAAWa,OAAX,CAAmB,GAAnB;AACD;AACF,SAtCM;AAwCPV,cAAM;AACJvB,oBAAU,YAAW;AACnB,gBACEc,OAAO;AACLmB,uBAAU5B,QAAQS,IAAR,CAAad,SAASiC,OAAtB,CADL;AAELG,qBAAU/B,QAAQS,IAAR,CAAad,SAASoC,KAAtB,CAFL;AAGLF,qBAAU7B,QAAQS,IAAR,CAAad,SAASkC,KAAtB;AAHL,aADT;;AAOA,gBAAGpB,KAAKmB,OAAR,EAAiB;AACfhB,qBAAOE,KAAP,CAAa,yCAAb,EAAwDL,KAAKmB,OAA7D;AACAhB,qBAAOG,GAAP,CAAWa,OAAX,CAAmBnB,KAAKmB,OAAxB;AACD;;AACD,gBAAGnB,KAAKsB,KAAR,EAAe;AACbnB,qBAAOE,KAAP,CAAa,+BAAb,EAA8CL,KAAKsB,KAAnD;AACAnB,qBAAOG,GAAP,CAAWgB,KAAX,CAAiBtB,KAAKsB,KAAtB;AACD;;AACD,gBAAGtB,KAAKoB,KAAR,EAAe;AACbjB,qBAAOE,KAAP,CAAa,iCAAb,EAAgDL,KAAKoB,KAArD;AACAjB,qBAAOG,GAAP,CAAWc,KAAX,CAAiBpB,KAAKoB,KAAtB;AACAjB,qBAAOG,GAAP,CAAWzC,QAAX,CAAoBmC,KAAKoB,KAAzB;AACD;AACF,WAtBG;AAuBJtC,oBAAU,YAAW;AACnB,gBAAGA,SAASwC,KAAT,KAAmB,KAAtB,EAA6B;AAC3BnB,qBAAOE,KAAP,CAAa,+BAAb,EAA8CvB,SAASwC,KAAvD;AACAnB,qBAAOG,GAAP,CAAWgB,KAAX,CAAiBxC,SAASwC,KAA1B;AACD;;AACD,gBAAGxC,SAASsC,KAAT,KAAmB,KAAtB,EAA6B;AAC3BjB,qBAAOE,KAAP,CAAa,+BAAb,EAA8CvB,SAASsC,KAAvD;AACAjB,qBAAOG,GAAP,CAAWc,KAAX,CAAiBtC,SAASsC,KAA1B;AACAjB,qBAAOG,GAAP,CAAWzC,QAAX,CAAoBsC,OAAOiB,KAA3B;AACD;;AACD,gBAAGtC,SAASqC,OAAT,KAAqB,KAAxB,EAA+B;AAC7BhB,qBAAOE,KAAP,CAAa,iCAAb,EAAgDvB,SAASqC,OAAzD;AACAhB,qBAAOG,GAAP,CAAWa,OAAX,CAAmBrC,SAASqC,OAA5B;AACD;AACF;AArCG,SAxCC;AAgFPI,mBAAW,UAASC,cAAT,EAAyB;AAClC,cACEC,QADF,EAEEC,UAFF,EAGEC,QAHF;;AAKA,cAAIxB,OAAOyB,GAAP,CAAWN,KAAX,EAAJ,EAAyB;AACvBI,yBAAiBvB,OAAO0B,GAAP,CAAWT,KAAX,EAAjB;AACAI,6BAAiBA,kBAAkB,CAAnC;AAEAG,uBAAiBD,aAAaF,cAA9B;AACAC,uBAAiBtB,OAAO0B,GAAP,CAAWP,KAAX,EAAjB;AAEAnB,mBAAOE,KAAP,CAAa,oBAAb,EAAmCqB,UAAnC,EAA+CC,QAA/C,EAAyDF,QAAzD;;AACA,gBAAGE,WAAWF,QAAd,EAAyB;AACvBtB,qBAAOE,KAAP,CAAa,oCAAb,EAAmDoB,QAAnD;AACAE,yBAAWF,QAAX;AACD;AACF,WAZD,MAaK;AACHC,yBAAiBvB,OAAO0B,GAAP,CAAWV,OAAX,EAAjB;AACAK,6BAAiBA,kBAAkBrB,OAAO0B,GAAP,CAAWC,WAAX,EAAnC;AAEAH,uBAAiBD,aAAaF,cAA9B;AACAC,uBAAiB,GAAjB;AAEAtB,mBAAOE,KAAP,CAAa,4BAAb,EAA2CqB,UAA3C,EAAuDC,QAAvD;;AACA,gBAAGA,WAAWF,QAAd,EAAyB;AACvBtB,qBAAOE,KAAP,CAAa,0CAAb;AACAsB,yBAAWF,QAAX;AACD;AACF;;AACDtB,iBAAOG,GAAP,CAAWzC,QAAX,CAAoB8D,QAApB;AACD,SAjHM;AAkHPI,mBAAW,UAASC,cAAT,EAAyB;AAClC,cACEV,QAAYnB,OAAO0B,GAAP,CAAWP,KAAX,EADd;AAAA,cAEEI,UAFF;AAAA,cAGEC,QAHF;;AAKA,cAAGL,KAAH,EAAU;AACRI,yBAAkBvB,OAAO0B,GAAP,CAAWT,KAAX,EAAlB;AACAY,6BAAkBA,kBAAkB,CAApC;AACAL,uBAAkBD,aAAaM,cAA/B;AACA7B,mBAAOE,KAAP,CAAa,uBAAb,EAAsC2B,cAAtC,EAAsDN,UAAtD;AACD,WALD,MAMK;AACHA,yBAAkBvB,OAAO0B,GAAP,CAAWV,OAAX,EAAlB;AACAa,6BAAkBA,kBAAkB7B,OAAO0B,GAAP,CAAWC,WAAX,EAApC;AACAH,uBAAkBD,aAAaM,cAA/B;AACA7B,mBAAOE,KAAP,CAAa,4BAAb,EAA2C2B,cAA3C,EAA2DN,UAA3D;AACD;;AAED,cAAGC,WAAW,CAAd,EAAiB;AACfxB,mBAAOE,KAAP,CAAa,gCAAb;AACAsB,uBAAW,CAAX;AACD;;AACDxB,iBAAOG,GAAP,CAAWzC,QAAX,CAAoB8D,QAApB;AACD,SA1IM;AA4IPC,aAAK;AACHN,iBAAO,YAAW;AAChB,mBAAQnB,OAAO0B,GAAP,CAAWP,KAAX,OAAuB,KAA/B;AACD;AAHE,SA5IE;AAkJPO,aAAK;AACHI,gBAAM,UAASC,YAAT,EAAuB;AAC3B,gBACEd,QAAUjB,OAAOiB,KAAP,IAA+B,CAD3C;AAAA,gBAEEE,QAAUnB,OAAOmB,KAAP,IAA+B,CAF3C;AAAA,gBAGEH,UAAWlB,SAAD,GACNE,OAAO0B,GAAP,CAAWM,cAAX,EADM,GAENhC,OAAOgB,OAAP,IAAkB,CALxB;AAAA,gBAMEiB,OAAQjC,OAAOmB,KAAP,GAAe,CAAhB,GACFA,QAAQF,KADN,GAEF,MAAMD,OARb;AAUAe,2BAAeA,gBAAgB,EAA/B;AACAA,2BAAeA,aACZG,OADY,CACJ,SADI,EACOjB,KADP,EAEZiB,OAFY,CAEJ,SAFI,EAEOf,KAFP,EAGZe,OAHY,CAGJ,QAHI,EAGMD,IAHN,EAIZC,OAJY,CAIJ,WAJI,EAISlB,OAJT,CAAf;AAMAhB,mBAAOE,KAAP,CAAa,uCAAb,EAAsD6B,YAAtD;AACA,mBAAOA,YAAP;AACD,WArBE;AAwBHJ,uBAAa,YAAW;AACtB3B,mBAAOE,KAAP,CAAa,wCAAb;AACA,mBAAOiC,KAAKC,KAAL,CAAYD,KAAKE,MAAL,KAAgB1D,SAAS0D,MAAT,CAAgBC,GAAjC,GAAwC3D,SAAS0D,MAAT,CAAgBE,GAAnE,CAAP;AACD,WA3BE;AA6BHC,wBAAc,UAASvB,KAAT,EAAgB;AAC5B,mBAAQ,OAAOA,KAAP,KAAiB,QAAlB,GACFA,MAAMiB,OAAN,CAAc,SAAd,EAAyB,EAAzB,MAAiC,EAAlC,GACE,CAAEjB,MAAMiB,OAAN,CAAc,SAAd,EAAyB,EAAzB,CADJ,GAEE,KAHC,GAIHjB,KAJJ;AAMD,WApCE;AAsCHlB,yBAAe,YAAW;AACxB,gBACEJ,UAAcpC,SAASkF,aAAT,CAAuB,SAAvB,CADhB;AAAA,gBAEEC,cAAc;AACZ,4BAAoB,eADR;AAEZ,6BAAoB,gBAFR;AAGZ,+BAAoB,eAHR;AAIZ,kCAAoB;AAJR,aAFhB;AAAA,gBAQEC,UARF;;AAUA,iBAAIA,UAAJ,2CAAkBD,WAAlB,GAA8B;AAC5B,kBAAI/C,QAAQiD,KAAR,CAAcD,UAAd,MAA8BnF,SAAlC,EAA6C;AAC3C,uBAAOkF,YAAYC,UAAZ,CAAP;AACD;AACF;AACF,WAtDE;AAwDH;AACAX,0BAAgB,YAAW;AACzB,gBACEa,WAAiBxD,KAAKyD,KAAL,EADnB;AAAA,gBAEEC,aAAiB3D,QAAQ0D,KAAR,EAFnB;AAAA,gBAGEE,aAAiBC,SAAS5D,KAAK6D,GAAL,CAAS,WAAT,CAAT,EAAgC,EAAhC,CAHnB;AAAA,gBAIElB,iBAAkBa,WAAWG,UAAZ,GACZH,WAAWE,UAAX,GAAwB,GADZ,GAEb/C,OAAOgB,OANb;AAQA,mBAAQrC,SAASwE,SAAT,GAAqB,CAAtB,GACHhB,KAAKiB,KAAL,CAAWpB,kBAAkB,KAAKrD,SAASwE,SAAhC,CAAX,KAA0D,KAAKxE,SAASwE,SAAxE,CADG,GAEHhB,KAAKiB,KAAL,CAAWpB,cAAX,CAFJ;AAID,WAtEE;AAwEHhB,mBAAS,YAAW;AAClB,mBAAOhB,OAAOgB,OAAP,IAAkB,CAAzB;AACD,WA1EE;AA2EHC,iBAAO,YAAW;AAChB,mBAAOjB,OAAOiB,KAAP,IAAgB,CAAvB;AACD,WA7EE;AA8EHE,iBAAO,YAAW;AAChB,mBAAOnB,OAAOmB,KAAP,IAAgB,KAAvB;AACD;AAhFE,SAlJE;AAqOPkC,YAAI;AACFC,mBAAS,YAAW;AAClB,mBAAOlE,QAAQmE,QAAR,CAAiBzE,UAAUwE,OAA3B,CAAP;AACD,WAHC;AAIFE,mBAAS,YAAW;AAClB,mBAAOpE,QAAQmE,QAAR,CAAiBzE,UAAU0E,OAA3B,CAAP;AACD,WANC;AAOFvE,iBAAO,YAAW;AAChB,mBAAOG,QAAQmE,QAAR,CAAiBzE,UAAUG,KAA3B,CAAP;AACD,WATC;AAUFwE,kBAAQ,YAAW;AACjB,mBAAOrE,QAAQmE,QAAR,CAAiBzE,UAAU2E,MAA3B,CAAP;AACD,WAZC;AAaFC,mBAAS,YAAW;AAClB,mBAAOtE,QAAQiE,EAAR,CAAW,UAAX,CAAP;AACD;AAfC,SArOG;AAuPPzC,gBAAQ;AACNC,iBAAO,YAAW;AAChBb,mBAAOQ,OAAP,CAAe,uBAAf;AACA,mBAAOR,OAAOmB,KAAd;AACA,mBAAOnB,OAAOgB,OAAd;AACA,mBAAOhB,OAAOiB,KAAd;AACD,WANK;AAONwC,kBAAQ,YAAW;AACjBzD,mBAAOQ,OAAP,CAAe,uBAAf;AACApB,oBAAQuE,WAAR,CAAoB7E,UAAU2E,MAA9B;AACD,WAVK;AAWNH,mBAAS,YAAW;AAClBtD,mBAAOQ,OAAP,CAAe,wBAAf;AACApB,oBAAQuE,WAAR,CAAoB7E,UAAUwE,OAA9B;AACD,WAdK;AAeNE,mBAAS,YAAW;AAClBxD,mBAAOQ,OAAP,CAAe,wBAAf;AACApB,oBAAQuE,WAAR,CAAoB7E,UAAU0E,OAA9B;AACD,WAlBK;AAmBNvE,iBAAO,YAAW;AAChBe,mBAAOQ,OAAP,CAAe,sBAAf;AACApB,oBAAQuE,WAAR,CAAoB7E,UAAUG,KAA9B;AACD;AAtBK,SAvPD;AAgRPkB,aAAK;AACH0C,oBAAU,UAAS5B,KAAT,EAAgB;AACxB,gBAAGA,QAAQ,GAAX,EAAgB;AACdjB,qBAAOf,KAAP,CAAaA,MAAM2E,OAAnB,EAA4B3C,KAA5B;AACD,aAFD,MAGK,IAAIA,QAAQ,CAAZ,EAAe;AAClBjB,qBAAOf,KAAP,CAAaA,MAAM4E,MAAnB,EAA2B5C,KAA3B;AACD,aAFI,MAGA;AACH5B,mBACG6D,GADH,CACO,OADP,EACgBjC,QAAQ,GADxB;AAGA7B,sBACG0E,IADH,CACQ,cADR,EACwBb,SAAShC,KAAT,EAAgB,EAAhB,CADxB;AAGD;AACF,WAhBE;AAiBHb,oBAAU,UAASA,QAAT,EAAmB;AAC3BA,uBAAWA,YAAYzB,SAASyB,QAAhC;AACAA,uBAAY,OAAOA,QAAP,IAAmB,QAApB,GACPA,WAAW,IADJ,GAEPA,QAFJ;AAIAJ,mBAAOQ,OAAP,CAAe,0CAAf,EAA2DJ,QAA3D;AACAf,iBACG6D,GADH,CACO;AACH,qCAAwB9C;AADrB,aADP;AAKD,WA7BE;AA8BHY,mBAAS,UAASA,OAAT,EAAkB;AACzBA,sBAAW,OAAOA,OAAP,IAAkB,QAAnB,GACN,CAAEA,QAAQkB,OAAR,CAAgB,GAAhB,EAAqB,EAArB,CADI,GAENlB,OAFJ,CADyB,CAKzB;;AACAA,sBAAWrC,SAASwE,SAAT,GAAqB,CAAtB,GACNhB,KAAKiB,KAAL,CAAWpC,WAAW,KAAKrC,SAASwE,SAAzB,CAAX,KAAmD,KAAKxE,SAASwE,SAAjE,CADM,GAENhB,KAAKiB,KAAL,CAAWpC,OAAX,CAFJ;AAIAhB,mBAAOgB,OAAP,GAAiBA,OAAjB;;AACA,gBAAI,CAAChB,OAAOyB,GAAP,CAAWN,KAAX,EAAL,EAA0B;AACxBnB,qBAAOiB,KAAP,GAAgBtC,SAASwE,SAAT,GAAqB,CAAtB,GACXhB,KAAKiB,KAAL,CAAapC,UAAU,GAAX,GAAkBhB,OAAOmB,KAAzB,IAAkC,KAAKxC,SAASwE,SAAhD,CAAZ,KAA2E,KAAKxE,SAASwE,SAAzF,CADW,GAEXhB,KAAKiB,KAAL,CAAapC,UAAU,GAAX,GAAkBhB,OAAOmB,KAAzB,GAAiC,EAA7C,IAAmD,EAFvD;;AAIA,kBAAGxC,SAASoF,WAAZ,EAAyB;AACvB/D,uBAAOiB,KAAP,GAAgBjB,OAAOiB,KAAP,GAAe,GAAhB,GACX,GADW,GAEVjB,OAAOiB,KAAP,GAAe,CAAhB,GACE,CADF,GAEEjB,OAAOiB,KAJb;AAMD;AACF;;AACDjB,mBAAOG,GAAP,CAAW0C,QAAX,CAAoB7B,OAApB;AACAhB,mBAAOG,GAAP,CAAW6D,aAAX;AACAhE,mBAAOG,GAAP,CAAW8D,MAAX;AACAtF,qBAASuF,QAAT,CAAkB1F,IAAlB,CAAuBmB,OAAvB,EAAgCqB,OAAhC,EAAyChB,OAAOiB,KAAhD,EAAuDjB,OAAOmB,KAA9D;AACD,WA3DE;AA4DH6C,yBAAe,YAAW;AACxB,gBACEG,oBAAoB,YAAW;AAC7BnE,qBAAOQ,OAAP,CAAe,2DAAf;AACAE,4BAAcV,OAAOW,QAArB;AACAb,0BAAY,KAAZ;AACAE,qBAAOG,GAAP,CAAW8D,MAAX;AACD,aANH;;AAQAvD,0BAAcV,OAAOW,QAArB;AACAtB,iBAAK+E,GAAL,CAASrE,gBAAgBb,cAAzB,EAAyCiF,iBAAzC;AACAnE,mBAAOqE,KAAP,GAAeC,WAAWH,iBAAX,EAA8BxF,SAASyB,QAAT,GAAoB,GAAlD,CAAf;AACAN,wBAAY,IAAZ;AACAE,mBAAOW,QAAP,GAAkB4D,YAAYvE,OAAOG,GAAP,CAAW8D,MAAvB,EAA+BtF,SAAS6F,SAAxC,CAAlB;AACD,WA1EE;AA2EHP,kBAAQ,YAAW;AACjBjE,mBAAOQ,OAAP,CAAe,gDAAf;AACAR,mBAAOG,GAAP,CAAWsE,QAAX;AACAzE,mBAAOG,GAAP,CAAWU,KAAX;AACD,WA/EE;AAgFHnB,iBAAO,UAASoC,IAAT,EAAe;AACpBA,mBAAOA,QAAQ,EAAf;;AACA,gBAAGA,IAAH,EAAS;AACPA,qBAAO9B,OAAO0B,GAAP,CAAWI,IAAX,CAAgBA,IAAhB,CAAP;AACA9B,qBAAOE,KAAP,CAAa,uBAAb,EAAsC4B,IAAtC;AACArC,qBAAOqC,IAAP,CAAYA,IAAZ;AACD;AACF,WAvFE;AAwFHjB,iBAAO,UAASG,OAAT,EAAkB;AACvBA,sBAAWA,YAAYxD,SAAb,GACNwD,OADM,GAENhB,OAAOgB,OAFX;;AAIA,gBAAGA,YAAY,GAAf,EAAoB;AAClB,kBAAGrC,SAAS+F,WAAT,IAAwB,EAAE1E,OAAOqD,EAAP,CAAUG,OAAV,MAAuBxD,OAAOqD,EAAP,CAAUpE,KAAV,EAAzB,CAA3B,EAAwE;AACtEe,uBAAOG,GAAP,CAAWmD,OAAX;AACAtD,uBAAOE,KAAP,CAAa,0CAAb;AACD,eAHD,MAIK;AACHF,uBAAOQ,OAAP,CAAe,oCAAf;AACAR,uBAAOY,MAAP,CAAc6C,MAAd;AACD;AACF,aATD,MAUK,IAAGzC,UAAU,CAAb,EAAgB;AACnBhB,qBAAOQ,OAAP,CAAe,qCAAf,EAAsDQ,OAAtD;AACAhB,qBAAOG,GAAP,CAAWsD,MAAX;AACD,aAHI,MAIA;AACHzD,qBAAOY,MAAP,CAAc6C,MAAd;AACAzD,qBAAOG,GAAP,CAAWT,KAAX,CAAiBf,SAASmD,IAAT,CAAc2B,MAA/B;AACD;AACF,WA/GE;AAgHHgB,oBAAU,UAAS3C,IAAT,EAAe;AACvB,gBAAGA,SAAStE,SAAZ,EAAuB;AACrBgC,wBAAUsC,IAAV,CAAgB9B,OAAO0B,GAAP,CAAWI,IAAX,CAAgBA,IAAhB,CAAhB;AACD,aAFD,MAGK,IAAGnD,SAASe,KAAT,IAAkB,OAAlB,IAA6BM,OAAOmB,KAAvC,EAA8C;AACjDnB,qBAAOE,KAAP,CAAa,2BAAb;AACAV,wBAAUsC,IAAV,CAAgB9B,OAAO0B,GAAP,CAAWI,IAAX,CAAgBnD,SAASmD,IAAT,CAAc6C,KAA9B,CAAhB;AACD,aAHI,MAIA,IAAGhG,SAASe,KAAT,IAAkB,SAArB,EAAgC;AACnCM,qBAAOE,KAAP,CAAa,gCAAb;AACAV,wBAAUsC,IAAV,CAAgB9B,OAAO0B,GAAP,CAAWI,IAAX,CAAgBnD,SAASmD,IAAT,CAAcd,OAA9B,CAAhB;AACD;AACF,WA5HE;AA6HHyC,kBAAQ,UAAS3B,IAAT,EAAe;AACrBA,mBAAOA,QAAQnD,SAASmD,IAAT,CAAc2B,MAA7B;AACAzD,mBAAOE,KAAP,CAAa,sBAAb;;AACA,gBAAGvB,SAASiG,YAAT,IAAyB,CAAC5E,OAAOqD,EAAP,CAAUI,MAAV,EAA7B,EAAkD;AAChDrE,sBAAQyF,QAAR,CAAiB/F,UAAU2E,MAA3B;AACD;;AACDzD,mBAAOY,MAAP,CAAc4C,OAAd;AACAxD,mBAAOY,MAAP,CAAc3B,KAAd;AACAe,mBAAOY,MAAP,CAAc0C,OAAd;;AACA,gBAAGxB,IAAH,EAAS;AACP9B,qBAAOG,GAAP,CAAWT,KAAX,CAAiBoC,IAAjB;AACD;;AACDnD,qBAASmG,QAAT,CAAkBtG,IAAlB,CAAuBmB,OAAvB,EAAgCK,OAAOiB,KAAvC,EAA8CjB,OAAOmB,KAArD;AACD,WA1IE;AA2IHmC,mBAAU,UAASxB,IAAT,EAAe;AACvBA,mBAAOA,QAAQnD,SAASmD,IAAT,CAAcwB,OAA7B;AACAtD,mBAAOE,KAAP,CAAa,uBAAb;AACAd,oBAAQyF,QAAR,CAAiB/F,UAAUwE,OAA3B;AACAtD,mBAAOY,MAAP,CAAc6C,MAAd;AACAzD,mBAAOY,MAAP,CAAc4C,OAAd;AACAxD,mBAAOY,MAAP,CAAc3B,KAAd;AACAe,mBAAOkB,QAAP;;AACA,gBAAGY,IAAH,EAAS;AACP9B,qBAAOG,GAAP,CAAWT,KAAX,CAAiBoC,IAAjB;AACD;;AACDnD,qBAASoG,SAAT,CAAmBvG,IAAnB,CAAwBmB,OAAxB,EAAiCK,OAAOmB,KAAxC;AACD,WAvJE;AAwJHqC,mBAAU,UAAS1B,IAAT,EAAe;AACvBA,mBAAOA,QAAQnD,SAASmD,IAAT,CAAc0B,OAA7B;AACAxD,mBAAOE,KAAP,CAAa,uBAAb;AACAd,oBAAQyF,QAAR,CAAiB/F,UAAU0E,OAA3B;AACAxD,mBAAOY,MAAP,CAAc6C,MAAd;AACAzD,mBAAOY,MAAP,CAAc0C,OAAd;AACAtD,mBAAOY,MAAP,CAAc3B,KAAd;AACAe,mBAAOkB,QAAP;;AACA,gBAAGY,IAAH,EAAS;AACP9B,qBAAOG,GAAP,CAAWT,KAAX,CAAiBoC,IAAjB;AACD;;AACDnD,qBAASqG,SAAT,CAAmBxG,IAAnB,CAAwBmB,OAAxB,EAAiCK,OAAOiB,KAAxC,EAA+CjB,OAAOmB,KAAtD;AACD,WApKE;AAqKHlC,iBAAQ,UAAS6C,IAAT,EAAe;AACrBA,mBAAOA,QAAQnD,SAASmD,IAAT,CAAc7C,KAA7B;AACAe,mBAAOE,KAAP,CAAa,qBAAb;AACAd,oBAAQyF,QAAR,CAAiB/F,UAAUG,KAA3B;AACAe,mBAAOY,MAAP,CAAc6C,MAAd;AACAzD,mBAAOY,MAAP,CAAc0C,OAAd;AACAtD,mBAAOY,MAAP,CAAc4C,OAAd;AACAxD,mBAAOkB,QAAP;;AACA,gBAAGY,IAAH,EAAS;AACP9B,qBAAOG,GAAP,CAAWT,KAAX,CAAiBoC,IAAjB;AACD;;AACDnD,qBAASsG,OAAT,CAAiBzG,IAAjB,CAAsBmB,OAAtB,EAA+BK,OAAOiB,KAAtC,EAA6CjB,OAAOmB,KAApD;AACD,WAjLE;AAkLHd,2BAAiB,YAAW;AAC1BN,4BAAgBC,OAAO0B,GAAP,CAAW3B,aAAX,EAAhB;AACD,WApLE;AAqLHoB,iBAAO,UAAS+D,UAAT,EAAqB;AAC1BlF,mBAAOmB,KAAP,GAAe+D,UAAf;AACD,WAvLE;AAwLHjE,iBAAO,UAASA,KAAT,EAAgB;AACrBjB,mBAAOiB,KAAP,GAAeA,KAAf;AACD,WA1LE;AA2LHvD,oBAAU,UAASuD,KAAT,EAAgB;AACxB,gBACEuB,eAAexC,OAAO0B,GAAP,CAAWc,YAAX,CAAwBvB,KAAxB,CADjB;AAAA,gBAEEkE,eAFF;;AAIA,gBAAG3C,iBAAiB,KAApB,EAA2B;AACzBxC,qBAAOf,KAAP,CAAaA,MAAMmG,UAAnB,EAA+BnE,KAA/B;AACD;;AACD,gBAAIjB,OAAOyB,GAAP,CAAWN,KAAX,EAAJ,EAAyB;AACvBnB,qBAAOG,GAAP,CAAWc,KAAX,CAAiBuB,YAAjB;AACA2C,gCAAmB3C,eAAexC,OAAOmB,KAAvB,GAAgC,GAAlD;AACAnB,qBAAOE,KAAP,CAAa,yCAAb,EAAwDiF,eAAxD;AACAnF,qBAAOG,GAAP,CAAWa,OAAX,CAAoBmE,eAApB;AACD,aALD,MAMK;AACHA,gCAAkB3C,YAAlB;AACAxC,qBAAOE,KAAP,CAAa,yCAAb,EAAwDiF,eAAxD;AACAnF,qBAAOG,GAAP,CAAWa,OAAX,CAAoBmE,eAApB;AACD;AACF;AA9ME,SAhRE;AAiePE,iBAAS,UAASC,IAAT,EAAerE,KAAf,EAAsB;AAC7BjB,iBAAOE,KAAP,CAAa,kBAAb,EAAiCoF,IAAjC,EAAuCrE,KAAvC;;AACA,cAAI5D,EAAEuB,aAAF,CAAgB0G,IAAhB,CAAJ,EAA4B;AAC1BjI,cAAEwB,MAAF,CAAS,IAAT,EAAeF,QAAf,EAAyB2G,IAAzB;AACD,WAFD,MAGK,IAAGrE,UAAUzD,SAAb,EAAwB;AAC3BmB,qBAAS2G,IAAT,IAAiBrE,KAAjB;AACD,WAFI,MAGA;AACH,mBAAOtC,SAAS2G,IAAT,CAAP;AACD;AACF,SA5eM;AA6ePC,kBAAU,UAASD,IAAT,EAAerE,KAAf,EAAsB;AAC9B,cAAI5D,EAAEuB,aAAF,CAAgB0G,IAAhB,CAAJ,EAA4B;AAC1BjI,cAAEwB,MAAF,CAAS,IAAT,EAAemB,MAAf,EAAuBsF,IAAvB;AACD,WAFD,MAGK,IAAGrE,UAAUzD,SAAb,EAAwB;AAC3BwC,mBAAOsF,IAAP,IAAerE,KAAf;AACD,WAFI,MAGA;AACH,mBAAOjB,OAAOsF,IAAP,CAAP;AACD;AACF,SAvfM;AAwfPpF,eAAO,YAAW;AAChB,cAAGvB,SAASuB,KAAZ,EAAmB;AACjB,gBAAGvB,SAAST,WAAZ,EAAyB;AACvB8B,qBAAO9B,WAAP,CAAmBsH,GAAnB,CAAuBpH,SAAvB;AACD,aAFD,MAGK;AACH4B,qBAAOE,KAAP,GAAeuF,SAASC,SAAT,CAAmBC,IAAnB,CAAwBnH,IAAxB,CAA6BoH,QAAQC,IAArC,EAA2CD,OAA3C,EAAoDjH,SAAS2G,IAAT,GAAgB,GAApE,CAAf;AACAtF,qBAAOE,KAAP,CAAa4F,KAAb,CAAmBF,OAAnB,EAA4BxH,SAA5B;AACD;AACF;AACF,SAlgBM;AAmgBPoC,iBAAS,YAAW;AAClB,cAAG7B,SAAS6B,OAAT,IAAoB7B,SAASuB,KAAhC,EAAuC;AACrC,gBAAGvB,SAAST,WAAZ,EAAyB;AACvB8B,qBAAO9B,WAAP,CAAmBsH,GAAnB,CAAuBpH,SAAvB;AACD,aAFD,MAGK;AACH4B,qBAAOQ,OAAP,GAAiBiF,SAASC,SAAT,CAAmBC,IAAnB,CAAwBnH,IAAxB,CAA6BoH,QAAQC,IAArC,EAA2CD,OAA3C,EAAoDjH,SAAS2G,IAAT,GAAgB,GAApE,CAAjB;AACAtF,qBAAOQ,OAAP,CAAesF,KAAf,CAAqBF,OAArB,EAA8BxH,SAA9B;AACD;AACF;AACF,SA7gBM;AA8gBPa,eAAO,YAAW;AAChBe,iBAAOf,KAAP,GAAewG,SAASC,SAAT,CAAmBC,IAAnB,CAAwBnH,IAAxB,CAA6BoH,QAAQ3G,KAArC,EAA4C2G,OAA5C,EAAqDjH,SAAS2G,IAAT,GAAgB,GAArE,CAAf;AACAtF,iBAAOf,KAAP,CAAa6G,KAAb,CAAmBF,OAAnB,EAA4BxH,SAA5B;AACD,SAjhBM;AAkhBPF,qBAAa;AACXsH,eAAK,UAASO,OAAT,EAAkB;AACrB,gBACEC,WADF,EAEEC,aAFF,EAGEC,YAHF;;AAKA,gBAAGvH,SAAST,WAAZ,EAAyB;AACvB8H,4BAAgB,IAAIhI,IAAJ,GAAWC,OAAX,EAAhB;AACAiI,6BAAgBnI,QAAQiI,WAAxB;AACAC,8BAAgBD,cAAcE,YAA9B;AACAnI,qBAAgBiI,WAAhB;AACA9H,0BAAYiI,IAAZ,CAAiB;AACf,wBAAmBJ,QAAQ,CAAR,CADJ;AAEf,6BAAmB,GAAGxH,KAAH,CAASC,IAAT,CAAcuH,OAAd,EAAuB,CAAvB,KAA6B,EAFjC;AAGf,2BAAmBpG,OAHJ;AAIf,kCAAmBsG;AAJJ,eAAjB;AAMD;;AACDG,yBAAapG,OAAO9B,WAAP,CAAmBmG,KAAhC;AACArE,mBAAO9B,WAAP,CAAmBmG,KAAnB,GAA2BC,WAAWtE,OAAO9B,WAAP,CAAmBmI,OAA9B,EAAuC,GAAvC,CAA3B;AACD,WArBU;AAsBXA,mBAAS,YAAW;AAClB,gBACEC,QAAQ3H,SAAS2G,IAAT,GAAgB,GAD1B;AAAA,gBAEEiB,YAAY,CAFd;AAIAxI,mBAAO,KAAP;AACAqI,yBAAapG,OAAO9B,WAAP,CAAmBmG,KAAhC;AACAhH,cAAEqB,IAAF,CAAOR,WAAP,EAAoB,UAASsI,KAAT,EAAgB3G,IAAhB,EAAsB;AACxC0G,2BAAa1G,KAAK,gBAAL,CAAb;AACD,aAFD;AAGAyG,qBAAS,MAAMC,SAAN,GAAkB,IAA3B;;AACA,gBAAG1I,cAAH,EAAmB;AACjByI,uBAAS,QAAQzI,cAAR,GAAyB,IAAlC;AACD;;AACD,gBAAI,CAAC+H,QAAQa,KAAR,KAAkBjJ,SAAlB,IAA+BoI,QAAQc,KAAR,KAAkBlJ,SAAlD,KAAgEU,YAAYyI,MAAZ,GAAqB,CAAzF,EAA4F;AAC1Ff,sBAAQgB,cAAR,CAAuBN,KAAvB;;AACA,kBAAGV,QAAQc,KAAX,EAAkB;AAChBd,wBAAQc,KAAR,CAAcxI,WAAd;AACD,eAFD,MAGK;AACHb,kBAAEqB,IAAF,CAAOR,WAAP,EAAoB,UAASsI,KAAT,EAAgB3G,IAAhB,EAAsB;AACxC+F,0BAAQJ,GAAR,CAAY3F,KAAK,MAAL,IAAe,IAAf,GAAsBA,KAAK,gBAAL,CAAtB,GAA6C,IAAzD;AACD,iBAFD;AAGD;;AACD+F,sBAAQiB,QAAR;AACD;;AACD3I,0BAAc,EAAd;AACD;AAjDU,SAlhBN;AAqkBP4I,gBAAQ,UAAS3I,KAAT,EAAgB4I,eAAhB,EAAiCC,OAAjC,EAA0C;AAChD,cACEC,SAASrH,QADX;AAAA,cAEEsH,QAFF;AAAA,cAGEC,KAHF;AAAA,cAIEC,QAJF;AAMAL,4BAAkBA,mBAAmBzI,cAArC;AACA0I,oBAAkBrH,WAAmBqH,OAArC;;AACA,cAAG,OAAO7I,KAAP,IAAgB,QAAhB,IAA4B8I,WAAWzJ,SAA1C,EAAqD;AACnDW,oBAAWA,MAAMkJ,KAAN,CAAY,OAAZ,CAAX;AACAH,uBAAW/I,MAAMwI,MAAN,GAAe,CAA1B;AACAtJ,cAAEqB,IAAF,CAAOP,KAAP,EAAc,UAASmJ,KAAT,EAAgBrG,KAAhB,EAAuB;AACnC,kBAAIsG,iBAAkBD,SAASJ,QAAV,GACjBjG,QAAQ9C,MAAMmJ,QAAQ,CAAd,EAAiBE,MAAjB,CAAwB,CAAxB,EAA2BC,WAA3B,EAAR,GAAmDtJ,MAAMmJ,QAAQ,CAAd,EAAiB/I,KAAjB,CAAuB,CAAvB,CADlC,GAEjBJ,KAFJ;;AAIA,kBAAId,EAAEuB,aAAF,CAAiBqI,OAAOM,cAAP,CAAjB,KAA8CD,SAASJ,QAA3D,EAAuE;AACrED,yBAASA,OAAOM,cAAP,CAAT;AACD,eAFD,MAGK,IAAIN,OAAOM,cAAP,MAA2B/J,SAA/B,EAA2C;AAC9C2J,wBAAQF,OAAOM,cAAP,CAAR;AACA,uBAAO,KAAP;AACD,eAHI,MAIA,IAAIlK,EAAEuB,aAAF,CAAiBqI,OAAOhG,KAAP,CAAjB,KAAqCqG,SAASJ,QAAlD,EAA8D;AACjED,yBAASA,OAAOhG,KAAP,CAAT;AACD,eAFI,MAGA,IAAIgG,OAAOhG,KAAP,MAAkBzD,SAAtB,EAAkC;AACrC2J,wBAAQF,OAAOhG,KAAP,CAAR;AACA,uBAAO,KAAP;AACD,eAHI,MAIA;AACHjB,uBAAOf,KAAP,CAAaA,MAAMyI,MAAnB,EAA2BvJ,KAA3B;AACA,uBAAO,KAAP;AACD;AACF,aAvBD;AAwBD;;AACD,cAAKd,EAAEsK,UAAF,CAAcR,KAAd,CAAL,EAA6B;AAC3BC,uBAAWD,MAAMrB,KAAN,CAAYkB,OAAZ,EAAqBD,eAArB,CAAX;AACD,WAFD,MAGK,IAAGI,UAAU3J,SAAb,EAAwB;AAC3B4J,uBAAWD,KAAX;AACD;;AACD,cAAG9J,EAAEuK,OAAF,CAAUnJ,aAAV,CAAH,EAA6B;AAC3BA,0BAAc0H,IAAd,CAAmBiB,QAAnB;AACD,WAFD,MAGK,IAAG3I,kBAAkBjB,SAArB,EAAgC;AACnCiB,4BAAgB,CAACA,aAAD,EAAgB2I,QAAhB,CAAhB;AACD,WAFI,MAGA,IAAGA,aAAa5J,SAAhB,EAA2B;AAC9BiB,4BAAgB2I,QAAhB;AACD;;AACD,iBAAOD,KAAP;AACD;AA1nBM,OAAT;;AA6nBA,UAAG9I,aAAH,EAAkB;AAChB,YAAGuB,aAAapC,SAAhB,EAA2B;AACzBwC,iBAAOC,UAAP;AACD;;AACDD,eAAO8G,MAAP,CAAc3I,KAAd;AACD,OALD,MAMK;AACH,YAAGyB,aAAapC,SAAhB,EAA2B;AACzBoC,mBAASkH,MAAT,CAAgB,SAAhB;AACD;;AACD9G,eAAOC,UAAP;AACD;AACF,KAtqBH;AAyqBA,WAAQxB,kBAAkBjB,SAAnB,GACHiB,aADG,GAEH,IAFJ;AAID,GA7rBD;;AA+rBApB,IAAEI,EAAF,CAAKC,QAAL,CAAciB,QAAd,GAAyB;AAEvB2G,UAAe,UAFQ;AAGvBtG,eAAe,UAHQ;AAKvBkB,WAAe,KALQ;AAMvBM,aAAe,KANQ;AAOvBtC,iBAAe,IAPQ;AASvBmE,YAAe;AACbE,WAAM,CADO;AAEbD,WAAM;AAFO,KATQ;AAcvBlC,cAAe,GAdQ;AAgBvBsE,iBAAe,IAhBQ;AAiBvBE,kBAAe,IAjBQ;AAkBvBb,iBAAe,IAlBQ;AAoBvBrE,WAAe,SApBQ;AAqBvByD,eAAe,CArBQ;AAsBvBqB,eAAgB,OAAO,EAtBA;AAsBK;AAE5BxD,aAAe,KAxBQ;AAyBvBG,WAAe,KAzBQ;AA0BvBF,WAAe,KA1BQ;AA4BvBiD,cAAe,UAASlD,OAAT,EAAkBC,KAAlB,EAAyBE,KAAzB,EAA+B,CAAE,CA5BzB;AA6BvB4D,eAAe,UAAS5D,KAAT,EAAe,CAAE,CA7BT;AA8BvB2D,cAAe,UAAS7D,KAAT,EAAgBE,KAAhB,EAAsB,CAAE,CA9BhB;AA+BvB8D,aAAe,UAAShE,KAAT,EAAgBE,KAAhB,EAAsB,CAAE,CA/BhB;AAgCvB6D,eAAe,UAAS/D,KAAT,EAAgBE,KAAhB,EAAsB,CAAE,CAhChB;AAkCvBlC,WAAW;AACTyI,cAAa,uCADJ;AAETtC,kBAAa,+BAFJ;AAGTxB,eAAa,+BAHJ;AAITC,cAAa;AAJJ,KAlCY;AAyCvBgE,YAAQ;AACNC,gBAAU;AADJ,KAzCe;AA6CvB/I,cAAU;AACRiC,eAAU,SADF;AAERG,aAAU,OAFF;AAGRF,aAAU;AAHF,KA7Ca;AAmDvBnD,cAAW;AACTyB,WAAW,QADF;AAETG,aAAW,UAFF;AAGThC,gBAAW;AAHF,KAnDY;AAyDvBoE,UAAO;AACL2B,cAAU,KADL;AAELxE,aAAU,KAFL;AAGLqE,eAAU,KAHL;AAILE,eAAU,KAJL;AAKLxC,eAAU,YALL;AAML2D,aAAU;AANL,KAzDgB;AAkEvB7F,eAAY;AACV2E,cAAU,QADA;AAEVxE,aAAU,OAFA;AAGVqE,eAAU,SAHA;AAIVE,eAAU;AAJA;AAlEW,GAAzB;AA4EC,CA/wBA,EA+wBGuE,MA/wBH,EA+wBWzK,MA/wBX,EA+wBmBC,QA/wBnB","sourcesContent":["/*\n  DO NOT MODIFY - This file has been generated and will be regenerated\n  Semantic UI v2.1.8\n*/\n/*!\n * # Semantic UI - Progress\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Copyright 2015 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ( $, window, document, undefined ) {\n\n\"use strict\";\n\n$.fn.progress = function(parameters) {\n  var\n    $allModules    = $(this),\n\n    moduleSelector = $allModules.selector || '',\n\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings          = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.progress.settings, parameters)\n          : $.extend({}, $.fn.progress.settings),\n\n        className       = settings.className,\n        metadata        = settings.metadata,\n        namespace       = settings.namespace,\n        selector        = settings.selector,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        $module         = $(this),\n        $bar            = $(this).find(selector.bar),\n        $progress       = $(this).find(selector.progress),\n        $label          = $(this).find(selector.label),\n\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n\n        animating = false,\n        transitionEnd,\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.debug('Initializing progress bar', settings);\n\n          module.set.duration();\n          module.set.transitionEvent();\n\n          module.read.metadata();\n          module.read.settings();\n\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of progress', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n        destroy: function() {\n          module.verbose('Destroying previous progress for', $module);\n          clearInterval(instance.interval);\n          module.remove.state();\n          $module.removeData(moduleNamespace);\n          instance = undefined;\n        },\n\n        reset: function() {\n          module.set.percent(0);\n          module.set.value(0);\n        },\n\n        complete: function() {\n          if(module.percent === undefined || module.percent < 100) {\n            module.set.percent(100);\n          }\n        },\n\n        read: {\n          metadata: function() {\n            var\n              data = {\n                percent : $module.data(metadata.percent),\n                total   : $module.data(metadata.total),\n                value   : $module.data(metadata.value)\n              }\n            ;\n            if(data.percent) {\n              module.debug('Current percent value set from metadata', data.percent);\n              module.set.percent(data.percent);\n            }\n            if(data.total) {\n              module.debug('Total value set from metadata', data.total);\n              module.set.total(data.total);\n            }\n            if(data.value) {\n              module.debug('Current value set from metadata', data.value);\n              module.set.value(data.value);\n              module.set.progress(data.value);\n            }\n          },\n          settings: function() {\n            if(settings.total !== false) {\n              module.debug('Current total set in settings', settings.total);\n              module.set.total(settings.total);\n            }\n            if(settings.value !== false) {\n              module.debug('Current value set in settings', settings.value);\n              module.set.value(settings.value);\n              module.set.progress(module.value);\n            }\n            if(settings.percent !== false) {\n              module.debug('Current percent set in settings', settings.percent);\n              module.set.percent(settings.percent);\n            }\n          }\n        },\n\n        increment: function(incrementValue) {\n          var\n            maxValue,\n            startValue,\n            newValue\n          ;\n          if( module.has.total() ) {\n            startValue     = module.get.value();\n            incrementValue = incrementValue || 1;\n\n            newValue       = startValue + incrementValue;\n            maxValue       = module.get.total();\n\n            module.debug('Incrementing value', startValue, newValue, maxValue);\n            if(newValue > maxValue ) {\n              module.debug('Value cannot increment above total', maxValue);\n              newValue = maxValue;\n            }\n          }\n          else {\n            startValue     = module.get.percent();\n            incrementValue = incrementValue || module.get.randomValue();\n\n            newValue       = startValue + incrementValue;\n            maxValue       = 100;\n\n            module.debug('Incrementing percentage by', startValue, newValue);\n            if(newValue > maxValue ) {\n              module.debug('Value cannot increment above 100 percent');\n              newValue = maxValue;\n            }\n          }\n          module.set.progress(newValue);\n        },\n        decrement: function(decrementValue) {\n          var\n            total     = module.get.total(),\n            startValue,\n            newValue\n          ;\n          if(total) {\n            startValue     =  module.get.value();\n            decrementValue =  decrementValue || 1;\n            newValue       =  startValue - decrementValue;\n            module.debug('Decrementing value by', decrementValue, startValue);\n          }\n          else {\n            startValue     =  module.get.percent();\n            decrementValue =  decrementValue || module.get.randomValue();\n            newValue       =  startValue - decrementValue;\n            module.debug('Decrementing percentage by', decrementValue, startValue);\n          }\n\n          if(newValue < 0) {\n            module.debug('Value cannot decrement below 0');\n            newValue = 0;\n          }\n          module.set.progress(newValue);\n        },\n\n        has: {\n          total: function() {\n            return (module.get.total() !== false);\n          }\n        },\n\n        get: {\n          text: function(templateText) {\n            var\n              value   = module.value                || 0,\n              total   = module.total                || 0,\n              percent = (animating)\n                ? module.get.displayPercent()\n                : module.percent || 0,\n              left = (module.total > 0)\n                ? (total - value)\n                : (100 - percent)\n            ;\n            templateText = templateText || '';\n            templateText = templateText\n              .replace('{value}', value)\n              .replace('{total}', total)\n              .replace('{left}', left)\n              .replace('{percent}', percent)\n            ;\n            module.debug('Adding variables to progress bar text', templateText);\n            return templateText;\n          },\n\n\n          randomValue: function() {\n            module.debug('Generating random increment percentage');\n            return Math.floor((Math.random() * settings.random.max) + settings.random.min);\n          },\n\n          numericValue: function(value) {\n            return (typeof value === 'string')\n              ? (value.replace(/[^\\d.]/g, '') !== '')\n                ? +(value.replace(/[^\\d.]/g, ''))\n                : false\n              : value\n            ;\n          },\n\n          transitionEnd: function() {\n            var\n              element     = document.createElement('element'),\n              transitions = {\n                'transition'       :'transitionend',\n                'OTransition'      :'oTransitionEnd',\n                'MozTransition'    :'transitionend',\n                'WebkitTransition' :'webkitTransitionEnd'\n              },\n              transition\n            ;\n            for(transition in transitions){\n              if( element.style[transition] !== undefined ){\n                return transitions[transition];\n              }\n            }\n          },\n\n          // gets current displayed percentage (if animating values this is the intermediary value)\n          displayPercent: function() {\n            var\n              barWidth       = $bar.width(),\n              totalWidth     = $module.width(),\n              minDisplay     = parseInt($bar.css('min-width'), 10),\n              displayPercent = (barWidth > minDisplay)\n                ? (barWidth / totalWidth * 100)\n                : module.percent\n            ;\n            return (settings.precision > 0)\n              ? Math.round(displayPercent * (10 * settings.precision)) / (10 * settings.precision)\n              : Math.round(displayPercent)\n            ;\n          },\n\n          percent: function() {\n            return module.percent || 0;\n          },\n          value: function() {\n            return module.value || 0;\n          },\n          total: function() {\n            return module.total || false;\n          }\n        },\n\n        is: {\n          success: function() {\n            return $module.hasClass(className.success);\n          },\n          warning: function() {\n            return $module.hasClass(className.warning);\n          },\n          error: function() {\n            return $module.hasClass(className.error);\n          },\n          active: function() {\n            return $module.hasClass(className.active);\n          },\n          visible: function() {\n            return $module.is(':visible');\n          }\n        },\n\n        remove: {\n          state: function() {\n            module.verbose('Removing stored state');\n            delete module.total;\n            delete module.percent;\n            delete module.value;\n          },\n          active: function() {\n            module.verbose('Removing active state');\n            $module.removeClass(className.active);\n          },\n          success: function() {\n            module.verbose('Removing success state');\n            $module.removeClass(className.success);\n          },\n          warning: function() {\n            module.verbose('Removing warning state');\n            $module.removeClass(className.warning);\n          },\n          error: function() {\n            module.verbose('Removing error state');\n            $module.removeClass(className.error);\n          }\n        },\n\n        set: {\n          barWidth: function(value) {\n            if(value > 100) {\n              module.error(error.tooHigh, value);\n            }\n            else if (value < 0) {\n              module.error(error.tooLow, value);\n            }\n            else {\n              $bar\n                .css('width', value + '%')\n              ;\n              $module\n                .attr('data-percent', parseInt(value, 10))\n              ;\n            }\n          },\n          duration: function(duration) {\n            duration = duration || settings.duration;\n            duration = (typeof duration == 'number')\n              ? duration + 'ms'\n              : duration\n            ;\n            module.verbose('Setting progress bar transition duration', duration);\n            $bar\n              .css({\n                'transition-duration':  duration\n              })\n            ;\n          },\n          percent: function(percent) {\n            percent = (typeof percent == 'string')\n              ? +(percent.replace('%', ''))\n              : percent\n            ;\n            // round display percentage\n            percent = (settings.precision > 0)\n              ? Math.round(percent * (10 * settings.precision)) / (10 * settings.precision)\n              : Math.round(percent)\n            ;\n            module.percent = percent;\n            if( !module.has.total() ) {\n              module.value = (settings.precision > 0)\n                ? Math.round( (percent / 100) * module.total * (10 * settings.precision)) / (10 * settings.precision)\n                : Math.round( (percent / 100) * module.total * 10) / 10\n              ;\n              if(settings.limitValues) {\n                module.value = (module.value > 100)\n                  ? 100\n                  : (module.value < 0)\n                    ? 0\n                    : module.value\n                ;\n              }\n            }\n            module.set.barWidth(percent);\n            module.set.labelInterval();\n            module.set.labels();\n            settings.onChange.call(element, percent, module.value, module.total);\n          },\n          labelInterval: function() {\n            var\n              animationCallback = function() {\n                module.verbose('Bar finished animating, removing continuous label updates');\n                clearInterval(module.interval);\n                animating = false;\n                module.set.labels();\n              }\n            ;\n            clearInterval(module.interval);\n            $bar.one(transitionEnd + eventNamespace, animationCallback);\n            module.timer = setTimeout(animationCallback, settings.duration + 100);\n            animating = true;\n            module.interval = setInterval(module.set.labels, settings.framerate);\n          },\n          labels: function() {\n            module.verbose('Setting both bar progress and outer label text');\n            module.set.barLabel();\n            module.set.state();\n          },\n          label: function(text) {\n            text = text || '';\n            if(text) {\n              text = module.get.text(text);\n              module.debug('Setting label to text', text);\n              $label.text(text);\n            }\n          },\n          state: function(percent) {\n            percent = (percent !== undefined)\n              ? percent\n              : module.percent\n            ;\n            if(percent === 100) {\n              if(settings.autoSuccess && !(module.is.warning() || module.is.error())) {\n                module.set.success();\n                module.debug('Automatically triggering success at 100%');\n              }\n              else {\n                module.verbose('Reached 100% removing active state');\n                module.remove.active();\n              }\n            }\n            else if(percent > 0) {\n              module.verbose('Adjusting active progress bar label', percent);\n              module.set.active();\n            }\n            else {\n              module.remove.active();\n              module.set.label(settings.text.active);\n            }\n          },\n          barLabel: function(text) {\n            if(text !== undefined) {\n              $progress.text( module.get.text(text) );\n            }\n            else if(settings.label == 'ratio' && module.total) {\n              module.debug('Adding ratio to bar label');\n              $progress.text( module.get.text(settings.text.ratio) );\n            }\n            else if(settings.label == 'percent') {\n              module.debug('Adding percentage to bar label');\n              $progress.text( module.get.text(settings.text.percent) );\n            }\n          },\n          active: function(text) {\n            text = text || settings.text.active;\n            module.debug('Setting active state');\n            if(settings.showActivity && !module.is.active() ) {\n              $module.addClass(className.active);\n            }\n            module.remove.warning();\n            module.remove.error();\n            module.remove.success();\n            if(text) {\n              module.set.label(text);\n            }\n            settings.onActive.call(element, module.value, module.total);\n          },\n          success : function(text) {\n            text = text || settings.text.success;\n            module.debug('Setting success state');\n            $module.addClass(className.success);\n            module.remove.active();\n            module.remove.warning();\n            module.remove.error();\n            module.complete();\n            if(text) {\n              module.set.label(text);\n            }\n            settings.onSuccess.call(element, module.total);\n          },\n          warning : function(text) {\n            text = text || settings.text.warning;\n            module.debug('Setting warning state');\n            $module.addClass(className.warning);\n            module.remove.active();\n            module.remove.success();\n            module.remove.error();\n            module.complete();\n            if(text) {\n              module.set.label(text);\n            }\n            settings.onWarning.call(element, module.value, module.total);\n          },\n          error : function(text) {\n            text = text || settings.text.error;\n            module.debug('Setting error state');\n            $module.addClass(className.error);\n            module.remove.active();\n            module.remove.success();\n            module.remove.warning();\n            module.complete();\n            if(text) {\n              module.set.label(text);\n            }\n            settings.onError.call(element, module.value, module.total);\n          },\n          transitionEvent: function() {\n            transitionEnd = module.get.transitionEnd();\n          },\n          total: function(totalValue) {\n            module.total = totalValue;\n          },\n          value: function(value) {\n            module.value = value;\n          },\n          progress: function(value) {\n            var\n              numericValue = module.get.numericValue(value),\n              percentComplete\n            ;\n            if(numericValue === false) {\n              module.error(error.nonNumeric, value);\n            }\n            if( module.has.total() ) {\n              module.set.value(numericValue);\n              percentComplete = (numericValue / module.total) * 100;\n              module.debug('Calculating percent complete from total', percentComplete);\n              module.set.percent( percentComplete );\n            }\n            else {\n              percentComplete = numericValue;\n              module.debug('Setting value to exact percentage value', percentComplete);\n              module.set.percent( percentComplete );\n            }\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n          module.error.apply(console, arguments);\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.progress.settings = {\n\n  name         : 'Progress',\n  namespace    : 'progress',\n\n  debug        : false,\n  verbose      : false,\n  performance  : true,\n\n  random       : {\n    min : 2,\n    max : 5\n  },\n\n  duration     : 300,\n\n  autoSuccess  : true,\n  showActivity : true,\n  limitValues  : true,\n\n  label        : 'percent',\n  precision    : 0,\n  framerate    : (1000 / 30), /// 30 fps\n\n  percent      : false,\n  total        : false,\n  value        : false,\n\n  onChange     : function(percent, value, total){},\n  onSuccess    : function(total){},\n  onActive     : function(value, total){},\n  onError      : function(value, total){},\n  onWarning    : function(value, total){},\n\n  error    : {\n    method     : 'The method you called is not defined.',\n    nonNumeric : 'Progress value is non numeric',\n    tooHigh    : 'Value specified is above 100%',\n    tooLow     : 'Value specified is below 0%'\n  },\n\n  regExp: {\n    variable: /\\{\\$*[A-z0-9]+\\}/g\n  },\n\n  metadata: {\n    percent : 'percent',\n    total   : 'total',\n    value   : 'value'\n  },\n\n  selector : {\n    bar      : '> .bar',\n    label    : '> .label',\n    progress : '.bar > .progress'\n  },\n\n  text : {\n    active  : false,\n    error   : false,\n    success : false,\n    warning : false,\n    percent : '{percent}%',\n    ratio   : '{value} of {total}'\n  },\n\n  className : {\n    active  : 'active',\n    error   : 'error',\n    success : 'success',\n    warning : 'warning'\n  }\n\n};\n\n\n})( jQuery, window, document );"]},"sourceType":"script","hash":"a03e054fe7abe15f6233bd1a5aa2c2e3de9d8daa"}
