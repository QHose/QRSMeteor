{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"packages/ddp-client/test/stub_stream.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/ddp-client/test/stub_stream.js","filename":"packages/ddp-client/test/stub_stream.js","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/martijn/Documents/GitHub/QRSMeteor","root":"/home/martijn/Documents/GitHub/QRSMeteor","generatorOpts":{"filename":"packages/ddp-client/test/stub_stream.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/ddp-client/test/stub_stream.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nStubStream = function () {\n  var self = this;\n  self.sent = [];\n  self.callbacks = Object.create(null);\n};\n\n_.extend(StubStream.prototype, {\n  // Methods from Stream\n  on: function (name, callback) {\n    var self = this;\n    if (!self.callbacks[name]) self.callbacks[name] = [callback];else self.callbacks[name].push(callback);\n  },\n  send: function (data) {\n    var self = this;\n    self.sent.push(data);\n  },\n  status: function () {\n    return {\n      status: 'connected',\n      fake: true\n    };\n  },\n  reconnect: function () {// no-op\n  },\n  _lostConnection: function () {// no-op\n  },\n  // Methods for tests\n  receive: function (data) {\n    var self = this;\n\n    if ((0, _typeof2.default)(data) === 'object') {\n      data = EJSON.stringify(data);\n    }\n\n    _.each(self.callbacks['message'], function (cb) {\n      cb(data);\n    });\n  },\n  reset: function () {\n    var self = this;\n\n    _.each(self.callbacks['reset'], function (cb) {\n      cb();\n    });\n  },\n  // Provide a tag to detect stub streams.\n  // We don't log heartbeat failures on stub streams, for example.\n  _isStub: true\n});","map":{"version":3,"sources":["packages/ddp-client/test/stub_stream.js"],"names":["StubStream","self","sent","callbacks","Object","create","_","extend","prototype","on","name","callback","push","send","data","status","fake","reconnect","_lostConnection","receive","EJSON","stringify","each","cb","reset","_isStub"],"mappings":";;;;AAAAA,aAAa,YAAW;AACtB,MAAIC,OAAO,IAAX;AAEAA,OAAKC,IAAL,GAAY,EAAZ;AACAD,OAAKE,SAAL,GAAiBC,OAAOC,MAAP,CAAc,IAAd,CAAjB;AACD,CALD;;AAOAC,EAAEC,MAAF,CAASP,WAAWQ,SAApB,EAA+B;AAC7B;AACAC,MAAI,UAASC,IAAT,EAAeC,QAAf,EAAyB;AAC3B,QAAIV,OAAO,IAAX;AAEA,QAAI,CAACA,KAAKE,SAAL,CAAeO,IAAf,CAAL,EAA2BT,KAAKE,SAAL,CAAeO,IAAf,IAAuB,CAACC,QAAD,CAAvB,CAA3B,KACKV,KAAKE,SAAL,CAAeO,IAAf,EAAqBE,IAArB,CAA0BD,QAA1B;AACN,GAP4B;AAS7BE,QAAM,UAASC,IAAT,EAAe;AACnB,QAAIb,OAAO,IAAX;AACAA,SAAKC,IAAL,CAAUU,IAAV,CAAeE,IAAf;AACD,GAZ4B;AAc7BC,UAAQ,YAAW;AACjB,WAAO;AAAEA,cAAQ,WAAV;AAAuBC,YAAM;AAA7B,KAAP;AACD,GAhB4B;AAkB7BC,aAAW,YAAW,CACpB;AACD,GApB4B;AAsB7BC,mBAAiB,YAAW,CAC1B;AACD,GAxB4B;AA0B7B;AACAC,WAAS,UAASL,IAAT,EAAe;AACtB,QAAIb,OAAO,IAAX;;AAEA,QAAI,sBAAOa,IAAP,MAAgB,QAApB,EAA8B;AAC5BA,aAAOM,MAAMC,SAAN,CAAgBP,IAAhB,CAAP;AACD;;AAEDR,MAAEgB,IAAF,CAAOrB,KAAKE,SAAL,CAAe,SAAf,CAAP,EAAkC,UAASoB,EAAT,EAAa;AAC7CA,SAAGT,IAAH;AACD,KAFD;AAGD,GArC4B;AAuC7BU,SAAO,YAAW;AAChB,QAAIvB,OAAO,IAAX;;AACAK,MAAEgB,IAAF,CAAOrB,KAAKE,SAAL,CAAe,OAAf,CAAP,EAAgC,UAASoB,EAAT,EAAa;AAC3CA;AACD,KAFD;AAGD,GA5C4B;AA8C7B;AACA;AACAE,WAAS;AAhDoB,CAA/B","sourcesContent":["StubStream = function() {\n  var self = this;\n\n  self.sent = [];\n  self.callbacks = Object.create(null);\n};\n\n_.extend(StubStream.prototype, {\n  // Methods from Stream\n  on: function(name, callback) {\n    var self = this;\n\n    if (!self.callbacks[name]) self.callbacks[name] = [callback];\n    else self.callbacks[name].push(callback);\n  },\n\n  send: function(data) {\n    var self = this;\n    self.sent.push(data);\n  },\n\n  status: function() {\n    return { status: 'connected', fake: true };\n  },\n\n  reconnect: function() {\n    // no-op\n  },\n\n  _lostConnection: function() {\n    // no-op\n  },\n\n  // Methods for tests\n  receive: function(data) {\n    var self = this;\n\n    if (typeof data === 'object') {\n      data = EJSON.stringify(data);\n    }\n\n    _.each(self.callbacks['message'], function(cb) {\n      cb(data);\n    });\n  },\n\n  reset: function() {\n    var self = this;\n    _.each(self.callbacks['reset'], function(cb) {\n      cb();\n    });\n  },\n\n  // Provide a tag to detect stub streams.\n  // We don't log heartbeat failures on stub streams, for example.\n  _isStub: true\n});\n"]},"sourceType":"script","hash":"8fd695220c06da73a4fe37d8a69a1dc2c0e9a53c"}
