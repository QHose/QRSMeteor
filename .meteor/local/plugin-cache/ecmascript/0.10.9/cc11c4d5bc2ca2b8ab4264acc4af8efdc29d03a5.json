{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/ui/slideGenerator/slides.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/ui/slideGenerator/slides.js","filename":"imports/ui/slideGenerator/slides.js","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/martijn/Documents/GitHub/QRSMeteor","root":"/home/martijn/Documents/GitHub/QRSMeteor","presets":[],"generatorOpts":{"filename":"imports/ui/slideGenerator/slides.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/slideGenerator/slides.js"}},"code":"module.export({\n  Reveal: () => Reveal,\n  MenuItems: () => MenuItems,\n  ChapterItems: () => ChapterItems,\n  normalizeAndSortData: () => normalizeAndSortData\n});\nlet MicroModal;\nmodule.watch(require(\"micromodal\"), {\n  default(v) {\n    MicroModal = v;\n  }\n\n}, 0);\nmodule.watch(require(\"./reveal.css\"));\nmodule.watch(require(\"./helper.css\"));\nlet lodash;\nmodule.watch(require(\"lodash\"), {\n  default(v) {\n    lodash = v;\n  }\n\n}, 1);\nlet hljs;\nmodule.watch(require(\"highlight.js\"), {\n  default(v) {\n    hljs = v;\n  }\n\n}, 2);\nlet Logger;\nmodule.watch(require(\"/imports/api/logger\"), {\n  Logger(v) {\n    Logger = v;\n  }\n\n}, 3);\nlet getSlideGenApp, getLevel1, getSubjectArea;\nmodule.watch(require(\"/imports/ui/useCases/useCaseSelection\"), {\n  getSlideGenApp(v) {\n    getSlideGenApp = v;\n  },\n\n  getLevel1(v) {\n    getLevel1 = v;\n  },\n\n  getSubjectArea(v) {\n    getSubjectArea = v;\n  }\n\n}, 4);\nlet selectInSense;\nmodule.watch(require(\"/imports/ui/nav\"), {\n  selectInSense(v) {\n    selectInSense = v;\n  }\n\n}, 5);\nmodule.watch(require(\"./slideSelectionSheet\"));\n\nvar Reveal = require(\"reveal.js\");\n\n// import { fill } from 'core-js/core/array';\n_ = lodash;\n\nvar Cookies = require(\"js-cookie\");\n\nvar showdown = require(\"showdown\");\n\nshowdown.setFlavor('github');\nvar converter = new showdown.Converter({\n  tables: true,\n  openLinksInNewWindow: true\n});\n\nvar marked = require('marked'); // console.log(converter.getOptions());\n\n\nvar numberOfActiveSlides = 10;\nconst MenuItems = new Mongo.Collection(null);\nconst ChapterItems = new Mongo.Collection(null);\n//\n// ─── SLIDES ─────────────────────────────────────────────────────────────────────\n//\n// console.log('SHOWDOWN SETTINGS: ', showdown.getDefaultOptions());\nTemplate.registerHelper('chapterSlide', function (currentRow) {\n  if (typeof currentRow === 'string') {\n    //we got a chapter slide        \n    return true;\n  }\n});\nTemplate.slides.onCreated(function () {\n  return Promise.asyncApply(() => {\n    Promise.await(populateNavMenuItems());\n    $(\"body\").css({\n      overflow: \"overlay\"\n    });\n  });\n});\nTemplate.slideShareModal.onRendered(function () {\n  try {\n    MicroModal.init({\n      awaitCloseAnimation: true,\n      // set to false, to remove close animation\n      onShow: function (modal) {\n        console.log(\"micromodal open\");\n        addModalContentHeight('short');\n        var link = document.getElementById(\"shareRef\");\n        const range = document.createRange();\n        range.selectNode(link);\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n        document.execCommand('copy');\n        /**************************\n          For full screen scrolling modal, \n          uncomment line below & comment line above\n         **************************/\n        // addModalContentHeight('tall');               \n      },\n      onClose: function (modal) {// console.log(\"micromodal close\");\n      }\n    });\n  } catch (e) {// console.log(\"micromodal error: \", e);\n  }\n});\nTemplate.slide.onCreated(function () {\n  return Promise.asyncApply(() => {\n    Promise.await(populateChapters());\n  });\n});\n\nfunction populateChapters() {\n  return Promise.asyncApply(() => {\n    var qix = Promise.await(getSlideGenApp());\n    var items = Promise.await(getLevel1(qix));\n    ChapterItems.remove({}); //insert items in a collection\n\n    for (const item of items) {\n      ChapterItems.insert(item[0]);\n    }\n  });\n}\n\n;\nTemplate.slides.onRendered(function () {\n  return Promise.asyncApply(() => {\n    initializeReveal();\n    Reveal.sync();\n    this.$(\".reveal\").removeAttr(\"role\"); //removed to comply with WCAG 4.1.2\n  });\n});\nTemplate.chapters.events({\n  \"click a\": function (event, template) {\n    return Promise.asyncApply(() => {\n      var menuItem = event.currentTarget.id;\n      Session.set(\"currentChapter\", menuItem);\n      console.log('make selection in chapter based on id: ' + menuItem);\n      Promise.await(selectInSense('Level 1', menuItem));\n    });\n  }\n});\n\nfunction populateNavMenuItems() {\n  return Promise.asyncApply(() => {\n    var qix = Promise.await(getSlideGenApp());\n    var items = Promise.await(getSubjectArea(qix));\n    MenuItems.remove({}); //insert items in a collection\n\n    for (const item of items) {\n      MenuItems.insert(item[0]);\n    }\n  });\n}\n\n;\n\nfunction addSlideChangedListener() {\n  // console.log('!!!!!!!!!!!!! addSlideChangedListener')\n  Reveal.addEventListener(\"slidechanged\", function (evt) {\n    Session.set(\"activeStepNr\", evt.indexh);\n    setTimeout(function () {\n      $(\".ui.embed\").embed();\n    }, 200); //set html title    \n\n    document.title = $(\".present h1\").text();\n  });\n} //\n// ─── SLIDE CONTENT ──────────────────────────────────────────────────────────────────────\n//\n\n\nTemplate.slideContent.onCreated(function () {\n  return Promise.asyncApply(() => {\n    var instance = this;\n    instance.bullets = new ReactiveVar([]); //https://stackoverflow.com/questions/35047101/how-do-i-access-the-data-context-and-the-template-instance-in-each-case-event\n\n    instance.comment = new ReactiveVar([]);\n    instance.level2 = new ReactiveVar([]); //the header and sub header for which we want to load the slide data/bullets\n\n    var level1 = Template.currentData().slide[0].qText;\n    var level2 = Template.currentData().slide[1].qText;\n    instance.level2.set(level2); // and now let's get the slide content:\n\n    instance.bullets.set(Promise.await(getLevel3(level1, level2))); //get the comment of the page\n\n    instance.comment.set(Promise.await(getComment(level1, level2)));\n  });\n});\nTemplate.slideContent.helpers({\n  bullets: function () {\n    return Template.instance().bullets.get();\n  },\n  comment: function () {\n    var comment = Template.instance().comment.get();\n    if (comment.length > 10) return createCommentBox(comment);\n  }\n});\nTemplate.slideContent.onRendered(function () {\n  return Promise.asyncApply(() => {\n    var template = this; // this.$(\"a:first\").css.focus()\n\n    this.$(\"a:first\").attr(\"id\", \"maincontent\"); //if the slide is shown, log it into the database\n\n    Logger.insert({\n      userId: Meteor.userId,\n      role: Cookies.get(\"currentMainRole\"),\n      userProfile: Meteor.user(),\n      website: location.href,\n      counter: 1,\n      eventType: \"slideRendered\",\n      topic: this.data.slide[0].qText,\n      slide: this.data.slide[1].qText,\n      currentSlideNr: Reveal.getIndices().h,\n      slidesContainedInSelection: $(\".slide\").length,\n      viewDate: new Date() // current time\n\n    });\n    Meteor.setTimeout(function () {\n      //make sure all code gets highlighted using highlight.js\n      // template.$(\"pre code\").each(function (i, block) {\n      //     hljs.highlightBlock(block);\n      // });\n      //ensure all links open on a new tab\n      template.$('a[href^=\"http://\"], a[href^=\"https://\"]').attr(\"target\", \"_blank\"); //convert all h1 to h3 headers for accessibility reasons\n\n      template.$('.slideContent .zBullet h1').replaceWith(function () {\n        return $(\"<h3>\", {\n          \"class\": this.className,\n          \"html\": $(this).html()\n        });\n      });\n      template.$('.slideContent .zBullet h2').replaceWith(function () {\n        return $(\"<h4>\", {\n          \"class\": this.className,\n          \"html\": $(this).html()\n        });\n      });\n      $('.commentBox h1').replaceWith(function () {\n        return $(\"<h4>\", {\n          \"class\": this.className,\n          \"html\": $(this).html()\n        });\n      });\n      $('.commentBox h2').replaceWith(function () {\n        return $(\"<h5>\", {\n          \"class\": this.className,\n          \"html\": $(this).html()\n        });\n      });\n      this.$('img').not('.ui.image').addClass('ui image');\n    }, 2000);\n  });\n});\nTemplate.slideContent.events({\n  \"click a\": function (e, t) {\n    e.stopPropagation();\n    Logger.insert({\n      userId: Meteor.userId,\n      userProfile: Meteor.user(),\n      role: Cookies.get(\"currentMainRole\"),\n      counter: 1,\n      eventType: \"linkClick\",\n      topic: Template.parentData(1).slide[0].qText,\n      slide: Template.parentData(1).slide[1].qText,\n      linkName: e.currentTarget.innerText,\n      linkSource: e.target.baseURI,\n      viewDate: new Date() // current time\n\n    });\n  }\n}); //\n// ─── HELPERS ────────────────────────────────────────────────────────────────────\n//\n\nTemplate.slides.helpers({\n  slideHeaders() {\n    return Session.get(\"slideHeaders\"); //only the level 1 and 2 colums, we need this for the headers of the slide\n  },\n\n  TableOfContentForChapter() {\n    var headers = Session.get(\"slideHeaders\"); //only the level 1 and 2 colums, we need this for the headers of the slide\n\n    var currentChapter = this.toString();\n    var toc = [];\n\n    if (headers) {\n      for (const element of headers) {\n        var level1 = element[0].qText;\n        var level2 = element[1].qText;\n\n        if (level1 === currentChapter) {\n          toc.push(level2);\n        }\n      }\n    }\n\n    return toc;\n  },\n\n  showSelector: function () {\n    return Session.get(\"showSelector\");\n  },\n  showSubjectAreaIntroduction: function () {\n    return Session.get(\"showSubjectAreaIntroduction\");\n  },\n\n  subjectAreas() {\n    var items = MenuItems.find({});\n    return items;\n  }\n\n});\nTemplate.registerHelper('presentationName', function (object) {\n  return Cookies.get(\"currentMainRole\");\n});\nTemplate.registerHelper('currentSubjectArea', function (object) {\n  return Session.get(\"currentSubjectArea\");\n});\nTemplate.slide.helpers({\n  active(slideNr) {\n    var activeSlide = Session.get(\"activeStepNr\") ? Session.get(\"activeStepNr\") : $(\".slide-number\").text();\n    var active = slideNr < activeSlide + numberOfActiveSlides && slideNr > activeSlide - numberOfActiveSlides;\n    return active;\n  }\n\n});\nTemplate.chapters.helpers({\n  chapters() {\n    var chapters = ChapterItems.find({});\n    return chapters;\n  },\n\n  active(chapter) {\n    chapter = chapter.qText; // console.log(\"🚀 ~ file: slides.js ~ line 303 ~ active ~ chapter\", chapter)\n\n    if (chapter === Session.get(\"currentChapter\")) {\n      return 'active';\n    }\n  }\n\n});\nTemplate.registerHelper('debug', function (object) {\n  console.log('td value: ', object); // return JSON.parse(object);\n});\nTemplate.slideShareModal.helpers({\n  shareLinkURL: function () {\n    var link = Session.get('shareLinkURL');\n    return link;\n  }\n});\nTemplate.registerHelper(\"level\", function (level, slide) {\n  level -= 1;\n  return slide[level].qText;\n});\nTemplate.registerHelper(\"step\", function () {\n  return Session.get(\"activeStepNr\");\n}); //\n// ─── FOR EACH SLIDE GET THE LEVEL 3 ITEMS USING SET ANALYSIS ────────────────────\n//\n\nfunction getLevel3(level1, level2) {\n  return Promise.asyncApply(() => {\n    try {\n      var qix = Promise.await(getSlideGenApp());\n      var sessionModel = Promise.await(qix.createSessionObject({\n        qInfo: {\n          qType: 'cube'\n        },\n        qHyperCubeDef: {\n          qDimensions: [{\n            qDef: {\n              qFieldDefs: [\"Level 3\"]\n            }\n          }, {\n            qDef: {\n              qFieldDefs: [\"CSVRowNo\"]\n            }\n          }],\n          qMeasures: [{\n            qDef: {\n              qDef: 'sum({< \"Level 1\"={\"' + level1 + '\"}, \"Level 2\"={\"' + level2 + '\"}>}1)'\n            }\n          }]\n        }\n      }));\n      sessionData = Promise.await(sessionModel.getHyperCubeData('/qHyperCubeDef', [{\n        qTop: 0,\n        qLeft: 0,\n        qWidth: 3,\n        qHeight: 3333\n      }]));\n      var level3Temp = sessionData[0].qMatrix;\n      sessionModel.removeAllListeners();\n      var sortedLevel3Bullets = normalizeAndSortData(level3Temp);\n      var newArray = [];\n\n      for (const item of sortedLevel3Bullets) {\n        newArray.push(Promise.await(convertToHTML(item, level2)));\n      }\n\n      return newArray;\n    } catch (error) {//error happens when you select something else after your selection... not a real error\n    }\n  });\n}\n\nfunction normalizeAndSortData(senseArray) {\n  var result = [];\n  senseArray.sort(compare);\n\n  for (const element of senseArray) {\n    result.push(element[0].qText);\n  }\n\n  return result;\n}\n\nfunction compare(a, b) {\n  if (a[1].qNum < b[1].qNum) {\n    return -1;\n  }\n\n  if (a[1].qNum > b[1].qNum) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction createCommentBox(text) {\n  // console.log('createCommentBox for text', text)\n  var textAfterCommentMarker = text.split(\"!comment\").pop();\n  var messagebox = `\n        <section class=\"commentBox\">\n            <div class=\"ui icon message\">\n            <i class=\"help icon\"></i>\n            <div class=\"content\">\n            <h3 class=\"header\">\n            Let's explain what we mean here...\n            </h3>\n            \n                 ` + marked.parse(textAfterCommentMarker) + `\n            </div>\n        </div>\n        </section>`; //select all text after the !comment... and print it in a nice text box\n\n  return messagebox;\n} //\n// ─── FOR EACH SLIDE GET THE COMMENT TEXT USING SET ANALYSIS ─────────────────────\n//\n\n\nfunction getComment(level1, level2) {\n  return Promise.asyncApply(() => {\n    var qix = Promise.await(getSlideGenApp());\n    var sessionModel = Promise.await(qix.createSessionObject({\n      qInfo: {\n        qType: \"cube\"\n      },\n      qHyperCubeDef: {\n        qDimensions: [{\n          qDef: {\n            qFieldDefs: [\"Comment\"]\n          }\n        }],\n        qMeasures: [{\n          qDef: {\n            qDef: 'sum({< \"Level 1\"={\"' + level1 + '\"}, \"Level 2\"={\"' + level2 + '\"} >}1)'\n          }\n        }]\n      }\n    }));\n    sessionData = Promise.await(sessionModel.getHyperCubeData(\"/qHyperCubeDef\", [{\n      qTop: 0,\n      qLeft: 0,\n      qWidth: 2,\n      qHeight: 1000\n    }]));\n    var comment = sessionData[0].qMatrix[0][0].qText;\n    return comment != \"null\" ? comment : \"\";\n  });\n}\n\nfunction normalizeAndSortData(senseArray) {\n  var result = [];\n  senseArray.sort(compare);\n  senseArray.forEach(element => {\n    result.push(element[0].qText);\n  });\n  return result;\n}\n\nfunction convertToHTML(text, level2) {\n  return Promise.asyncApply(() => {\n    // console.log('convertToHTML text', text)\n    var commentMarker = \"!comment\";\n    var embeddedImageMarker = `!embeddedImage`;\n    var altText = ''; //define image url\n\n    var split = text.indexOf('.') + 4;\n    var url = text.substr(0, split); //before . plus 4\n    // console.log('image url', url)\n    //check if alt text comment exists\n    //myimg.jpg my commment bla bla\n\n    altText = text.slice(text.indexOf('.') + 4).trim(); //after img extension\n    // console.log('IMAGE altText', altText)\n\n    if (altText.length < 2) {\n      altText = level2 + ' ' + text.substr(0, text.indexOf('.'));\n    } // console.log('image altText', altText)\n    //\n    // ─── YOUTUBE ────────────────────────────────────────────────────────────────────\n    //\n\n\n    if (containsYouTube(text)) {\n      var hasComment = text.trim().indexOf(' ');\n\n      if (hasComment < 0) {\n        altText = level2;\n      } else {\n        altText = text.slice(text.indexOf(' ') + 1).trim(); //after space\n      }\n\n      var url = text.split(\" \")[0]; //before space\n\n      var link = '<div class=\"zBullet\"> <a href=\"' + url + '\"> YouTube video: ' + altText + '</a> <br> </div>';\n      return link;\n    } //\n    // ─── IFRAME ─────────────────────────────────────────────────────────────────────\n    //\n    else if (text.startsWith(\"iframe \")) {\n        var urlWithDescription = text.substr(text.indexOf(\" \") + 1); //everything after iframe \n\n        var url = urlWithDescription.split(\" \")[0];\n        var description = text.substr(text.indexOf(\" \") + 1); //everything after iframe \n\n        return '<iframe  title=\"' + description + '\" src=\"' + url + '\"frameborder=\"0\"></iframe>';\n      } //\n      // ─── IMAGE ──────────────────────────────────────────────────────────────────────\n      // first check if alt text description is present\n      //\n      else if (checkTextIsImage(text) && text.includes(\"https://\")) {\n          return '<div class=\"ui container\"> <img alt=\"\" class=\"ui centered massive rounded bordered image\"  src=\"' + text + '\"/></div>';\n        } else if (checkTextIsImage(text)) {\n          return '<div class=\"ui container\"> <img alt=\"' + altText + '\" class=\"ui centered massive rounded bordered image\" src=\"images/' + url + '\"/></div>';\n        } else if (text.startsWith(embeddedImageMarker)) {\n          //embedded image in text\n          var textMarker = text.split(embeddedImageMarker).pop();\n          return '<div class=\"ui container\"><img class=\"ui massive rounded bordered image\"   style=\"width: 100%;\"  alt=\"Embedded Image\" src=\"data:image/png;base64,' + textMarker + '\"/> </div>';\n        } //\n        // ─── COMMENT ────────────────────────────────────────────────────────────────────\n        //\n        else if (text.startsWith(commentMarker)) {} //vertical slide with comments\n          //ignore, comments are added on another place\n          //\n          // ─── CUSTOM HTML ────────────────────────────────────────────────────────────────\n          //\n          else if (text.startsWith(\"<\")) {\n              //custom HTML\n              return text;\n            } //\n            // ─── TEXT TO BE CONVERTED TO VIA MARKDOWN ───────────────────────────────────────\n            //\n            else {\n                //text, convert the text (which can include markdown syntax) to valid HTML\n                var result = '';\n\n                if (text.endsWith('.md')) {\n                  //get content from external url on the server                \n                  result = Promise.await(Meteor.callPromise('getHTMLFromMarkdownUrl', text)); // return result;\n\n                  return '<div class=\"ui container\">' + result + \"</div>\";\n                } else {\n                  //convert it locally\n                  result = marked.parse(text);\n\n                  if (result.substring(1, 11) === \"blockquote\") {\n                    return '<div class=\"ui green segment\">' + result + \"</div>\";\n                  } else {\n                    return '<div class=\"zBullet\">' + result + \"<br> </div>\";\n                  }\n                }\n              }\n  });\n}\n\nfunction containsYouTube(target) {\n  var pattern = ['youtube.com', 'youtu.be'];\n  var value = 0;\n  pattern.forEach(function (word) {\n    value = value + target.includes(word);\n  }); //contains a string with youtube, but is not markdown, and not custom html...\n\n  return value === 1 && !target.startsWith(\"<\") && !target.startsWith(\"[\");\n}\n\nfunction checkTextIsImage(target) {\n  var pattern = ['.jpeg', '.jpg', '.svg', '.png', '.gif', '.ashx'];\n  var value = 0;\n  pattern.forEach(function (word) {\n    value = value + target.includes(word);\n  });\n  return value === 1;\n}\n/* -------------------------------------------------------------------------- */\n\n/*                                 init reveal                                */\n\n/* -------------------------------------------------------------------------- */\n\n\nfunction initializeReveal() {\n  if (!window.Reveal) {\n    try {\n      window.Reveal = Reveal;\n      console.log('initializeReveal', Reveal);\n      Reveal.initialize({\n        dependencies: [{\n          src: 'plugin/accessibility/helper.js',\n          async: true,\n          condition: function () {\n            return !!document.body.classList;\n          }\n        }],\n        // slide size\n        width: '100%',\n        height: '100%',\n        // Bounds for smallest/largest possible scale to apply to content\n        // minScale: 1,\n        // maxScale: 1,\n        // Factor of the display size that should remain empty around the content\n        margin: 0.1,\n        // Bounds for smallest/largest possible scale to apply to content\n        minScale: 0.2,\n        maxScale: 1.0,\n        // Display presentation control arrows\n        controls: true,\n        // Help the user learn the controls by providing hints, for example by\n        // bouncing the down arrow when they first encounter a vertical slide\n        controlsTutorial: true,\n        // Determines where controls appear, \"edges\" or \"bottom-right\"\n        controlsLayout: 'edges',\n        // Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n        // or \"visible\"\n        controlsBackArrows: 'visible',\n        // Display a presentation progress bar\n        progress: false,\n        // Display the page number of the current slide\n        slideNumber: true,\n        // Add the current slide number to the URL hash so that reloading the\n        // page/copying the URL will return you to the same slide\n        hash: false,\n        // Push each slide change to the browser history. Implies `hash: true`\n        history: false,\n        // Enable keyboard shortcuts for navigation\n        keyboard: true,\n        // Enable the slide overview mode\n        overview: true,\n        // Vertical centering of slides\n        center: false,\n        // Enables touch navigation on devices with touch input\n        touch: true,\n        // Loop the presentation\n        loop: false,\n        // Change the presentation direction to be RTL\n        rtl: false,\n        // See https://github.com/hakimel/reveal.js/#navigation-mode\n        navigationMode: 'default',\n        // Randomizes the order of slides each time the presentation loads\n        shuffle: false,\n        // Turns fragments on and off globally\n        fragments: false,\n        // Flags whether to include the current fragment in the URL,\n        // so that reloading brings you to the same fragment position\n        fragmentInURL: false,\n        // Flags if the presentation is running in an embedded mode,\n        // i.e. contained within a limited portion of the screen\n        embedded: true,\n        // Flags if we should show a help overlay when the questionmark\n        // key is pressed\n        help: true,\n        // Flags if speaker notes should be visible to all viewers\n        showNotes: false,\n        // Global override for autoplaying embedded media (video/audio/iframe)\n        // - null: Media will only autoplay if data-autoplay is present\n        // - true: All media will autoplay, regardless of individual setting\n        // - false: No media will autoplay, regardless of individual setting\n        autoPlayMedia: null,\n        // Global override for preloading lazy-loaded iframes\n        // - null: Iframes with data-src AND data-preload will be loaded when within\n        //   the viewDistance, iframes with only data-src will be loaded when visible\n        // - true: All iframes with data-src will be loaded when within the viewDistance\n        // - false: All iframes with data-src will be loaded only when visible\n        preloadIframes: null,\n        // Number of milliseconds between automatically proceeding to the\n        // next slide, disabled when set to 0, this value can be overwritten\n        // by using a data-autoslide attribute on your slides\n        autoSlide: 0,\n        // Stop auto-sliding after user input\n        autoSlideStoppable: true,\n        // Use this method for navigation when auto-sliding\n        autoSlideMethod: Reveal.navigateNext,\n        // Specify the average time in seconds that you think you will spend\n        // presenting each slide. This is used to show a pacing timer in the\n        // speaker view\n        defaultTiming: 120,\n        // Enable slide navigation via mouse wheel\n        mouseWheel: false,\n        // Hide cursor if inactive\n        hideInactiveCursor: true,\n        // Time before the cursor is hidden (in ms)\n        hideCursorTime: 5000,\n        // Hides the address bar on mobile devices\n        hideAddressBar: true,\n        // Opens links in an iframe preview overlay\n        // Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n        // individually\n        previewLinks: false,\n        // Transition style\n        transition: 'slide',\n        // none/fade/slide/convex/concave/zoom\n        // Transition speed\n        transitionSpeed: 'default',\n        // default/fast/slow\n        // Transition style for full page slide backgrounds\n        backgroundTransition: 'fade',\n        // none/fade/slide/convex/concave/zoom\n        // Number of slides away from the current that are visible, changing this causes scroll issues with iframes\n        viewDistance: 1,\n        // Parallax background image\n        parallaxBackgroundImage: '',\n        // e.g. \"'https://s3.amazonaws.com/hakim-static/reveal-js/reveal-parallax-1.jpg'\"\n        // Parallax background size\n        parallaxBackgroundSize: '',\n        // CSS syntax, e.g. \"2100px 900px\"\n        // Number of pixels to move the parallax background per slide\n        // - Calculated automatically unless specified\n        // - Set to 0 to disable movement along an axis\n        parallaxBackgroundHorizontal: null,\n        parallaxBackgroundVertical: null,\n        // The display mode that will be used to show slides\n        display: 'block'\n      });\n      Session.set(\"activeStepNr\", 0);\n      addSlideChangedListener();\n    } catch (error) {}\n  }\n}\n\nfunction addModalContentHeight(type) {\n  var type = arguments[0] != null ? arguments[0] : 'short';\n  var modalContainer = $(\"#modal-container\");\n  var modalHeader = $(\"#modal-header\");\n  var modalContentContent = $(\"#modal-content-content\");\n  var modalContent = $(\"#modal-content\");\n  var modalFooter = $(\"#modal-footer\");\n  var modalIsDefined = modalContainer.length && modalHeader.length && modalContent.length && modalFooter.length;\n\n  if (modalIsDefined) {\n    var modalContainerHeight = modalContainer.outerHeight();\n    var modalHeaderHeight = modalHeader.outerHeight();\n    var modalFooterHeight = modalFooter.outerHeight();\n    console.log(\"modalContainerHeight: \", modalContainerHeight);\n    console.log(\"modalHeaderHeight: \", modalHeaderHeight);\n    console.log(\"modalFooterHeight: \", modalFooterHeight);\n    var offset = 80;\n    var height = modalContainerHeight - (modalHeaderHeight + modalFooterHeight + offset);\n    console.log('height: ', height);\n\n    if (!isNaN(height)) {\n      height = height > 0 ? height : 20;\n\n      if (type == 'short') {\n        modalContent.css({\n          'height': height + 'px'\n        });\n      } else {\n        modalContainer.css({\n          'height': '100%',\n          'overflow-y': 'hidden',\n          'margin-top': '40px'\n        });\n        modalContentContent.css({\n          'height': '100%',\n          'overflow-y': 'auto'\n        });\n        modalContent.css({\n          'overflow-y': 'visible'\n        });\n        modalFooter.css({\n          'margin-bottom': '120px'\n        });\n      }\n\n      setTimeout(function () {\n        modalContent.css({\n          'display': 'block'\n        });\n        var modalContentDOM = document.querySelector('#modal-content');\n        modalContentDOM.scrollTop = 0;\n      });\n    }\n  }\n}","map":{"version":3,"sources":["imports/ui/slideGenerator/slides.js"],"names":["module","export","Reveal","MenuItems","ChapterItems","normalizeAndSortData","MicroModal","watch","require","default","v","lodash","hljs","Logger","getSlideGenApp","getLevel1","getSubjectArea","selectInSense","_","Cookies","showdown","setFlavor","converter","Converter","tables","openLinksInNewWindow","marked","numberOfActiveSlides","Mongo","Collection","Template","registerHelper","currentRow","slides","onCreated","populateNavMenuItems","$","css","overflow","slideShareModal","onRendered","init","awaitCloseAnimation","onShow","modal","console","log","addModalContentHeight","link","document","getElementById","range","createRange","selectNode","selection","window","getSelection","removeAllRanges","addRange","execCommand","onClose","e","slide","populateChapters","qix","items","remove","item","insert","initializeReveal","sync","removeAttr","chapters","events","event","template","menuItem","currentTarget","id","Session","set","addSlideChangedListener","addEventListener","evt","indexh","setTimeout","embed","title","text","slideContent","instance","bullets","ReactiveVar","comment","level2","level1","currentData","qText","getLevel3","getComment","helpers","get","length","createCommentBox","attr","userId","Meteor","role","userProfile","user","website","location","href","counter","eventType","topic","data","currentSlideNr","getIndices","h","slidesContainedInSelection","viewDate","Date","replaceWith","className","html","not","addClass","t","stopPropagation","parentData","linkName","innerText","linkSource","target","baseURI","slideHeaders","TableOfContentForChapter","headers","currentChapter","toString","toc","element","push","showSelector","showSubjectAreaIntroduction","subjectAreas","find","object","active","slideNr","activeSlide","chapter","shareLinkURL","level","sessionModel","createSessionObject","qInfo","qType","qHyperCubeDef","qDimensions","qDef","qFieldDefs","qMeasures","sessionData","getHyperCubeData","qTop","qLeft","qWidth","qHeight","level3Temp","qMatrix","removeAllListeners","sortedLevel3Bullets","newArray","convertToHTML","error","senseArray","result","sort","compare","a","b","qNum","textAfterCommentMarker","split","pop","messagebox","parse","forEach","commentMarker","embeddedImageMarker","altText","indexOf","url","substr","slice","trim","containsYouTube","hasComment","startsWith","urlWithDescription","description","checkTextIsImage","includes","textMarker","endsWith","callPromise","substring","pattern","value","word","initialize","dependencies","src","async","condition","body","classList","width","height","margin","minScale","maxScale","controls","controlsTutorial","controlsLayout","controlsBackArrows","progress","slideNumber","hash","history","keyboard","overview","center","touch","loop","rtl","navigationMode","shuffle","fragments","fragmentInURL","embedded","help","showNotes","autoPlayMedia","preloadIframes","autoSlide","autoSlideStoppable","autoSlideMethod","navigateNext","defaultTiming","mouseWheel","hideInactiveCursor","hideCursorTime","hideAddressBar","previewLinks","transition","transitionSpeed","backgroundTransition","viewDistance","parallaxBackgroundImage","parallaxBackgroundSize","parallaxBackgroundHorizontal","parallaxBackgroundVertical","display","type","arguments","modalContainer","modalHeader","modalContentContent","modalContent","modalFooter","modalIsDefined","modalContainerHeight","outerHeight","modalHeaderHeight","modalFooterHeight","offset","isNaN","modalContentDOM","querySelector","scrollTop"],"mappings":"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","sourcesContent":["export var Reveal = require(\"reveal.js\");\nimport MicroModal from 'micromodal';\nimport \"./reveal.css\";\nimport \"./helper.css\"; //accessibility plugin for reveal https://github.com/marcysutton/reveal-a11y\nimport lodash from \"lodash\";\nimport hljs from \"highlight.js\";\nimport { Logger } from \"/imports/api/logger\";\nimport { getSlideGenApp, getLevel1, getSubjectArea } from \"/imports/ui/useCases/useCaseSelection\";\nimport { selectInSense } from \"/imports/ui/nav\";\nimport \"./slideSelectionSheet\";\n// import { fill } from 'core-js/core/array';\n\n_ = lodash;\nvar Cookies = require(\"js-cookie\");\nvar showdown = require(\"showdown\");\nshowdown.setFlavor('github');\nvar converter = new showdown.Converter({tables:true, openLinksInNewWindow: true});\nvar marked = require('marked');\n// console.log(converter.getOptions());\nvar numberOfActiveSlides = 10;\nexport const MenuItems = new Mongo.Collection(null);\nexport const ChapterItems = new Mongo.Collection(null);\n\n//\n// ─── SLIDES ─────────────────────────────────────────────────────────────────────\n//\n\n// console.log('SHOWDOWN SETTINGS: ', showdown.getDefaultOptions());\n\nTemplate.registerHelper('chapterSlide', function (currentRow) {\n    if (typeof (currentRow) === 'string') { //we got a chapter slide        \n        return true\n    }\n});\n\nTemplate.slides.onCreated(async function () {\n    await populateNavMenuItems();\n\n    $(\"body\").css({\n        overflow: \"overlay\"\n    });\n});\n\nTemplate.slideShareModal.onRendered(function () {\n    try {\n        MicroModal.init({\n            awaitCloseAnimation: true, // set to false, to remove close animation\n            onShow: function (modal) {\n                console.log(\"micromodal open\");\n                addModalContentHeight('short');\n                var link = document.getElementById(\"shareRef\")\n                const range = document.createRange();\n                range.selectNode(link);\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n                document.execCommand('copy');\n                /**************************\n                  For full screen scrolling modal, \n                  uncomment line below & comment line above\n                 **************************/\n                // addModalContentHeight('tall');               \n            },\n            onClose: function (modal) {\n                // console.log(\"micromodal close\");\n            }\n        });\n    } catch (e) {\n        // console.log(\"micromodal error: \", e);\n    }\n\n});\n\n\n\n\nTemplate.slide.onCreated(async function () {\n    await populateChapters();\n});\n\n\nasync function populateChapters() {\n    var qix = await getSlideGenApp();\n    var items = await getLevel1(qix);\n\n    ChapterItems.remove({});\n    //insert items in a collection\n    for (const item of items) {\n        ChapterItems.insert(item[0]);\n    }\n};\n\nTemplate.slides.onRendered(async function () {\n    initializeReveal();\n    Reveal.sync();\n    this.$(\".reveal\").removeAttr(\"role\"); //removed to comply with WCAG 4.1.2\n});\n\n\nTemplate.chapters.events({\n    \"click a\": async function (event, template) {\n        var menuItem = event.currentTarget.id;\n        Session.set(\"currentChapter\", menuItem);\n        console.log('make selection in chapter based on id: ' + menuItem)\n        await selectInSense('Level 1', menuItem);\n    }\n});\n\n\nasync function populateNavMenuItems() {\n    var qix = await getSlideGenApp();\n    var items = await getSubjectArea(qix);\n\n    MenuItems.remove({});\n    //insert items in a collection\n    for (const item of items) {\n        MenuItems.insert(item[0]);\n    }\n};\n\nfunction addSlideChangedListener() {\n    // console.log('!!!!!!!!!!!!! addSlideChangedListener')\n    Reveal.addEventListener(\"slidechanged\", function (evt) {\n        Session.set(\"activeStepNr\", evt.indexh);\n        setTimeout(function () {\n            $(\".ui.embed\").embed();\n        }, 200)\n\n        //set html title    \n        document.title = $(\".present h1\").text()\n    });\n}\n\n//\n// ─── SLIDE CONTENT ──────────────────────────────────────────────────────────────────────\n//\nTemplate.slideContent.onCreated(async function () {\n    var instance = this;\n    instance.bullets = new ReactiveVar([]); //https://stackoverflow.com/questions/35047101/how-do-i-access-the-data-context-and-the-template-instance-in-each-case-event\n    instance.comment = new ReactiveVar([]);\n    instance.level2 = new ReactiveVar([]);\n\n    //the header and sub header for which we want to load the slide data/bullets\n    var level1 = Template.currentData().slide[0].qText;\n    var level2 = Template.currentData().slide[1].qText;\n    instance.level2.set(level2)\n    // and now let's get the slide content:\n    instance.bullets.set(await getLevel3(level1, level2));\n    //get the comment of the page\n    instance.comment.set(await getComment(level1, level2));\n});\n\nTemplate.slideContent.helpers({\n    bullets: function () {\n        return Template.instance().bullets.get();\n    },\n    comment: function () {\n        var comment = Template.instance().comment.get();\n        if (comment.length > 10) return createCommentBox(comment);\n    }\n});\n\nTemplate.slideContent.onRendered(async function () {\n    var template = this;\n\n    // this.$(\"a:first\").css.focus()\n    this.$(\"a:first\").attr(\"id\", \"maincontent\");\n\n\n    //if the slide is shown, log it into the database\n    Logger.insert({\n        userId: Meteor.userId,\n        role: Cookies.get(\"currentMainRole\"),\n        userProfile: Meteor.user(),\n        website: location.href,\n        counter: 1,\n        eventType: \"slideRendered\",\n        topic: this.data.slide[0].qText,\n        slide: this.data.slide[1].qText,\n        currentSlideNr: Reveal.getIndices().h,\n        slidesContainedInSelection: $(\".slide\").length,\n        viewDate: new Date() // current time\n    });\n\n    Meteor.setTimeout(function () {\n\n        //make sure all code gets highlighted using highlight.js\n        // template.$(\"pre code\").each(function (i, block) {\n        //     hljs.highlightBlock(block);\n        // });\n        //ensure all links open on a new tab\n        template.$('a[href^=\"http://\"], a[href^=\"https://\"]').attr(\"target\", \"_blank\");\n\n        //convert all h1 to h3 headers for accessibility reasons\n        template.$('.slideContent .zBullet h1').replaceWith(function () {\n            return $(\"<h3>\", {\n                \"class\": this.className,\n                \"html\": $(this).html()\n            });\n        });\n\n        template.$('.slideContent .zBullet h2').replaceWith(function () {\n            return $(\"<h4>\", {\n                \"class\": this.className,\n                \"html\": $(this).html()\n            });\n        });\n\n        $('.commentBox h1').replaceWith(function () {\n            return $(\"<h4>\", {\n                \"class\": this.className,\n                \"html\": $(this).html()\n            });\n        });\n\n        $('.commentBox h2').replaceWith(function () {\n            return $(\"<h5>\", {\n                \"class\": this.className,\n                \"html\": $(this).html()\n            });\n        });\n\n        this.$('img').not('.ui.image').addClass('ui image');\n\n    }, 2000);\n});\n\nTemplate.slideContent.events({\n    \"click a\": function (e, t) {\n        e.stopPropagation();\n        Logger.insert({\n            userId: Meteor.userId,\n            userProfile: Meteor.user(),\n            role: Cookies.get(\"currentMainRole\"),\n            counter: 1,\n            eventType: \"linkClick\",\n            topic: Template.parentData(1).slide[0].qText,\n            slide: Template.parentData(1).slide[1].qText,\n            linkName: e.currentTarget.innerText,\n            linkSource: e.target.baseURI,\n            viewDate: new Date() // current time\n        });\n    }\n});\n\n//\n// ─── HELPERS ────────────────────────────────────────────────────────────────────\n//\nTemplate.slides.helpers({\n    slideHeaders() {\n        return Session.get(\"slideHeaders\"); //only the level 1 and 2 colums, we need this for the headers of the slide\n    },\n    TableOfContentForChapter() {\n        var headers = Session.get(\"slideHeaders\"); //only the level 1 and 2 colums, we need this for the headers of the slide\n        var currentChapter = this.toString();\n        var toc = [];\n        if (headers) {\n            for (const element of headers) {\n                var level1 = element[0].qText;\n                var level2 = element[1].qText\n                if (level1 === currentChapter) {\n                    toc.push(level2)\n                }\n            }\n        }\n        return toc;\n    },\n    showSelector: function () {\n        return Session.get(\"showSelector\");\n    },\n    showSubjectAreaIntroduction: function () {\n        return Session.get(\"showSubjectAreaIntroduction\");\n    },\n    subjectAreas() {\n        var items = MenuItems.find({});\n        return items;\n    }\n});\n\nTemplate.registerHelper('presentationName', function (object) {\n    return Cookies.get(\"currentMainRole\");\n});\n\nTemplate.registerHelper('currentSubjectArea', function (object) {\n    return Session.get(\"currentSubjectArea\")\n});\n\n\nTemplate.slide.helpers({\n    active(slideNr) {\n        var activeSlide = Session.get(\"activeStepNr\") ? Session.get(\"activeStepNr\") : $(\".slide-number\").text();\n        var active =\n            slideNr < activeSlide + numberOfActiveSlides &&\n            slideNr > activeSlide - numberOfActiveSlides;\n        return active;\n    }\n});\n\n\nTemplate.chapters.helpers({\n    chapters() {\n        var chapters = ChapterItems.find({});\n        return chapters;\n    },\n    active(chapter) {\n        chapter = chapter.qText;\n        // console.log(\"🚀 ~ file: slides.js ~ line 303 ~ active ~ chapter\", chapter)\n        if (chapter === Session.get(\"currentChapter\")) {\n            return 'active'\n        }\n    }\n});\n\n\nTemplate.registerHelper('debug', function (object) {\n    console.log('td value: ', object)\n    // return JSON.parse(object);\n});\n\nTemplate.slideShareModal.helpers({\n    shareLinkURL: function () {\n        var link = Session.get('shareLinkURL')\n        return link;\n    }\n});\n\n\n\nTemplate.registerHelper(\"level\", function (level, slide) {\n    level -= 1;\n    return slide[level].qText;\n});\n\nTemplate.registerHelper(\"step\", function () {\n    return Session.get(\"activeStepNr\");\n});\n\n//\n// ─── FOR EACH SLIDE GET THE LEVEL 3 ITEMS USING SET ANALYSIS ────────────────────\n//\nasync function getLevel3(level1, level2) {\n\n    try {\n        var qix = await getSlideGenApp();\n        var sessionModel = await qix.createSessionObject({\n            qInfo: {\n                qType: 'cube'\n            },\n            qHyperCubeDef: {\n                qDimensions: [{\n                    qDef: {\n                        qFieldDefs: [\"Level 3\"]\n                    }\n                }, {\n                    qDef: {\n                        qFieldDefs: [\"CSVRowNo\"]\n                    }\n                }],\n                qMeasures: [{\n                    qDef: {\n                        qDef: 'sum({< \"Level 1\"={\"' +\n                            level1 +\n                            '\"}, \"Level 2\"={\"' +\n                            level2 +\n                            '\"}>}1)'\n                    }\n                }]\n            }\n        });\n        sessionData = await sessionModel.getHyperCubeData('/qHyperCubeDef', [{\n            qTop: 0,\n            qLeft: 0,\n            qWidth: 3,\n            qHeight: 3333\n        }]);\n\n        var level3Temp = sessionData[0].qMatrix;\n        sessionModel.removeAllListeners();\n\n        var sortedLevel3Bullets = normalizeAndSortData(level3Temp);\n\n        var newArray = [];\n\n        for (const item of sortedLevel3Bullets) {\n            newArray.push(await convertToHTML(item, level2));\n        }\n\n        return newArray;\n    } catch (error) {\n        //error happens when you select something else after your selection... not a real error\n    }\n\n}\n\nexport function normalizeAndSortData(senseArray) {\n    var result = [];\n    senseArray.sort(compare);\n\n    for (const element of senseArray) {\n        result.push(element[0].qText);\n    }\n    return result;\n}\n\nfunction compare(a, b) {\n    if (a[1].qNum < b[1].qNum) {\n        return -1;\n    }\n    if (a[1].qNum > b[1].qNum) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction createCommentBox(text) {\n    // console.log('createCommentBox for text', text)\n    var textAfterCommentMarker = text.split(\"!comment\").pop();\n    var messagebox =\n        `\n        <section class=\"commentBox\">\n            <div class=\"ui icon message\">\n            <i class=\"help icon\"></i>\n            <div class=\"content\">\n            <h3 class=\"header\">\n            Let's explain what we mean here...\n            </h3>\n            \n                 ` +\n        marked.parse(textAfterCommentMarker) +\n        `\n            </div>\n        </div>\n        </section>`; //select all text after the !comment... and print it in a nice text box\n\n    return messagebox;\n}\n\n//\n// ─── FOR EACH SLIDE GET THE COMMENT TEXT USING SET ANALYSIS ─────────────────────\n//\n\nasync function getComment(level1, level2) {\n    var qix = await getSlideGenApp();\n    var sessionModel = await qix.createSessionObject({\n        qInfo: {\n            qType: \"cube\"\n        },\n        qHyperCubeDef: {\n            qDimensions: [{\n                qDef: {\n                    qFieldDefs: [\"Comment\"]\n                }\n            }],\n            qMeasures: [{\n                qDef: {\n                    qDef: 'sum({< \"Level 1\"={\"' +\n                        level1 +\n                        '\"}, \"Level 2\"={\"' +\n                        level2 +\n                        '\"} >}1)'\n                }\n            }]\n        }\n    });\n    sessionData = await sessionModel.getHyperCubeData(\"/qHyperCubeDef\", [{\n        qTop: 0,\n        qLeft: 0,\n        qWidth: 2,\n        qHeight: 1000\n    }]);\n\n    var comment = sessionData[0].qMatrix[0][0].qText;\n    return comment != \"null\" ? comment : \"\";\n}\n\nfunction normalizeAndSortData(senseArray) {\n    var result = [];\n    senseArray.sort(compare);\n    senseArray.forEach(element => {\n        result.push(element[0].qText);\n    });\n    return result;\n}\n\nasync function convertToHTML(text, level2) {\n\n    // console.log('convertToHTML text', text)\n    var commentMarker = \"!comment\";\n    var embeddedImageMarker = `!embeddedImage`;\n    var altText = ''\n\n    //define image url\n    var split = text.indexOf('.') + 4;\n    var url = text.substr(0, split);  //before . plus 4\n    // console.log('image url', url)\n\n    //check if alt text comment exists\n    //myimg.jpg my commment bla bla\n    altText = text.slice(text.indexOf('.') + 4).trim(); //after img extension\n    // console.log('IMAGE altText', altText)\n\n    if (altText.length < 2) {\n        altText = level2 + ' ' + text.substr(0, text.indexOf('.'));\n    }\n    // console.log('image altText', altText)\n\n\n    //\n    // ─── YOUTUBE ────────────────────────────────────────────────────────────────────\n    //\n    if (containsYouTube(text)) {\n        var hasComment = text.trim().indexOf(' ');\n        if (hasComment < 0) {\n            altText = level2\n        } else {\n            altText = text.slice(text.indexOf(' ') + 1).trim(); //after space\n        }\n        var url = text.split(\" \")[0] //before space\n        var link = '<div class=\"zBullet\"> <a href=\"' + url + '\"> YouTube video: ' + altText + '</a> <br> </div>'\n        return link;\n    }\n\n    //\n    // ─── IFRAME ─────────────────────────────────────────────────────────────────────\n    //\n    else if (text.startsWith(\"iframe \")) {\n        var urlWithDescription = text.substr(text.indexOf(\" \") + 1); //everything after iframe \n        var url = urlWithDescription.split(\" \")[0]\n        var description = text.substr(text.indexOf(\" \") + 1); //everything after iframe \n\n        return (\n            '<iframe  title=\"' + description + '\" src=\"' +\n            url +\n            '\"frameborder=\"0\"></iframe>'\n        );\n    }\n\n    //\n    // ─── IMAGE ──────────────────────────────────────────────────────────────────────\n    // first check if alt text description is present\n    //\n    else if (checkTextIsImage(text) && text.includes(\"https://\")) {\n        return (\n            '<div class=\"ui container\"> <img alt=\"\" class=\"ui centered massive rounded bordered image\"  src=\"' +\n            text +\n            '\"/></div>'\n        );\n    } else if (checkTextIsImage(text)) {\n        return (\n            '<div class=\"ui container\"> <img alt=\"' + altText + '\" class=\"ui centered massive rounded bordered image\" src=\"images/' +\n            url +\n            '\"/></div>'\n        );\n    } else if (text.startsWith(embeddedImageMarker)) {\n        //embedded image in text\n        var textMarker = text.split(embeddedImageMarker).pop();\n        return (\n            '<div class=\"ui container\"><img class=\"ui massive rounded bordered image\"   style=\"width: 100%;\"  alt=\"Embedded Image\" src=\"data:image/png;base64,' +\n            textMarker +\n            '\"/> </div>'\n        );\n    }\n    //\n    // ─── COMMENT ────────────────────────────────────────────────────────────────────\n    //\n    else if (text.startsWith(commentMarker)) {\n        //vertical slide with comments\n        //ignore, comments are added on another place\n    }\n\n    //\n    // ─── CUSTOM HTML ────────────────────────────────────────────────────────────────\n    //\n    else if (text.startsWith(\"<\")) {\n        //custom HTML\n        return text;\n    }\n\n    //\n    // ─── TEXT TO BE CONVERTED TO VIA MARKDOWN ───────────────────────────────────────\n    //\n    else {\n        //text, convert the text (which can include markdown syntax) to valid HTML\n        var result = '';\n        if (text.endsWith('.md')) { //get content from external url on the server                \n            result = await Meteor.callPromise('getHTMLFromMarkdownUrl', text)\n            // return result;\n            return '<div class=\"ui container\">' + result + \"</div>\";\n        } else { //convert it locally\n            result = marked.parse(text);\n            if (result.substring(1, 11) === \"blockquote\") {\n                return '<div class=\"ui green segment\">' + result + \"</div>\";\n            } else {\n                return '<div class=\"zBullet\">' + result + \"<br> </div>\";\n            }\n        }\n    }\n}\n\n\nfunction containsYouTube(target) {\n    var pattern = ['youtube.com', 'youtu.be'];\n    var value = 0;\n    pattern.forEach(function (word) {\n        value = value + target.includes(word);\n    });\n    //contains a string with youtube, but is not markdown, and not custom html...\n    return (value === 1 && !target.startsWith(\"<\") && !target.startsWith(\"[\"))\n}\n\nfunction checkTextIsImage(target) {\n    var pattern = ['.jpeg', '.jpg', '.svg', '.png', '.gif', '.ashx'];\n    var value = 0;\n    pattern.forEach(function (word) {\n        value = value + target.includes(word);\n    });\n    return (value === 1)\n}\n\n/* -------------------------------------------------------------------------- */\n/*                                 init reveal                                */\n/* -------------------------------------------------------------------------- */\n\nfunction initializeReveal() {\n\n    if (!window.Reveal) {\n        try {\n            window.Reveal = Reveal;\n            console.log('initializeReveal', Reveal);\n\n            Reveal.initialize({\n                dependencies: [\n                    {\n                        src: 'plugin/accessibility/helper.js', async: true, condition: function () {\n                            return !!document.body.classList;\n                        }\n                    }],\n                // slide size\n                width: '100%',\n                height: '100%',\n                // Bounds for smallest/largest possible scale to apply to content\n                // minScale: 1,\n                // maxScale: 1,\n                // Factor of the display size that should remain empty around the content\n                margin: 0.1,\n\n                // Bounds for smallest/largest possible scale to apply to content\n                minScale: 0.2,\n                maxScale: 1.0,\n\n                // Display presentation control arrows\n                controls: true,\n\n                // Help the user learn the controls by providing hints, for example by\n                // bouncing the down arrow when they first encounter a vertical slide\n                controlsTutorial: true,\n\n                // Determines where controls appear, \"edges\" or \"bottom-right\"\n                controlsLayout: 'edges',\n\n                // Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n                // or \"visible\"\n                controlsBackArrows: 'visible',\n\n                // Display a presentation progress bar\n                progress: false,\n\n                // Display the page number of the current slide\n                slideNumber: true,\n\n                // Add the current slide number to the URL hash so that reloading the\n                // page/copying the URL will return you to the same slide\n                hash: false,\n\n                // Push each slide change to the browser history. Implies `hash: true`\n                history: false,\n\n                // Enable keyboard shortcuts for navigation\n                keyboard: true,\n\n                // Enable the slide overview mode\n                overview: true,\n\n                // Vertical centering of slides\n                center: false,\n\n                // Enables touch navigation on devices with touch input\n                touch: true,\n\n                // Loop the presentation\n                loop: false,\n\n                // Change the presentation direction to be RTL\n                rtl: false,\n\n                // See https://github.com/hakimel/reveal.js/#navigation-mode\n                navigationMode: 'default',\n\n                // Randomizes the order of slides each time the presentation loads\n                shuffle: false,\n\n                // Turns fragments on and off globally\n                fragments: false,\n\n                // Flags whether to include the current fragment in the URL,\n                // so that reloading brings you to the same fragment position\n                fragmentInURL: false,\n\n                // Flags if the presentation is running in an embedded mode,\n                // i.e. contained within a limited portion of the screen\n                embedded: true,\n\n                // Flags if we should show a help overlay when the questionmark\n                // key is pressed\n                help: true,\n\n                // Flags if speaker notes should be visible to all viewers\n                showNotes: false,\n\n                // Global override for autoplaying embedded media (video/audio/iframe)\n                // - null: Media will only autoplay if data-autoplay is present\n                // - true: All media will autoplay, regardless of individual setting\n                // - false: No media will autoplay, regardless of individual setting\n                autoPlayMedia: null,\n\n                // Global override for preloading lazy-loaded iframes\n                // - null: Iframes with data-src AND data-preload will be loaded when within\n                //   the viewDistance, iframes with only data-src will be loaded when visible\n                // - true: All iframes with data-src will be loaded when within the viewDistance\n                // - false: All iframes with data-src will be loaded only when visible\n                preloadIframes: null,\n\n                // Number of milliseconds between automatically proceeding to the\n                // next slide, disabled when set to 0, this value can be overwritten\n                // by using a data-autoslide attribute on your slides\n                autoSlide: 0,\n\n                // Stop auto-sliding after user input\n                autoSlideStoppable: true,\n\n                // Use this method for navigation when auto-sliding\n                autoSlideMethod: Reveal.navigateNext,\n\n                // Specify the average time in seconds that you think you will spend\n                // presenting each slide. This is used to show a pacing timer in the\n                // speaker view\n                defaultTiming: 120,\n\n                // Enable slide navigation via mouse wheel\n                mouseWheel: false,\n\n                // Hide cursor if inactive\n                hideInactiveCursor: true,\n\n                // Time before the cursor is hidden (in ms)\n                hideCursorTime: 5000,\n\n                // Hides the address bar on mobile devices\n                hideAddressBar: true,\n\n                // Opens links in an iframe preview overlay\n                // Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n                // individually\n                previewLinks: false,\n\n                // Transition style\n                transition: 'slide', // none/fade/slide/convex/concave/zoom\n\n                // Transition speed\n                transitionSpeed: 'default', // default/fast/slow\n\n                // Transition style for full page slide backgrounds\n                backgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n                // Number of slides away from the current that are visible, changing this causes scroll issues with iframes\n                viewDistance: 1,\n\n                // Parallax background image\n                parallaxBackgroundImage: '', // e.g. \"'https://s3.amazonaws.com/hakim-static/reveal-js/reveal-parallax-1.jpg'\"\n\n                // Parallax background size\n                parallaxBackgroundSize: '', // CSS syntax, e.g. \"2100px 900px\"\n\n                // Number of pixels to move the parallax background per slide\n                // - Calculated automatically unless specified\n                // - Set to 0 to disable movement along an axis\n                parallaxBackgroundHorizontal: null,\n                parallaxBackgroundVertical: null,\n\n                // The display mode that will be used to show slides\n                display: 'block'\n            });\n\n\n            Session.set(\"activeStepNr\", 0);\n            addSlideChangedListener();\n        } catch (error) { }\n    }\n}\n\nfunction addModalContentHeight(type) {\n    var type = (arguments[0] != null) ? arguments[0] : 'short';\n    var modalContainer = $(\"#modal-container\");\n    var modalHeader = $(\"#modal-header\");\n    var modalContentContent = $(\"#modal-content-content\");\n    var modalContent = $(\"#modal-content\");\n    var modalFooter = $(\"#modal-footer\");\n\n    var modalIsDefined =\n        modalContainer.length &&\n        modalHeader.length &&\n        modalContent.length &&\n        modalFooter.length;\n\n    if (modalIsDefined) {\n        var modalContainerHeight = modalContainer.outerHeight();\n        var modalHeaderHeight = modalHeader.outerHeight();\n        var modalFooterHeight = modalFooter.outerHeight();\n\n        console.log(\"modalContainerHeight: \", modalContainerHeight);\n        console.log(\"modalHeaderHeight: \", modalHeaderHeight);\n        console.log(\"modalFooterHeight: \", modalFooterHeight);\n\n        var offset = 80;\n\n        var height = modalContainerHeight - (modalHeaderHeight + modalFooterHeight + offset);\n\n        console.log('height: ', height);\n\n        if (!isNaN(height)) {\n            height = height > 0 ? height : 20;\n            if (type == 'short') {\n                modalContent.css({ 'height': height + 'px' });\n            }\n            else {\n                modalContainer.css({ 'height': '100%', 'overflow-y': 'hidden', 'margin-top': '40px' });\n                modalContentContent.css({ 'height': '100%', 'overflow-y': 'auto' });\n                modalContent.css({ 'overflow-y': 'visible' });\n                modalFooter.css({ 'margin-bottom': '120px' });\n            }\n            setTimeout(function () {\n                modalContent.css({ 'display': 'block' });\n                var modalContentDOM = document.querySelector('#modal-content');\n                modalContentDOM.scrollTop = 0;\n            });\n        }\n\n    }\n\n}"]},"sourceType":"script","hash":"cc11c4d5bc2ca2b8ab4264acc4af8efdc29d03a5"}
