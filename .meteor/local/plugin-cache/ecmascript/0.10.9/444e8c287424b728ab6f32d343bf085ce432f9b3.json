{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"packages/ddp-common/utils.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/ddp-common/utils.js","filename":"packages/ddp-common/utils.js","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/martijn/Documents/GitHub/QRSMeteor","root":"/home/martijn/Documents/GitHub/QRSMeteor","presets":[],"generatorOpts":{"filename":"packages/ddp-common/utils.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/ddp-common/utils.js"}},"code":"\"use strict\";\n\nmodule.export({\n  hasOwn: () => hasOwn,\n  slice: () => slice,\n  keys: () => keys,\n  isEmpty: () => isEmpty,\n  last: () => last\n});\nconst hasOwn = Object.prototype.hasOwnProperty;\nconst slice = Array.prototype.slice;\n\nfunction keys(obj) {\n  return Object.keys(Object(obj));\n}\n\nfunction isEmpty(obj) {\n  if (obj == null) {\n    return true;\n  }\n\n  if (Array.isArray(obj) || typeof obj === \"string\") {\n    return obj.length === 0;\n  }\n\n  for (const key in obj) {\n    if (hasOwn.call(obj, key)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction last(array, n, guard) {\n  if (array == null) {\n    return;\n  }\n\n  if (n == null || guard) {\n    return array[array.length - 1];\n  }\n\n  return slice.call(array, Math.max(array.length - n, 0));\n}\n\nDDPCommon.SUPPORTED_DDP_VERSIONS = ['1', 'pre2', 'pre1'];\n\nDDPCommon.parseDDP = function (stringMessage) {\n  try {\n    var msg = JSON.parse(stringMessage);\n  } catch (e) {\n    Meteor._debug(\"Discarding message with invalid JSON\", stringMessage);\n\n    return null;\n  } // DDP messages must be objects.\n\n\n  if (msg === null || typeof msg !== 'object') {\n    Meteor._debug(\"Discarding non-object DDP message\", stringMessage);\n\n    return null;\n  } // massage msg to get it into \"abstract ddp\" rather than \"wire ddp\" format.\n  // switch between \"cleared\" rep of unsetting fields and \"undefined\"\n  // rep of same\n\n\n  if (hasOwn.call(msg, 'cleared')) {\n    if (!hasOwn.call(msg, 'fields')) {\n      msg.fields = {};\n    }\n\n    msg.cleared.forEach(clearKey => {\n      msg.fields[clearKey] = undefined;\n    });\n    delete msg.cleared;\n  }\n\n  ['fields', 'params', 'result'].forEach(field => {\n    if (hasOwn.call(msg, field)) {\n      msg[field] = EJSON._adjustTypesFromJSONValue(msg[field]);\n    }\n  });\n  return msg;\n};\n\nDDPCommon.stringifyDDP = function (msg) {\n  const copy = EJSON.clone(msg); // swizzle 'changed' messages from 'fields undefined' rep to 'fields\n  // and cleared' rep\n\n  if (hasOwn.call(msg, 'fields')) {\n    const cleared = [];\n    Object.keys(msg.fields).forEach(key => {\n      const value = msg.fields[key];\n\n      if (typeof value === \"undefined\") {\n        cleared.push(key);\n        delete copy.fields[key];\n      }\n    });\n\n    if (!isEmpty(cleared)) {\n      copy.cleared = cleared;\n    }\n\n    if (isEmpty(copy.fields)) {\n      delete copy.fields;\n    }\n  } // adjust types to basic\n\n\n  ['fields', 'params', 'result'].forEach(field => {\n    if (hasOwn.call(copy, field)) {\n      copy[field] = EJSON._adjustTypesToJSONValue(copy[field]);\n    }\n  });\n\n  if (msg.id && typeof msg.id !== 'string') {\n    throw new Error(\"Message id is not a string\");\n  }\n\n  return JSON.stringify(copy);\n};","map":{"version":3,"sources":["packages/ddp-common/utils.js"],"names":["module","export","hasOwn","slice","keys","isEmpty","last","Object","prototype","hasOwnProperty","Array","obj","isArray","length","key","call","array","n","guard","Math","max","DDPCommon","SUPPORTED_DDP_VERSIONS","parseDDP","stringMessage","msg","JSON","parse","e","Meteor","_debug","fields","cleared","forEach","clearKey","undefined","field","EJSON","_adjustTypesFromJSONValue","stringifyDDP","copy","clone","value","push","_adjustTypesToJSONValue","id","Error","stringify"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexport const hasOwn = Object.prototype.hasOwnProperty;\nexport const slice = Array.prototype.slice;\n\nexport function keys(obj) {\n  return Object.keys(Object(obj));\n}\n\nexport function isEmpty(obj) {\n  if (obj == null) {\n    return true;\n  }\n\n  if (Array.isArray(obj) ||\n      typeof obj === \"string\") {\n    return obj.length === 0;\n  }\n\n  for (const key in obj) {\n    if (hasOwn.call(obj, key)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function last(array, n, guard) {\n  if (array == null) {\n    return;\n  }\n\n  if ((n == null) || guard) {\n    return array[array.length - 1];\n  }\n\n  return slice.call(array, Math.max(array.length - n, 0));\n}\n\nDDPCommon.SUPPORTED_DDP_VERSIONS = [ '1', 'pre2', 'pre1' ];\n\nDDPCommon.parseDDP = function (stringMessage) {\n  try {\n    var msg = JSON.parse(stringMessage);\n  } catch (e) {\n    Meteor._debug(\"Discarding message with invalid JSON\", stringMessage);\n    return null;\n  }\n  // DDP messages must be objects.\n  if (msg === null || typeof msg !== 'object') {\n    Meteor._debug(\"Discarding non-object DDP message\", stringMessage);\n    return null;\n  }\n\n  // massage msg to get it into \"abstract ddp\" rather than \"wire ddp\" format.\n\n  // switch between \"cleared\" rep of unsetting fields and \"undefined\"\n  // rep of same\n  if (hasOwn.call(msg, 'cleared')) {\n    if (! hasOwn.call(msg, 'fields')) {\n      msg.fields = {};\n    }\n    msg.cleared.forEach(clearKey => {\n      msg.fields[clearKey] = undefined;\n    });\n    delete msg.cleared;\n  }\n\n  ['fields', 'params', 'result'].forEach(field => {\n    if (hasOwn.call(msg, field)) {\n      msg[field] = EJSON._adjustTypesFromJSONValue(msg[field]);\n    }\n  });\n\n  return msg;\n};\n\nDDPCommon.stringifyDDP = function (msg) {\n  const copy = EJSON.clone(msg);\n\n  // swizzle 'changed' messages from 'fields undefined' rep to 'fields\n  // and cleared' rep\n  if (hasOwn.call(msg, 'fields')) {\n    const cleared = [];\n\n    Object.keys(msg.fields).forEach(key => {\n      const value = msg.fields[key];\n\n      if (typeof value === \"undefined\") {\n        cleared.push(key);\n        delete copy.fields[key];\n      }\n    });\n\n    if (! isEmpty(cleared)) {\n      copy.cleared = cleared;\n    }\n\n    if (isEmpty(copy.fields)) {\n      delete copy.fields;\n    }\n  }\n\n  // adjust types to basic\n  ['fields', 'params', 'result'].forEach(field => {\n    if (hasOwn.call(copy, field)) {\n      copy[field] = EJSON._adjustTypesToJSONValue(copy[field]);\n    }\n  });\n\n  if (msg.id && typeof msg.id !== 'string') {\n    throw new Error(\"Message id is not a string\");\n  }\n\n  return JSON.stringify(copy);\n};\n"]},"sourceType":"script","hash":"444e8c287424b728ab6f32d343bf085ce432f9b3"}
