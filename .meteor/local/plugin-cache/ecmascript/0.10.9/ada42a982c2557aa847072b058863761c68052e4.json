{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/ui/generation/OEMPartnerSide/users.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/ui/generation/OEMPartnerSide/users.js","filename":"imports/ui/generation/OEMPartnerSide/users.js","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/martijn/Documents/GitHub/QRSMeteor","root":"/home/martijn/Documents/GitHub/QRSMeteor","generatorOpts":{"filename":"imports/ui/generation/OEMPartnerSide/users.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/generation/OEMPartnerSide/users.js"}},"code":"var Template;\nmodule.watch(require(\"meteor/templating\"), {\n  Template: function (v) {\n    Template = v;\n  }\n}, 0);\nvar config;\nmodule.watch(require(\"/imports/api/config.js\"), {\n  senseConfig: function (v) {\n    config = v;\n  }\n}, 1);\nvar ironRouter;\nmodule.watch(require(\"meteor/iron:router\"), {\n  ironRouter: function (v) {\n    ironRouter = v;\n  }\n}, 2);\nvar Apps, TemplateApps;\nmodule.watch(require(\"/imports/api/apps.js\"), {\n  Apps: function (v) {\n    Apps = v;\n  },\n  TemplateApps: function (v) {\n    TemplateApps = v;\n  }\n}, 3);\nvar Customers, dummyCustomers;\nmodule.watch(require(\"/imports/api/customers.js\"), {\n  Customers: function (v) {\n    Customers = v;\n  },\n  dummyCustomers: function (v) {\n    dummyCustomers = v;\n  }\n}, 4);\nvar Streams;\nmodule.watch(require(\"/imports/api/streams.js\"), {\n  Streams: function (v) {\n    Streams = v;\n  }\n}, 5);\nmodule.watch(require(\"/imports/ui/UIHelpers\"));\nvar insertTemplateAndDummyCustomers;\nmodule.watch(require(\"/imports/ui/generation/OEMPartnerSide/OEMPartner\"), {\n  insertTemplateAndDummyCustomers: function (v) {\n    insertTemplateAndDummyCustomers = v;\n  }\n}, 6);\nmodule.watch(require(\"./users.html\"));\n//http://www.webtempest.com/meteor-js-autoform-tutorial\nAutoForm.addHooks(['insertCustomerForm'], {\n  onSuccess: function (operation, result, template) {// sAlert.success('We inserted the customer into your local MongoDB.');\n    //Router.go(\"/posts\");\n  } // before: {\n  //     // Replace `formType` with the form `type` attribute to which this hook applies\n  //     insert: function(customer) {\n  //         // Potentially alter the doc\n  //         if (Meteor.userId()) {\n  //             customer.generationUserId = Meteor.userId();\n  //             customer.checked = true;\n  //         }\n  //         console.log('insert users add hook', customer);\n  //         return customer;\n  //     }\n  // },\n\n});\nSimpleSchema.debug = false;\nTemplate.users.helpers({\n  autoSaveMode: function () {\n    //return Session.get(\"autoSaveMode\") ? true : false;\n    return true;\n  },\n  isselectedCustomer: function () {\n    return Session.equals(\"selectedCustomerStep1\", this._id);\n  },\n  formType: function () {\n    if (Session.get(\"selectedCustomerStep1\")) {\n      return \"update\";\n    } else {\n      return \"disabled\";\n    }\n  },\n  showUpdateScreen: function () {\n    return Session.get(\"selectedCustomerStep1\");\n  },\n  ribbon: function () {\n    return Session.equals(\"selectedCustomerStep1\", this._id) ? \"ui ribbon label\" : '';\n  },\n  active: function () {\n    return Session.equals(\"activeCustomer\", this._id) ? \"active\" : '';\n  },\n  isChrome: function () {\n    //update screen does not work with edge and firefox because of a bug somehwere\n    var isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n    console.log('user is using Chrome? ', isChrome);\n    return isChrome;\n  }\n});\nTemplate.displayUsers.helpers({\n  selectedCustomerDoc: function () {\n    // console.log('selectedCustomerStep1 helper doc ', Customers.findOne(Session.get(\"selectedCustomerStep1\")));\n    return Customers.findOne(Session.get(\"selectedCustomerStep1\"));\n  }\n});\nTemplate.updateUserFormStep1.helpers({\n  selectedCustomerDoc: function () {\n    // console.log('selectedCustomerStep1 helper doc ', Customers.findOne(Session.get(\"selectedCustomerStep1\")));\n    return Customers.findOne(Session.get(\"selectedCustomerStep1\"));\n  }\n});\nTemplate.updateGroupsFormStep1.events({\n  'change': function (evt, template) {\n    //will give you your data context also\n    console.log('form changed');\n\n    try {\n      //logout all users before removing all the current customers. This to prevent the screen stays logged in at an old user.\n      Meteor.call('resetLoggedInUser');\n    } catch (err) {}\n\n    var updatedUser = {\n      name: Template.currentData().name,\n      group: template.find(\"[name='group']\").value,\n      country: template.find(\"[name='country']\").value,\n      currentlyLoggedIn: false\n    };\n    Meteor.call('updateUserForCustomer', updatedUser); // sAlert.success('Groups are updated for ' + updatedUser.name);\n  }\n});\nTemplate.users.events({\n  '.customer-row': function (event, template) {\n    console.log('mouseenter event user table'); // var row = event.currentTarget;\n\n    Session.set(\"activeCustomer\", this._id);\n  },\n  'click .delete': function () {\n    try {\n      Meteor.call('resetLoggedInUser'); //logout all users before removing all the current customers. This to prevent the screen stays logged in at an old user.\n    } catch (err) {//ignore\n    }\n\n    Customers.remove(this._id);\n    Session.set(\"selectedCustomerStep1\", '');\n  },\n  'click .backToGeneration': function () {\n    console.log('go to step 2 clicked');\n    event.preventDefault();\n    Session.set('currentStep', 2);\n    Router.go('generation_embedded');\n  },\n  'click .customer-row': function () {\n    Session.set(\"selectedCustomerStep1\", this._id);\n  },\n  'click .insertDummyCustomers': function (event) {\n    event.preventDefault();\n    insertTemplateAndDummyCustomers();\n  },\n  'click .insertNewCustomer': function () {\n    $('#insertCustomer').modal('show').modal({\n      observeChanges: true\n    });\n    refreshModal();\n  }\n});\n\nfunction refreshModal() {\n  Meteor.setTimeout(function () {\n    refreshModal();\n  }, 1);\n  return $('#insertCustomer').modal('refresh');\n}\n\nTemplate.insertCustomer.events({\n  'click .closeInsertModal': function () {\n    $('#insertCustomer').modal('hide');\n  }\n});\nTemplate.modalRefresher.onRendered(function () {\n  $('#insertCustomer').modal('refresh');\n});\nTemplate.users.onRendered(function () {\n  AutoForm.setDefaultTemplate(\"semanticUI\");\n});\nTemplate.updateGroupsFormStep1.onRendered(function () {\n  this.$('.ui.dropdown').dropdown(); // setTimeout(function() {\n  //     template.$('.ui.dropdown.country')\n  //         .dropdown('set text', this.data.country);\n  //     template.$('.ui.dropdown.group')\n  //         .dropdown('set text', this.data.group);\n  //     // console.log('set group box to', updatedUser.group);\n  // }, 300)\n});\nTemplate.insertCustomer.onRendered(function () {\n  this.$('#insertCustomer').modal('refresh');\n});\nTemplate.users.onCreated(function () {\n  // this.subscribe('customers');\n  Session.set('currentStep', 1); //see https://guide.meteor.com/data-loading.html     \n\n  var customersHandle = Meteor.subscribe('customers', {\n    //http://stackoverflow.com/questions/28621132/meteor-subscribe-callback\n    onReady: function () {},\n    onError: function () {\n      console.log(\"onError\", arguments);\n    }\n  });\n});","map":{"version":3,"sources":["imports/ui/generation/OEMPartnerSide/users.js"],"names":["Template","module","watch","require","v","config","senseConfig","ironRouter","Apps","TemplateApps","Customers","dummyCustomers","Streams","insertTemplateAndDummyCustomers","AutoForm","addHooks","onSuccess","operation","result","template","SimpleSchema","debug","users","helpers","autoSaveMode","isselectedCustomer","Session","equals","_id","formType","get","showUpdateScreen","ribbon","active","isChrome","test","navigator","userAgent","vendor","console","log","displayUsers","selectedCustomerDoc","findOne","updateUserFormStep1","updateGroupsFormStep1","events","evt","Meteor","call","err","updatedUser","name","currentData","group","find","value","country","currentlyLoggedIn","event","set","remove","preventDefault","Router","go","$","modal","observeChanges","refreshModal","setTimeout","insertCustomer","modalRefresher","onRendered","setDefaultTemplate","dropdown","onCreated","customersHandle","subscribe","onReady","onError","arguments"],"mappings":"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","sourcesContent":["import {\n    Template\n} from 'meteor/templating';\nimport {\n    senseConfig as config\n} from '/imports/api/config.js';\nimport {\n    ironRouter\n} from 'meteor/iron:router';\nimport {\n    Apps,\n    TemplateApps\n} from '/imports/api/apps.js'\nimport {\n    Customers,\n    dummyCustomers\n} from '/imports/api/customers.js';\nimport {\n    Streams\n} from '/imports/api/streams.js'\nimport '/imports/ui/UIHelpers';\nimport {\n    insertTemplateAndDummyCustomers\n} from '/imports/ui/generation/OEMPartnerSide/OEMPartner';\n\nimport './users.html';\n\n\n//http://www.webtempest.com/meteor-js-autoform-tutorial\nAutoForm.addHooks(['insertCustomerForm'], {\n    onSuccess: function(operation, result, template) {\n        // sAlert.success('We inserted the customer into your local MongoDB.');\n        //Router.go(\"/posts\");\n    },\n    // before: {\n    //     // Replace `formType` with the form `type` attribute to which this hook applies\n    //     insert: function(customer) {\n    //         // Potentially alter the doc\n    //         if (Meteor.userId()) {\n    //             customer.generationUserId = Meteor.userId();\n    //             customer.checked = true;\n    //         }\n    //         console.log('insert users add hook', customer);\n    //         return customer;\n    //     }\n    // },\n});\n\nSimpleSchema.debug = false;\n\nTemplate.users.helpers({\n    autoSaveMode: function() {\n        //return Session.get(\"autoSaveMode\") ? true : false;\n        return true;\n    },\n    isselectedCustomer: function() {\n        return Session.equals(\"selectedCustomerStep1\", this._id);\n    },\n    formType: function() {\n        if (Session.get(\"selectedCustomerStep1\")) {\n            return \"update\";\n        } else {\n            return \"disabled\";\n        }\n    },\n    showUpdateScreen: function() {\n        return Session.get(\"selectedCustomerStep1\");\n    },\n    ribbon: function() {\n        return Session.equals(\"selectedCustomerStep1\", this._id) ? \"ui ribbon label\" : '';\n    },\n    active: function() {\n        return Session.equals(\"activeCustomer\", this._id) ? \"active\" : '';\n    },\n    isChrome: function() { //update screen does not work with edge and firefox because of a bug somehwere\n        var isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n        console.log('user is using Chrome? ', isChrome);\n        return isChrome;\n    }\n});\n\nTemplate.displayUsers.helpers({\n    selectedCustomerDoc: function() {\n        // console.log('selectedCustomerStep1 helper doc ', Customers.findOne(Session.get(\"selectedCustomerStep1\")));\n        return Customers.findOne(Session.get(\"selectedCustomerStep1\"));\n    },\n})\n\nTemplate.updateUserFormStep1.helpers({\n    selectedCustomerDoc: function() {\n        // console.log('selectedCustomerStep1 helper doc ', Customers.findOne(Session.get(\"selectedCustomerStep1\")));\n        return Customers.findOne(Session.get(\"selectedCustomerStep1\"));\n    },\n})\n\n\nTemplate.updateGroupsFormStep1.events({\n    'change' (evt, template) {\n        //will give you your data context also\n        console.log('form changed');\n\n        try {\n            //logout all users before removing all the current customers. This to prevent the screen stays logged in at an old user.\n            Meteor.call('resetLoggedInUser');\n        } catch (err) {}\n\n        var updatedUser = {\n            name: Template.currentData().name,\n            group: template.find(\"[name='group']\").value,\n            country: template.find(\"[name='country']\").value,\n            currentlyLoggedIn: false\n        };\n\n        Meteor.call('updateUserForCustomer', updatedUser);\n        // sAlert.success('Groups are updated for ' + updatedUser.name);\n    }\n});\n\nTemplate.users.events({\n    '.customer-row' (event, template) {\n        console.log('mouseenter event user table');\n        // var row = event.currentTarget;\n        Session.set(\"activeCustomer\", this._id);\n    },\n    'click .delete' () {\n        try {\n            Meteor.call('resetLoggedInUser'); //logout all users before removing all the current customers. This to prevent the screen stays logged in at an old user.\n        } catch (err) {\n            //ignore\n        }\n        Customers.remove(this._id);\n        Session.set(\"selectedCustomerStep1\", '');\n    },\n    'click .backToGeneration' () {\n        console.log('go to step 2 clicked')\n        event.preventDefault();\n        Session.set('currentStep', 2);\n        Router.go('generation_embedded');\n    },\n    'click .customer-row': function() {\n        Session.set(\"selectedCustomerStep1\", this._id);\n    },\n    'click .insertDummyCustomers' (event) {\n        event.preventDefault();\n        insertTemplateAndDummyCustomers();\n    },\n    'click .insertNewCustomer' () {\n        $('#insertCustomer').modal('show')\n            .modal({\n                observeChanges: true\n            });\n        refreshModal();\n    }\n\n});\n\n\nfunction refreshModal() {\n    Meteor.setTimeout(function() {\n        refreshModal()\n    }, 1);\n    return $('#insertCustomer').modal('refresh');\n}\nTemplate.insertCustomer.events({\n    'click .closeInsertModal' () {\n        $('#insertCustomer').modal('hide');\n    }\n})\n\nTemplate.modalRefresher.onRendered(function() {\n    $('#insertCustomer').modal('refresh');\n});\n\nTemplate.users.onRendered(function() {  \n    AutoForm.setDefaultTemplate(\"semanticUI\");\n})\n\nTemplate.updateGroupsFormStep1.onRendered(function() {  \n    this.$('.ui.dropdown')\n        .dropdown();\n\n    // setTimeout(function() {\n    //     template.$('.ui.dropdown.country')\n    //         .dropdown('set text', this.data.country);\n    //     template.$('.ui.dropdown.group')\n    //         .dropdown('set text', this.data.group);\n    //     // console.log('set group box to', updatedUser.group);\n    // }, 300)\n\n})\n\nTemplate.insertCustomer.onRendered(function() {  \n    this.$('#insertCustomer').modal('refresh');\n})\n\n\nTemplate.users.onCreated(function() {\n    // this.subscribe('customers');\n    Session.set('currentStep', 1);\n\n    //see https://guide.meteor.com/data-loading.html     \n    const customersHandle = Meteor.subscribe('customers', { //http://stackoverflow.com/questions/28621132/meteor-subscribe-callback\n        onReady: function() {},\n        onError: function() {\n            console.log(\"onError\", arguments);\n        }\n    });\n\n})"]},"sourceType":"script","hash":"ada42a982c2557aa847072b058863761c68052e4"}
