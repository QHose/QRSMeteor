[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar OAuth = Package.oauth.OAuth;\nvar Oauth = Package.oauth.Oauth;\nvar Random = Package.random.Random;\nvar ServiceConfiguration = Package['service-configuration'].ServiceConfiguration;\n\n/* Package-scope variables */\nvar Facebook;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                   //\n// packages/facebook-oauth/facebook_client.js                                                        //\n//                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                     //\nFacebook = {};\n\n// Request Facebook credentials for the user\n//\n// @param options {optional}\n// @param credentialRequestCompleteCallback {Function} Callback function to call on\n//   completion. Takes one argument, credentialToken on success, or Error on\n//   error.\nFacebook.requestCredential = function (options, credentialRequestCompleteCallback) {\n  // support both (options, callback) and (callback).\n  if (!credentialRequestCompleteCallback && typeof options === 'function') {\n    credentialRequestCompleteCallback = options;\n    options = {};\n  }\n\n  var config = ServiceConfiguration.configurations.findOne({service: 'facebook'});\n  if (!config) {\n    credentialRequestCompleteCallback && credentialRequestCompleteCallback(\n      new ServiceConfiguration.ConfigError());\n    return;\n  }\n\n  var credentialToken = Random.secret();\n  var mobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|Windows Phone/i.test(navigator.userAgent);\n  var display = mobile ? 'touch' : 'popup';\n\n  var scope = \"email\";\n  if (options && options.requestPermissions)\n    scope = options.requestPermissions.join(',');\n\n  var loginStyle = OAuth._loginStyle('facebook', config, options);\n\n  var loginUrl =\n        'https://www.facebook.com/v2.12/dialog/oauth?client_id=' + config.appId +\n        '&redirect_uri=' + OAuth._redirectUri('facebook', config) +\n        '&display=' + display + '&scope=' + scope +\n        '&state=' + OAuth._stateParam(loginStyle, credentialToken, options && options.redirectUrl);\n\n  // Handle authentication type (e.g. for force login you need auth_type: \"reauthenticate\")\n  if (options && options.auth_type) {\n    loginUrl += \"&auth_type=\" + encodeURIComponent(options.auth_type);\n  }\n\n  OAuth.launchLogin({\n    loginService: \"facebook\",\n    loginStyle: loginStyle,\n    loginUrl: loginUrl,\n    credentialRequestCompleteCallback: credentialRequestCompleteCallback,\n    credentialToken: credentialToken\n  });\n};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nPackage._define(\"facebook-oauth\", {\n  Facebook: Facebook\n});\n\n})();\n","servePath":"/packages/facebook-oauth.js"}]