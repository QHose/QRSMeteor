[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Collection2 = Package['aldeed:collection2-core'].Collection2;\nvar _ = Package.underscore._;\nvar LocalCollection = Package.minimongo.LocalCollection;\nvar Minimongo = Package.minimongo.Minimongo;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar SimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nvar MongoObject = Package['aldeed:simple-schema'].MongoObject;\nvar Mongo = Package.mongo.Mongo;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                     //\n// packages/aldeed_schema-deny/lib/deny.js                                             //\n//                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////\n                                                                                       //\n// Extend the schema options allowed by SimpleSchema\nSimpleSchema.extendOptions({\n  denyInsert: Match.Optional(Boolean),\n  denyUpdate: Match.Optional(Boolean),\n});\n\n// Define validation error messages\nif (!SimpleSchema.version || SimpleSchema.version < 2) {\n  SimpleSchema.messages({\n    insertNotAllowed: '[label] cannot be set during an insert',\n    updateNotAllowed: '[label] cannot be set during an update'\n  });\n}\n\nCollection2.on('schema.attached', function (collection, ss) {\n  if (ss.version >= 2) {\n    ss.messageBox.messages({\n      insertNotAllowed: '{{label}} cannot be set during an insert',\n      updateNotAllowed: '{{label}} cannot be set during an update'\n    });\n  }\n\n  ss.addValidator(function() {\n    if (!this.isSet) return;\n\n    var def = this.definition;\n\n    if (def.denyInsert && this.isInsert) return 'insertNotAllowed';\n    if (def.denyUpdate && (this.isUpdate || this.isUpsert)) return 'updateNotAllowed';\n  });\n});\n\n/////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nPackage._define(\"aldeed:schema-deny\");\n\n})();\n","servePath":"/packages/aldeed_schema-deny.js"}]