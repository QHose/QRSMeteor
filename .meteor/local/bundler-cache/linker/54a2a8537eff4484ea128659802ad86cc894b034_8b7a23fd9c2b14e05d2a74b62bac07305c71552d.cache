[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\nvar Symbol = Package['ecmascript-runtime-client'].Symbol;\nvar Map = Package['ecmascript-runtime-client'].Map;\nvar Set = Package['ecmascript-runtime-client'].Set;\n\n/* Package-scope variables */\nvar OrderedDict;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"ordered-dict\":{\"ordered_dict.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// packages/ordered-dict/ordered_dict.js                                                                  //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nmodule.export({\n  OrderedDict: function () {\n    return OrderedDict;\n  }\n});\n\n// This file defines an ordered dictionary abstraction that is useful for\n// maintaining a dataset backed by observeChanges.  It supports ordering items\n// by specifying the item they now come before.\n// The implementation is a dictionary that contains nodes of a doubly-linked\n// list as its values.\n// constructs a new element struct\n// next and prev are whole elements, not keys.\nfunction element(key, value, next, prev) {\n  return {\n    key: key,\n    value: value,\n    next: next,\n    prev: prev\n  };\n}\n\nvar OrderedDict =\n/*#__PURE__*/\nfunction () {\n  function OrderedDict() {\n    var _this = this;\n\n    this._dict = Object.create(null);\n    this._first = null;\n    this._last = null;\n    this._size = 0;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (typeof args[0] === 'function') {\n      this._stringify = args.shift();\n    } else {\n      this._stringify = function (x) {\n        return x;\n      };\n    }\n\n    args.forEach(function (kv) {\n      return _this.putBefore(kv[0], kv[1], null);\n    });\n  } // the \"prefix keys with a space\" thing comes from here\n  // https://github.com/documentcloud/underscore/issues/376#issuecomment-2815649\n\n\n  var _proto = OrderedDict.prototype;\n\n  _proto._k = function () {\n    function _k(key) {\n      return \" \" + this._stringify(key);\n    }\n\n    return _k;\n  }();\n\n  _proto.empty = function () {\n    function empty() {\n      return !this._first;\n    }\n\n    return empty;\n  }();\n\n  _proto.size = function () {\n    function size() {\n      return this._size;\n    }\n\n    return size;\n  }();\n\n  _proto._linkEltIn = function () {\n    function _linkEltIn(elt) {\n      if (!elt.next) {\n        elt.prev = this._last;\n        if (this._last) this._last.next = elt;\n        this._last = elt;\n      } else {\n        elt.prev = elt.next.prev;\n        elt.next.prev = elt;\n        if (elt.prev) elt.prev.next = elt;\n      }\n\n      if (this._first === null || this._first === elt.next) this._first = elt;\n    }\n\n    return _linkEltIn;\n  }();\n\n  _proto._linkEltOut = function () {\n    function _linkEltOut(elt) {\n      if (elt.next) elt.next.prev = elt.prev;\n      if (elt.prev) elt.prev.next = elt.next;\n      if (elt === this._last) this._last = elt.prev;\n      if (elt === this._first) this._first = elt.next;\n    }\n\n    return _linkEltOut;\n  }();\n\n  _proto.putBefore = function () {\n    function putBefore(key, item, before) {\n      if (this._dict[this._k(key)]) throw new Error(\"Item \" + key + \" already present in OrderedDict\");\n      var elt = before ? element(key, item, this._dict[this._k(before)]) : element(key, item, null);\n      if (typeof elt.next === \"undefined\") throw new Error(\"could not find item to put this one before\");\n\n      this._linkEltIn(elt);\n\n      this._dict[this._k(key)] = elt;\n      this._size++;\n    }\n\n    return putBefore;\n  }();\n\n  _proto.append = function () {\n    function append(key, item) {\n      this.putBefore(key, item, null);\n    }\n\n    return append;\n  }();\n\n  _proto.remove = function () {\n    function remove(key) {\n      var elt = this._dict[this._k(key)];\n\n      if (typeof elt === \"undefined\") throw new Error(\"Item \" + key + \" not present in OrderedDict\");\n\n      this._linkEltOut(elt);\n\n      this._size--;\n      delete this._dict[this._k(key)];\n      return elt.value;\n    }\n\n    return remove;\n  }();\n\n  _proto.get = function () {\n    function get(key) {\n      if (this.has(key)) {\n        return this._dict[this._k(key)].value;\n      }\n    }\n\n    return get;\n  }();\n\n  _proto.has = function () {\n    function has(key) {\n      return Object.prototype.hasOwnProperty.call(this._dict, this._k(key));\n    }\n\n    return has;\n  }(); // Iterate through the items in this dictionary in order, calling\n  // iter(value, key, index) on each one.\n  // Stops whenever iter returns OrderedDict.BREAK, or after the last element.\n\n\n  _proto.forEach = function () {\n    function forEach(iter) {\n      var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var i = 0;\n      var elt = this._first;\n\n      while (elt !== null) {\n        var b = iter.call(context, elt.value, elt.key, i);\n        if (b === OrderedDict.BREAK) return;\n        elt = elt.next;\n        i++;\n      }\n    }\n\n    return forEach;\n  }();\n\n  _proto.first = function () {\n    function first() {\n      if (this.empty()) {\n        return;\n      }\n\n      return this._first.key;\n    }\n\n    return first;\n  }();\n\n  _proto.firstValue = function () {\n    function firstValue() {\n      if (this.empty()) {\n        return;\n      }\n\n      return this._first.value;\n    }\n\n    return firstValue;\n  }();\n\n  _proto.last = function () {\n    function last() {\n      if (this.empty()) {\n        return;\n      }\n\n      return this._last.key;\n    }\n\n    return last;\n  }();\n\n  _proto.lastValue = function () {\n    function lastValue() {\n      if (this.empty()) {\n        return;\n      }\n\n      return this._last.value;\n    }\n\n    return lastValue;\n  }();\n\n  _proto.prev = function () {\n    function prev(key) {\n      if (this.has(key)) {\n        var elt = this._dict[this._k(key)];\n\n        if (elt.prev) return elt.prev.key;\n      }\n\n      return null;\n    }\n\n    return prev;\n  }();\n\n  _proto.next = function () {\n    function next(key) {\n      if (this.has(key)) {\n        var elt = this._dict[this._k(key)];\n\n        if (elt.next) return elt.next.key;\n      }\n\n      return null;\n    }\n\n    return next;\n  }();\n\n  _proto.moveBefore = function () {\n    function moveBefore(key, before) {\n      var elt = this._dict[this._k(key)];\n\n      var eltBefore = before ? this._dict[this._k(before)] : null;\n\n      if (typeof elt === \"undefined\") {\n        throw new Error(\"Item to move is not present\");\n      }\n\n      if (typeof eltBefore === \"undefined\") {\n        throw new Error(\"Could not find element to move this one before\");\n      }\n\n      if (eltBefore === elt.next) // no moving necessary\n        return; // remove from its old place\n\n      this._linkEltOut(elt); // patch into its new place\n\n\n      elt.next = eltBefore;\n\n      this._linkEltIn(elt);\n    }\n\n    return moveBefore;\n  }(); // Linear, sadly.\n\n\n  _proto.indexOf = function () {\n    function indexOf(key) {\n      var _this2 = this;\n\n      var ret = null;\n      this.forEach(function (v, k, i) {\n        if (_this2._k(k) === _this2._k(key)) {\n          ret = i;\n          return OrderedDict.BREAK;\n        }\n\n        return;\n      });\n      return ret;\n    }\n\n    return indexOf;\n  }();\n\n  _proto._checkRep = function () {\n    function _checkRep() {\n      var _this3 = this;\n\n      Object.keys(this._dict).forEach(function (k) {\n        var v = _this3._dict[k];\n\n        if (v.next === v) {\n          throw new Error(\"Next is a loop\");\n        }\n\n        if (v.prev === v) {\n          throw new Error(\"Prev is a loop\");\n        }\n      });\n    }\n\n    return _checkRep;\n  }();\n\n  return OrderedDict;\n}();\n\nOrderedDict.BREAK = {\n  \"break\": true\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\nvar exports = require(\"/node_modules/meteor/ordered-dict/ordered_dict.js\");\n\n/* Exports */\nPackage._define(\"ordered-dict\", exports, {\n  OrderedDict: OrderedDict\n});\n\n})();\n","servePath":"/packages/ordered-dict.js","sourceMap":{"version":3,"sources":["packages/ordered-dict/ordered_dict.js"],"names":["module","export","OrderedDict","element","key","value","next","prev","_dict","Object","create","_first","_last","_size","args","_stringify","shift","x","forEach","putBefore","kv","_k","empty","size","_linkEltIn","elt","_linkEltOut","item","before","Error","append","remove","get","has","prototype","hasOwnProperty","call","iter","context","i","b","BREAK","first","firstValue","last","lastValue","moveBefore","eltBefore","indexOf","ret","v","k","_checkRep","keys"],"mappings":"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","file":"/packages/ordered-dict.js","sourcesContent":["// This file defines an ordered dictionary abstraction that is useful for\n// maintaining a dataset backed by observeChanges.  It supports ordering items\n// by specifying the item they now come before.\n\n// The implementation is a dictionary that contains nodes of a doubly-linked\n// list as its values.\n\n// constructs a new element struct\n// next and prev are whole elements, not keys.\nfunction element(key, value, next, prev) {\n  return {\n    key: key,\n    value: value,\n    next: next,\n    prev: prev\n  };\n}\n\nexport class OrderedDict {\n  constructor(...args) {\n    this._dict = Object.create(null);\n    this._first = null;\n    this._last = null;\n    this._size = 0;\n\n    if (typeof args[0] === 'function') {\n      this._stringify = args.shift();\n    } else {\n      this._stringify = function (x) { return x; };\n    }\n\n    args.forEach(kv => this.putBefore(kv[0], kv[1], null));\n  }\n\n  // the \"prefix keys with a space\" thing comes from here\n  // https://github.com/documentcloud/underscore/issues/376#issuecomment-2815649\n  _k(key) {\n    return \" \" + this._stringify(key);\n  }\n\n  empty() {\n    return !this._first;\n  }\n\n  size() {\n    return this._size;\n  }\n\n  _linkEltIn(elt) {\n    if (!elt.next) {\n      elt.prev = this._last;\n      if (this._last)\n        this._last.next = elt;\n      this._last = elt;\n    } else {\n      elt.prev = elt.next.prev;\n      elt.next.prev = elt;\n      if (elt.prev)\n        elt.prev.next = elt;\n    }\n    if (this._first === null || this._first === elt.next)\n      this._first = elt;\n  }\n\n  _linkEltOut(elt) {\n    if (elt.next)\n      elt.next.prev = elt.prev;\n    if (elt.prev)\n      elt.prev.next = elt.next;\n    if (elt === this._last)\n      this._last = elt.prev;\n    if (elt === this._first)\n      this._first = elt.next;\n  }\n\n  putBefore(key, item, before) {\n    if (this._dict[this._k(key)])\n      throw new Error(\"Item \" + key + \" already present in OrderedDict\");\n    var elt = before ?\n      element(key, item, this._dict[this._k(before)]) :\n      element(key, item, null);\n    if (typeof elt.next === \"undefined\")\n      throw new Error(\"could not find item to put this one before\");\n    this._linkEltIn(elt);\n    this._dict[this._k(key)] = elt;\n    this._size++;\n  }\n\n  append(key, item) {\n    this.putBefore(key, item, null);\n  }\n\n  remove(key) {\n    var elt = this._dict[this._k(key)];\n    if (typeof elt === \"undefined\")\n      throw new Error(\"Item \" + key + \" not present in OrderedDict\");\n    this._linkEltOut(elt);\n    this._size--;\n    delete this._dict[this._k(key)];\n    return elt.value;\n  }\n\n  get(key) {\n    if (this.has(key)) {\n      return this._dict[this._k(key)].value;\n    }\n  }\n\n  has(key) {\n    return Object.prototype.hasOwnProperty.call(\n      this._dict,\n      this._k(key)\n    );\n  }\n\n  // Iterate through the items in this dictionary in order, calling\n  // iter(value, key, index) on each one.\n\n  // Stops whenever iter returns OrderedDict.BREAK, or after the last element.\n  forEach(iter, context = null) {\n    var i = 0;\n    var elt = this._first;\n    while (elt !== null) {\n      var b = iter.call(context, elt.value, elt.key, i);\n      if (b === OrderedDict.BREAK) return;\n      elt = elt.next;\n      i++;\n    }\n  }\n\n  first() {\n    if (this.empty()) {\n      return;\n    }\n    return this._first.key;\n  }\n\n  firstValue() {\n    if (this.empty()) {\n      return;\n    }\n    return this._first.value;\n  }\n\n  last() {\n    if (this.empty()) {\n      return;\n    }\n    return this._last.key;\n  }\n\n  lastValue() {\n    if (this.empty()) {\n      return;\n    }\n    return this._last.value;\n  }\n\n  prev(key) {\n    if (this.has(key)) {\n      var elt = this._dict[this._k(key)];\n      if (elt.prev)\n        return elt.prev.key;\n    }\n    return null;\n  }\n\n  next(key) {\n    if (this.has(key)) {\n      var elt = this._dict[this._k(key)];\n      if (elt.next)\n        return elt.next.key;\n    }\n    return null;\n  }\n\n  moveBefore(key, before) {\n    var elt = this._dict[this._k(key)];\n    var eltBefore = before ? this._dict[this._k(before)] : null;\n    if (typeof elt === \"undefined\") {\n      throw new Error(\"Item to move is not present\");\n    }\n    if (typeof eltBefore === \"undefined\") {\n      throw new Error(\"Could not find element to move this one before\");\n    }\n    if (eltBefore === elt.next) // no moving necessary\n      return;\n    // remove from its old place\n    this._linkEltOut(elt);\n    // patch into its new place\n    elt.next = eltBefore;\n    this._linkEltIn(elt);\n  }\n\n  // Linear, sadly.\n  indexOf(key) {\n    var ret = null;\n    this.forEach((v, k, i) => {\n      if (this._k(k) === this._k(key)) {\n        ret = i;\n        return OrderedDict.BREAK;\n      }\n      return;\n    });\n    return ret;\n  }\n\n  _checkRep() {\n    Object.keys(this._dict).forEach(k => {\n      const v = this._dict[k];\n      if (v.next === v) {\n        throw new Error(\"Next is a loop\");\n      }\n      if (v.prev === v) {\n        throw new Error(\"Prev is a loop\");\n      }\n    });\n  }\n}\n\nOrderedDict.BREAK = {\"break\": true};\n"]}}]