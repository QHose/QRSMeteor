[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar OAuth = Package.oauth.OAuth;\nvar Oauth = Package.oauth.Oauth;\nvar Random = Package.random.Random;\nvar ServiceConfiguration = Package['service-configuration'].ServiceConfiguration;\n\n/* Package-scope variables */\nvar Twitter;\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                    //\n// packages/twitter-oauth/twitter_common.js                                                           //\n//                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                      //\nTwitter = {};\n\nTwitter.validParamsAuthenticate = [\n  'force_login',\n  'screen_name'\n];\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                    //\n// packages/twitter-oauth/twitter_client.js                                                           //\n//                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                      //\n// Request Twitter credentials for the user\n// @param options {optional}  XXX support options.requestPermissions\n// @param credentialRequestCompleteCallback {Function} Callback function to call on\n//   completion. Takes one argument, credentialToken on success, or Error on\n//   error.\nTwitter.requestCredential = function (options, credentialRequestCompleteCallback) {\n  // support both (options, callback) and (callback).\n  if (!credentialRequestCompleteCallback && typeof options === 'function') {\n    credentialRequestCompleteCallback = options;\n    options = {};\n  }\n\n  var config = ServiceConfiguration.configurations.findOne({service: 'twitter'});\n  if (!config) {\n    credentialRequestCompleteCallback && credentialRequestCompleteCallback(\n      new ServiceConfiguration.ConfigError());\n    return;\n  }\n\n  var credentialToken = Random.secret();\n  // We need to keep credentialToken across the next two 'steps' so we're adding\n  // a credentialToken parameter to the url and the callback url that we'll be returned\n  // to by oauth provider\n\n  var loginStyle = OAuth._loginStyle('twitter', config, options);\n\n  // url to app, enters \"step 1\" as described in\n  // packages/accounts-oauth1-helper/oauth1_server.js\n  var loginPath = '_oauth/twitter/?requestTokenAndRedirect=true'\n        + '&state=' + OAuth._stateParam(loginStyle, credentialToken, options && options.redirectUrl);\n\n  if (Meteor.isCordova) {\n    loginPath = loginPath + \"&cordova=true\";\n    if (/Android/i.test(navigator.userAgent)) {\n      loginPath = loginPath + \"&android=true\";\n    }\n  }\n\n  // Support additional, permitted parameters\n  if (options) {\n    var hasOwn = Object.prototype.hasOwnProperty;\n    Twitter.validParamsAuthenticate.forEach(function (param) {\n      if (hasOwn.call(options, param)) {\n        loginPath += \"&\" + param + \"=\" + encodeURIComponent(options[param]);\n      }\n    });\n  }\n\n  var loginUrl = Meteor.absoluteUrl(loginPath);\n\n  OAuth.launchLogin({\n    loginService: \"twitter\",\n    loginStyle: loginStyle,\n    loginUrl: loginUrl,\n    credentialRequestCompleteCallback: credentialRequestCompleteCallback,\n    credentialToken: credentialToken\n  });\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nPackage._define(\"twitter-oauth\", {\n  Twitter: Twitter\n});\n\n})();\n","servePath":"/packages/twitter-oauth.js"}]