[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Template = Package['templating-runtime'].Template;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Spacebars = Package.spacebars.Spacebars;\nvar HTML = Package.htmljs.HTML;\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                          //\n// packages/google-config-ui/template.google_configure.js                                   //\n//                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                            //\n\nTemplate.__checkName(\"configureLoginServiceDialogForGoogle\");\nTemplate[\"configureLoginServiceDialogForGoogle\"] = new Template(\"Template.configureLoginServiceDialogForGoogle\", (function() {\n  var view = this;\n  return [ HTML.Raw(\"<p>\\n    First, you'll need to get a Google Client ID. Follow these steps:\\n  </p>\\n  \"), HTML.OL(\"\\n    \", HTML.Raw('<li>\\n      Visit <a href=\"https://console.developers.google.com/\" target=\"blank\">https://console.developers.google.com/</a>\\n    </li>'), \"\\n    \", HTML.Raw('<li>\\n      \"Create Project\", if needed. Wait for Google to finish provisioning.\\n    </li>'), \"\\n    \", HTML.Raw('<li>\\n      On the left sidebar, go to \"Credentials\" and, on the right, \"OAuth consent screen\". Make sure to enter an email address and a product name, and save.\\n    </li>'), \"\\n    \", HTML.Raw('<li>\\n      On the left sidebar, go to \"Credentials\". Click the \"Create credentials\" button, then select \"OAuth client ID\" as the type.\\n    </li>'), \"\\n    \", HTML.Raw('<li>\\n      Select \"Web application\" as your application type.\\n    </li>'), \"\\n    \", HTML.LI(\"\\n     Set Authorized Javascript Origins to: \", HTML.SPAN({\n    class: \"url\"\n  }, Blaze.View(\"lookup:siteUrl\", function() {\n    return Spacebars.mustache(view.lookup(\"siteUrl\"));\n  })), \"\\n    \"), \"\\n    \", HTML.LI(\"\\n      Set Authorized Redirect URI to: \", HTML.SPAN({\n    class: \"url\"\n  }, Blaze.View(\"lookup:siteUrl\", function() {\n    return Spacebars.mustache(view.lookup(\"siteUrl\"));\n  }), \"/_oauth/google\"), \"\\n    \"), \"\\n    \", HTML.Raw('<li>\\n      Finish by clicking \"Create\".\\n    </li>'), \"\\n  \") ];\n}));\n\n//////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                          //\n// packages/google-config-ui/google_configure.js                                            //\n//                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                            //\nTemplate.configureLoginServiceDialogForGoogle.helpers({\n  siteUrl: function () {\n    var url = Meteor.absoluteUrl();\n    if (url.slice(-1) === \"/\") {\n      url = url.slice(0,-1)\n    }\n    return url;\n  }\n});\n\nTemplate.configureLoginServiceDialogForGoogle.fields = function () {\n  return [\n    {property: 'clientId', label: 'Client ID'},\n    {property: 'secret', label: 'Client secret'}\n  ];\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nPackage._define(\"google-config-ui\");\n\n})();\n","servePath":"/packages/google-config-ui.js"}]