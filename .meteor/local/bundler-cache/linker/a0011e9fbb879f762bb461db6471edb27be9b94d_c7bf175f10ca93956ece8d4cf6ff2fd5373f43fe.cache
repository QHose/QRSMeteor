[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Mongo = Package.mongo.Mongo;\nvar Template = Package['templating-runtime'].Template;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar _ = Package.underscore._;\nvar $ = Package.jquery.$;\nvar jQuery = Package.jquery.jQuery;\nvar Session = Package.session.Session;\nvar Spacebars = Package.spacebars.Spacebars;\nvar HTML = Package.htmljs.HTML;\n\n/* Package-scope variables */\nvar sAlert;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// packages/juliancwirko_s-alert/client/s-alert.js                                                             //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n'use strict';\n\n// helper functions\nvar conditionSet = function (self, msg, condition, customSettings) {\n    var settings = {};\n    var effects = ['jelly', 'genie', 'stackslide', 'scale', 'slide', 'flip', 'bouncyflip'];\n    var currentEffect;\n    var sAlertId;\n    if (!_.isObject(customSettings)) {\n        customSettings = {};\n    }\n    if (_.isObject(msg) && _.isString(condition)) {\n        settings = _.extend(settings, self.settings, JSON.parse(JSON.stringify(msg)), {condition: condition}, customSettings);\n    }\n    if (_.isString(msg) && _.isString(condition)) {\n        settings = _.extend(settings, self.settings, {message: msg}, {condition: condition}, customSettings);\n    }\n    currentEffect = settings && settings.effect;\n    if (_.contains(effects, currentEffect) && !Package['juliancwirko:s-alert-' + currentEffect] && typeof console !== 'undefined') {\n        console.info('Install \"' + currentEffect + '\" effect by running \"meteor add juliancwirko:s-alert-' + currentEffect + '\"');\n    }\n    if (_.isObject(settings) && !_.isEmpty(settings)) {\n        sAlertId = sAlert.collection.insert(settings);\n    }\n    return sAlertId;\n};\n\nvar EVENTS = 'webkitAnimationEnd oAnimationEnd animationEnd msAnimationEnd animationend';\nvar sAlertClose = function (alertId) {\n    var closingTimeout;\n    var onClose;\n    var alertObj;\n    var invokeOnCloseCb = function () {\n        // invoke onClose callback\n        if (onClose && _.isFunction(onClose)) {\n            onClose();\n        }\n    };\n    if (document.hidden || document.webkitHidden || !$('#' + alertId).hasClass('s-alert-is-effect')) {\n        alertObj = sAlert.collection.findOne(alertId);\n        if (alertObj && !_.isEmpty(alertObj)) {\n            onClose = alertObj.onClose;\n        }\n        sAlert.collection.remove(alertId);\n        invokeOnCloseCb();\n    } else {\n        $('.s-alert-box#' + alertId).removeClass('s-alert-show');\n        closingTimeout = Meteor.setTimeout(function () {\n            $('.s-alert-box#' + alertId).addClass('s-alert-hide');\n        }, 100);\n        $('.s-alert-box#' + alertId).off(EVENTS);\n        $('.s-alert-box#' + alertId).on(EVENTS, function () {\n            $(this).hide();\n            alertObj = sAlert.collection.findOne(alertId);\n            if (alertObj && !_.isEmpty(alertObj)) {\n                onClose = alertObj.onClose;\n            }\n            sAlert.collection.remove(alertId);\n            Meteor.clearTimeout(closingTimeout);\n            invokeOnCloseCb();\n        });\n    }\n    // stop audio when closing\n    sAlert.audio && sAlert.audio.load();\n    sAlert.audioInfo && sAlert.audioInfo.load();\n    sAlert.audioError && sAlert.audioError.load();\n    sAlert.audioSuccess && sAlert.audioSuccess.load();\n    sAlert.audioWarning && sAlert.audioWarning.load();\n};\n\n// sAlert object\nsAlert = {\n    settings: {\n        effect: '',\n        position: 'top-right',\n        timeout: 5000,\n        html: false,\n        onRouteClose: true,\n        stack: true,\n        // or you can pass an object:\n        // stack: {\n        //     spacing: 10 // in px\n        //     limit: 3 // when fourth alert appears all previous ones are cleared\n        // }\n        offset: 0, // in px - will be added to first alert (bottom or top - depends of the position in config)\n        beep: false,\n        // beep: '/beep.mp3'  // or you can pass an object:\n        // beep: {\n        //     info: '/beep-info.mp3',\n        //     error: '/beep-error.mp3',\n        //     success: '/beep-success.mp3',\n        //     warning: '/beep-warning.mp3'\n        // }\n        onClose: _.noop\n    },\n    config: function (configObj) {\n        var self = this;\n        if (_.isObject(configObj)) {\n            self.settings = _.extend(self.settings, configObj);\n        } else {\n            throw new Meteor.Error(400, 'Config must be an object!');\n        }\n    },\n    closeAll: function () {\n        sAlert.collection.find({}).forEach(function (sAlertObj) {\n            sAlert.collection.remove(sAlertObj._id);\n            if (sAlertObj.onClose && _.isFunction(sAlertObj.onClose)) {\n                sAlertObj.onClose();\n            }\n        });\n    },\n    close: function (id) {\n        if (_.isString(id)) {\n            sAlertClose(id);\n        }\n    },\n    info: function (msg, customSettings) {\n        return conditionSet(this, msg, 'info', customSettings);\n    },\n    error: function (msg, customSettings) {\n        return conditionSet(this, msg, 'error', customSettings);\n    },\n    success: function (msg, customSettings) {\n        return conditionSet(this, msg, 'success', customSettings);\n    },\n    warning: function (msg, customSettings) {\n        return conditionSet(this, msg, 'warning', customSettings);\n    }\n};\n\n// routers clean\nMeteor.startup(function () {\n    if (typeof Iron !== 'undefined' && typeof Router !== 'undefined') {\n        Router.onStop(function () {\n            sAlert.collection.remove({onRouteClose: true});\n        });\n    }\n    if (typeof FlowRouter !== 'undefined' && _.isObject(FlowRouter.triggers)) {\n        FlowRouter.triggers.enter([function () {\n            sAlert.collection.remove({onRouteClose: true});\n        }]);\n    }\n    if (typeof FlowRouter !== 'undefined' && !_.isObject(FlowRouter.triggers)) {\n        FlowRouter.middleware(function (path, next) {\n            sAlert.collection.remove({onRouteClose: true});\n            next();\n        });\n    }\n});\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// packages/juliancwirko_s-alert/client/s-alert-collection.js                                                  //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n'use strict';\n\n// only client side collections for now..\nsAlert.collection = new Mongo.Collection(null);\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// packages/juliancwirko_s-alert/client/template.s-alert-template.js                                           //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n\nTemplate.__checkName(\"sAlert\");\nTemplate[\"sAlert\"] = new Template(\"Template.sAlert\", (function() {\n  var view = this;\n  return [ Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"sAlertDataLeft\"));\n  }, function() {\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"sAlertContent\")), \"\\n    \" ];\n  }), \"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"sAlertDataRight\"));\n  }, function() {\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"sAlertContent\")), \"\\n    \" ];\n  }), \"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"sAlertDataFullTop\"));\n  }, function() {\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"sAlertContent\")), \"\\n    \" ];\n  }), \"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"sAlertDataFullBottom\"));\n  }, function() {\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"sAlertContent\")), \"\\n    \" ];\n  }) ];\n}));\n\nTemplate.__checkName(\"sAlertContent\");\nTemplate[\"sAlertContent\"] = new Template(\"Template.sAlertContent\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"template\"));\n  }, function() {\n    return [ \"\\n        \", Blaze._TemplateWith(function() {\n      return {\n        template: Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"template\")),\n        data: Spacebars.call(view.lookup(\".\"))\n      };\n    }, function() {\n      return Spacebars.include(function() {\n        return Spacebars.call(Template.__dynamic);\n      });\n    }), \"\\n    \" ];\n  }, function() {\n    return [ \"\\n        \", HTML.DIV({\n      class: function() {\n        return [ \"s-alert-box s-alert-\", Spacebars.mustache(view.lookup(\"condition\")), \" s-alert-\", Spacebars.mustache(view.lookup(\"position\")), \" \", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"effect\"));\n        }, function() {\n          return [ \"s-alert-is-effect s-alert-effect-\", Blaze.View(\"lookup:effect\", function() {\n            return Spacebars.mustache(view.lookup(\"effect\"));\n          }) ];\n        }), \" s-alert-show\" ];\n      },\n      id: function() {\n        return Spacebars.mustache(view.lookup(\"_id\"));\n      },\n      style: function() {\n        return Spacebars.mustache(view.lookup(\"boxPosition\"));\n      }\n    }, \"\\n            \", HTML.DIV({\n      class: \"s-alert-box-inner\"\n    }, \"\\n                \", HTML.P(Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"isHtml\"));\n    }, function() {\n      return Blaze.View(\"lookup:message\", function() {\n        return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"message\")));\n      });\n    }, function() {\n      return Blaze.View(\"lookup:message\", function() {\n        return Spacebars.mustache(view.lookup(\"message\"));\n      });\n    })), \"\\n            \"), \"\\n            \", HTML.SPAN({\n      class: \"s-alert-close\"\n    }), \"\\n        \"), \"\\n    \" ];\n  });\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// packages/juliancwirko_s-alert/client/s-alert-template.js                                                    //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n'use strict';\n\nvar getAlertData = function (currentData, sAlertPosition) {\n    var positionTop = 0;\n    var positionBottom = 0;\n    var padding = 0;\n    var alerts = {};\n    var style;\n    var sAlertBoxHTML;\n    var sAlertBox;\n    var docElement;\n    var sAlertBoxHeight;\n    var templateOverwrite = currentData && currentData.template;\n    var positionTypeTop;\n    var positionTypeBottom;\n    var stackLimit;\n    var alertsCount;\n    var checkFirst = function (type, objId) {\n        var collectionOfType = sAlertCollection.filter(function(obj) {\n            return obj.position === type;\n        });\n        return collectionOfType && collectionOfType[0]._id === objId;\n    };\n    var positionFunc = function (position, positionType, alert, sAlertBox) {\n        padding = alert.stack.spacing || sAlertBox.find('.s-alert-box').css(positionType);\n        if (checkFirst(alert.position, alert._id) && alert.offset) {\n            position = 0;\n            position = position + parseInt(alert.offset);\n        }\n        if (checkFirst(alert.position, alert._id) && alert.stack.spacing) {\n            position = position;\n        } else {\n            position = position + parseInt(padding);\n        }\n        style = positionType + ': ' + position + 'px;';\n        position = position + sAlertBoxHeight;\n        return position;\n    };\n\n    var query = {};\n    if (sAlertPosition === 'left') {\n        query = {$or: [{position: 'top-left'}, {position: 'bottom-left'}]};\n    }\n    if (sAlertPosition === 'right') {\n        query = {$or: [{position: 'top-right'}, {position: 'bottom-right'}]};\n    }\n    if (sAlertPosition === 'full-top') {\n        query = {position: 'top'};\n    }\n    if (sAlertPosition === 'full-bottom') {\n        query = {position: 'bottom'};\n    }\n    var sAlertCollection = sAlert.collection.find(query).fetch();\n\n    return sAlertCollection.map(function (alert) {\n        positionTypeTop = alert.position && /top/g.test(alert.position);\n        positionTypeBottom = alert.position && /bottom/g.test(alert.position);\n        if (alert.stack) {\n            stackLimit = alert.stack && alert.stack.limit;\n            alertsCount = sAlert.collection.find(query).count();\n            // limit check\n            if (stackLimit && alertsCount > stackLimit) {\n                sAlert.close(sAlert.collection.findOne(query)._id);\n            }\n            // checking alert box height - needed to calculate position\n            docElement = document.createElement('div');\n            $(docElement).addClass('s-alert-box-height');\n            if (_.isString(templateOverwrite)) {\n                sAlertBoxHTML = Blaze.toHTMLWithData(Template[templateOverwrite], alert);\n            } else {\n                sAlertBoxHTML = Blaze.toHTMLWithData(Template.sAlertContent, alert);\n            }\n            sAlertBox = $(docElement).html(sAlertBoxHTML);\n            $('body').append(sAlertBox);\n            sAlertBoxHeight = sAlertBox.find('.s-alert-box').outerHeight(true);\n            if (positionTypeTop) {\n                positionTop = positionFunc(positionTop, 'top', alert, sAlertBox);\n            }\n            if (positionTypeBottom) {\n                positionBottom = positionFunc(positionBottom, 'bottom', alert, sAlertBox);\n            }\n            sAlertBox.remove();\n            if (sAlertPosition === 'left') {\n                style = style + 'left: ' + (alert.stack.spacing || sAlertBox.find('.s-alert-box').css('left')) + 'px;';\n            }\n            if (sAlertPosition === 'right') {\n                style = style + 'right: ' + (alert.stack.spacing || sAlertBox.find('.s-alert-box').css('right')) + 'px;';\n            }\n            alerts = _.extend(alert, {boxPosition: style});\n        } else if (alert.offset && positionTypeTop) {\n            alerts = _.extend(alert, {boxPosition: 'top: ' + parseInt(alert.offset) + 'px;'});\n        } else if (alert.offset && positionTypeBottom) {\n            alerts = _.extend(alert, {boxPosition: 'bottom: ' + parseInt(alert.offset) + 'px;'});\n        } else {\n            alerts = alert;\n        }\n        return alerts;\n    });\n};\n\nTemplate.sAlert.helpers({\n    sAlertDataLeft: function () {\n        return getAlertData(Template.currentData(), 'left');\n    },\n    sAlertDataRight: function () {\n        return getAlertData(Template.currentData(), 'right');\n    },\n    sAlertDataFullTop: function () {\n        return getAlertData(Template.currentData(), 'full-top');\n    },\n    sAlertDataFullBottom: function () {\n        return getAlertData(Template.currentData(), 'full-bottom');\n    }\n});\n\nTemplate.sAlertContent.onRendered(function () {\n    var tmpl = this;\n    var data = Template.currentData();\n    var sAlertTimeout = data.timeout;\n    var beep = data.beep;\n    // audio\n    if (beep && _.isString(beep)) {\n        sAlert.audio = new Audio(data.beep);\n        sAlert.audio.load();\n        sAlert.audio.play();\n    }\n    if (beep && _.isObject(beep) && data.condition === 'info') {\n        sAlert.audioInfo = new Audio(data.beep.info);\n        sAlert.audioInfo.load();\n        sAlert.audioInfo.play();\n    }\n    if (beep && _.isObject(beep) && data.condition === 'error') {\n        sAlert.audioError = new Audio(data.beep.error);\n        sAlert.audioError.load();\n        sAlert.audioError.play();\n    }\n    if (beep && _.isObject(beep) && data.condition === 'success') {\n        sAlert.audioSuccess = new Audio(data.beep.success);\n        sAlert.audioSuccess.load();\n        sAlert.audioSuccess.play();\n    }\n    if (beep && _.isObject(beep) && data.condition === 'warning') {\n        sAlert.audioWarning = new Audio(data.beep.warning);\n        sAlert.audioWarning.load();\n        sAlert.audioWarning.play();\n    }\n    if (sAlertTimeout && sAlertTimeout !== 'none') {\n        sAlertTimeout = parseInt(sAlertTimeout);\n        if (tmpl.sAlertCloseTimeout) {\n            Meteor.clearTimeout(tmpl.sAlertCloseTimeout);\n        }\n        tmpl.sAlertCloseTimeout = Meteor.setTimeout(function () {\n            sAlert.close(data._id);\n        }, sAlertTimeout);\n    }\n});\nTemplate.sAlertContent.onDestroyed(function () {\n    if (this.sAlertCloseTimeout) {\n        Meteor.clearTimeout(this.sAlertCloseTimeout);\n    }\n});\n\nTemplate.sAlertContent.events({\n    'click .s-alert-close': function (e, tmpl) {\n        e.preventDefault();\n        Meteor.clearTimeout(tmpl.sAlertCloseTimeout);\n        sAlert.close(this._id);\n    }\n});\n\nTemplate.sAlertContent.helpers({\n    isHtml: function () {\n        var data = Template.currentData();\n        return data && data.html;\n    }\n});\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nPackage._define(\"juliancwirko:s-alert\", {\n  sAlert: sAlert\n});\n\n})();\n","servePath":"/packages/juliancwirko_s-alert.js"}]