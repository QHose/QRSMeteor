[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Accounts = Package['accounts-base'].Accounts;\nvar MongoInternals = Package.mongo.MongoInternals;\nvar Mongo = Package.mongo.Mongo;\nvar _ = Package.underscore._;\nvar AccountsPatchUi = Package['brettle:accounts-patch-ui'].AccountsPatchUi;\nvar LoginState = Package['brettle:accounts-login-state'].LoginState;\n\n/* Package-scope variables */\nvar AccountsGuest, Moniker, res, GuestUsers, guestname, guest;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/artwells_accounts-guest/packages/artwells_accounts-guest.js                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// packages/artwells:accounts-guest/accounts-guest.js                                                           //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nAccountsGuest = {};                                                                                             // 1\nif (typeof AccountsGuest.forced === \"undefined\") {                                                              // 2\n\tAccountsGuest.forced = true; /*default to making loginVisitor automatic, and on logout*/                       // 3\n}                                                                                                               // 4\nif (typeof AccountsGuest.enabled === \"undefined\") {                                                             // 5\n\tAccountsGuest.enabled = true; /* on 'false'  Meteor.loginVisitor() will fail */                                // 6\n}                                                                                                               // 7\nif (typeof AccountsGuest.name === \"undefined\") {                                                                // 8\n  AccountsGuest.name = false; /* defaults to returning \"null\" for user's name */                                // 9\n}                                                                                                               // 10\nif (typeof AccountsGuest.anonymous === \"undefined\") {                                                           // 11\n\tAccountsGuest.anonymous = false; /* defaults to using guests with randomly generated usernames/emails */       // 12\n}                                                                                                               // 13\n                                                                                                                // 14\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// packages/artwells:accounts-guest/accounts-guest-server.js                                                    //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nMoniker = Npm.require('moniker');                                                                               // 1\n                                                                                                                // 2\nAccounts.removeOldGuests = function (before) {                                                                  // 3\n    if (typeof before === 'undefined') {                                                                        // 4\n        before = new Date();                                                                                    // 5\n        before.setHours(before.getHours() - 1);                                                                 // 6\n    }                                                                                                           // 7\n    res = Meteor.users.remove({createdAt: {$lte: before}, 'profile.guest': true});                              // 8\n    return res;                                                                                                 // 9\n};                                                                                                              // 10\nAccounts.registerLoginHandler(\"guest\", function (options) {                                                     // 11\n    if (AccountsGuest.enabled === false || !options || !options.createGuest || Meteor.userId())                 // 12\n        return undefined;                                                                                       // 13\n                                                                                                                // 14\n    var newUserId = null;                                                                                       // 15\n                                                                                                                // 16\n    if (AccountsGuest.anonymous) {                                                                              // 17\n        if (options.email) {                                                                                    // 18\n            throw new Error(\"Can't create a guest user with an email with AccountsGuest.anonymous == true.\\n\"); // 19\n        }                                                                                                       // 20\n        newUserId = Accounts.insertUserDoc(options, {profile: {guest: true}});                                  // 21\n    } else if (!Accounts.createUser) {                                                                          // 22\n        throw new Error(\"Can't create a guest user with falsey AccountsGuest.anonymous unless the accounts-password package is installed.\\n\" +\n            \"Either set AccountsGuest.anonymous or run 'meteor add accounts-password'.\");                       // 24\n    } else {                                                                                                    // 25\n        var guestOptions = createGuestOptions(options.email);                                                   // 26\n                                                                                                                // 27\n        newUserId = Accounts.createUser(guestOptions);                                                          // 28\n    }                                                                                                           // 29\n    return {                                                                                                    // 30\n        userId: newUserId                                                                                       // 31\n    };                                                                                                          // 32\n});                                                                                                             // 33\n                                                                                                                // 34\n                                                                                                                // 35\nLoginState.addSignedUpInterceptor(function (user) {                                                             // 36\n    if (user.profile && user.profile.guest && AccountsGuest.name === false) {                                   // 37\n      user.loginStateSignedUp = false;                                                                          // 38\n    }                                                                                                           // 39\n});                                                                                                             // 40\n                                                                                                                // 41\n/**                                                                                                             // 42\n *  set profile.guest to false when guest adds a service                                                        // 43\n *                                                                                                              // 44\n */                                                                                                             // 45\nvar bamPkg = Package['brettle:accounts-multiple'];                                                              // 46\nif (bamPkg) {                                                                                                   // 47\n    bamPkg.AccountsMultiple.register({                                                                          // 48\n        // brettle:accounts-add-service will cause onSwitchFailure to be called                                 // 49\n        // when a service is added.                                                                             // 50\n        // The new service will have been added to the attempting user.                                         // 51\n        // In that case, we want to update profile.guest.                                                       // 52\n        onSwitchFailure: function (attemptingUser, attempt) {                                                   // 53\n            if (attemptingUser.profile && attemptingUser.profile.guest) {                                       // 54\n                // Hide profile.guest so it doesn't effect LoginState.signedUp()                                // 55\n                delete attemptingUser.profile.guest;                                                            // 56\n                var signedUp = LoginState.signedUp(attemptingUser);                                             // 57\n                                                                                                                // 58\n                attemptingUser.profile.guest = (! signedUp);                                                    // 59\n                Meteor.users.update(attemptingUser._id, {                                                       // 60\n                    $set: {                                                                                     // 61\n                        \"profile.guest\": attemptingUser.profile.guest                                           // 62\n                    }                                                                                           // 63\n                });                                                                                             // 64\n            }                                                                                                   // 65\n        }                                                                                                       // 66\n    });                                                                                                         // 67\n}                                                                                                               // 68\n/**                                                                                                             // 69\n *  set profile.guest: drop guest user when visitor logs in as another user                                     // 70\n *                                                                                                              // 71\n */                                                                                                             // 72\nGuestUsers = new Mongo.Collection('guestUsers');                                                                // 73\nAccounts.onLogin(function(par){                                                                                 // 74\n    if(par.user && par.user.username !== undefined && par.user.username.indexOf('guest') !== -1){               // 75\n        if(!GuestUsers.findOne({connection_id: par.connection.id})){                                            // 76\n            GuestUsers.insert({connection_id: par.connection.id, user_id: par.user._id});                       // 77\n        }                                                                                                       // 78\n    }                                                                                                           // 79\n    else if(par.type !== 'resume'){                                                                             // 80\n        var guest = GuestUsers.findOne({connection_id: par.connection.id});                                     // 81\n        if (guest) {                                                                                            // 82\n            Meteor.users.remove(guest.user_id);                                                                 // 83\n            GuestUsers.remove(guest._id);                                                                       // 84\n        }                                                                                                       // 85\n    }                                                                                                           // 86\n});                                                                                                             // 87\n                                                                                                                // 88\n/* adapted from pull-request https://github.com/dcsan                                                           // 89\n* See https://github.com/artwells/meteor-accounts-guest/commit/28cbbf0eca2d80f78925ac619abf53d0769c0d9d         // 90\n*/                                                                                                              // 91\nMeteor.methods({                                                                                                // 92\n    createGuest: function (email)                                                                               // 93\n    {                                                                                                           // 94\n        var guest = createGuestOptions(email);                                                                  // 95\n        Accounts.createUser(guest);                                                                             // 96\n        //    console.log(\"createGuest\" + guestname);                                                           // 97\n        return guest;                                                                                           // 98\n    }                                                                                                           // 99\n});                                                                                                             // 100\n                                                                                                                // 101\n                                                                                                                // 102\nfunction createGuestOptions(email) {                                                                            // 103\n        check(email, Match.OneOf(String, null, undefined));                                                     // 104\n                                                                                                                // 105\n        /* if explicitly disabled, happily do nothing */                                                        // 106\n        if (AccountsGuest.enabled === false){                                                                   // 107\n            return true;                                                                                        // 108\n        }                                                                                                       // 109\n                                                                                                                // 110\n        //    count = Meteor.users.find().count() + 1                                                           // 111\n        if (AccountsGuest.name === true) {                                                                      // 112\n          guestname = Moniker.choose();                                                                         // 113\n          // Just in case, let's make sure this name isn't taken                                                // 114\n          while (Meteor.users.find({username:guestname}).count() > 0) {                                         // 115\n            guestname = Moniker.choose();                                                                       // 116\n          }                                                                                                     // 117\n        } else {                                                                                                // 118\n          guestname = \"guest-#\" + Random.id();                                                                  // 119\n        }                                                                                                       // 120\n                                                                                                                // 121\n        if (!email) {                                                                                           // 122\n            email = guestname + \"@example.com\";                                                                 // 123\n        }                                                                                                       // 124\n                                                                                                                // 125\n        guest = {                                                                                               // 126\n            username: guestname,                                                                                // 127\n            email: email,                                                                                       // 128\n            profile: {guest: true},                                                                             // 129\n            password: Meteor.uuid(),                                                                            // 130\n        };                                                                                                      // 131\n        return guest;                                                                                           // 132\n}                                                                                                               // 133\n                                                                                                                // 134\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nPackage._define(\"artwells:accounts-guest\", {\n  AccountsGuest: AccountsGuest\n});\n\n})();\n","servePath":"/packages/artwells_accounts-guest.js"}]