[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Template = Package['templating-runtime'].Template;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar Mongo = Package.mongo.Mongo;\nvar $ = Package.jquery.$;\nvar jQuery = Package.jquery.jQuery;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Spacebars = Package.spacebars.Spacebars;\nvar HTML = Package.htmljs.HTML;\n\n/* Package-scope variables */\nvar MeteorToysDict, Mongol, updData, newId, self, MongolEditingStatus, Mongol_InlineEditor, current, content, DocumentPosition, CurrentCollection, a, b, colorized, MeteorToys_Sub, thisishack, sessionKey, CollectionName, CollectionCount, CurrentDocument, DocumentID, ValidatedCurrentDocument, list, docID, docIndex, currentDoc, newPosition;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/msavin_mongol/lib/common.js                                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n// Grab the Dict\nif (Meteor.isClient) {\n  Meteor.startup(function () {\n    MeteorToysDict = Package[\"meteortoys:toykit\"].MeteorToys;\n  })\n}\n\n// Create object and reserve name across the package\nif (Mongol === undefined) {  \n  Mongol = {};\n}\n\nMongol = {\n  'getDocumentUpdate': function (data) {\n    var elementID = 'MongolDoc_' + data,\n      newData = false;\n      updData = document.getElementById(elementID);\n      if (updData) {\n        newData = updData.textContent;\n      }\n\n    return newData;\n  },\n  'error': function (data) {\n    switch (data) {\n      case \"json.parse\":\n        alert(\"There is an error with your JSON syntax.\\n\\nNote: keys and string values need double quotes.\");\n        break;\n      case \"duplicate\":\n        alert(\"Strange, there was an error duplicating your document.\");\n        break;\n      case \"remove\":\n        alert(\"Strange, there was an error removing your document.\");\n        break;\n      case \"insert\":\n        alert(\"Strange, there was an error inserting your document.\");\n        break;\n      case \"update\":\n        alert(\"There was an error updating your document. Please review your changes and try again.\");\n        break;\n      default:\n        return \"Unknown Error\";\n        break;\n    }\n  },\n  'parse': function (data) {\n      var newObject = null;\n      try { \n        var reISO = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*))(?:Z|(\\+|-)([\\d|:]*))?$/;\n        var dateParser = function (key, value) {\n          if (_.isString(value)) {\n            var a = reISO.exec(value);\n            if (a) {\n              return new Date(value);\n            }\n          }\n          return value;\n        }\n        newObject = JSON.parse(data, dateParser);\n      }\n      catch (error) {\n        Mongol.error(\"json.parse\");\n      }\n      return newObject;\n  },\n  'detectCollections': function () {\n    if (MeteorToysDict.get('Mongol') === undefined) {\n        // Note: this returns the actual mongo collection name\n        var collections = _.map(Mongo.Collection.getAll(), function (collection) {\n        return collection.name;\n      });\n\n      var defaults = {\n        'collections': collections,\n      };\n\n      MeteorToysDict.set(\"Mongol\", defaults);\n\n    }\n  },\n  'hideCollection': function (collectionName) {\n\n    var MongolConfig = MeteorToysDict.get(\"Mongol\"),\n        collections  = MongolConfig.collections;\n\n    collections = _.without(collections, collectionName);\n    MongolConfig.collections = collections;\n    MeteorToysDict.set(\"Mongol\", MongolConfig);\n    \n  },\n  'showCollection': function (collectionName) {\n    // In case a collection does not get detected, like a local one\n    var MongolConfig = MeteorToysDict.get(\"Mongol\"),\n        collections  = MongolConfig.collections;\n\n    collections.push(collectionName);\n    \n    MeteorToysDict.set(\"Mongol\", MongolConfig);\n  },\n  'hideVelocity': function () {\n    this.hideCollection('velocityTestFiles');\n    this.hideCollection('velocityFixtureFiles');\n    this.hideCollection('velocityTestReports');\n    this.hideCollection('velocityAggregateReports');\n    this.hideCollection('velocityLogs');\n    this.hideCollection('velocityMirrors');\n    this.hideCollection('velocityOptions');\n  },\n  'hideMeteorToys': function () {\n    this.hideCollection(\"MeteorToys.Impersonate\");\n    this.hideCollection(\"MeteorToys.JetSetter\");\n    this.hideCollection(\"MeteorToys.Mongol\");\n    this.hideCollection(\"MeteorToys.AutoPub\");\n    this.hideCollection(\"MeteorToys.Email\");\n    this.hideCollection(\"MeteorToys.Result\");\n    this.hideCollection(\"MeteorToys.Throttle\");\n  },\n  'hideMeteor': function () {\n    this.hideCollection(\"meteor_accounts_loginServiceConfiguration\")\n    this.hideCollection(\"meteor_autoupdate_clientVersions\")\n  },\n  'Collection': function (collectionName) {\n\n    // Go through a variety of means of trying to return the correct collection\n    return Mongo.Collection.get(collectionName)\n      // This should automatically match all collections by default\n      // including namespaced collections\n\n    || ((Meteor.isServer) ? eval(collectionName) : Meteor._get.apply(null,[window].concat(collectionName.split('.'))))\n    // For user defined collection names\n    // in the form of Meteor's Mongo.Collection names as strings\n\n    || ((Meteor.isServer) ? eval(firstToUpper(collectionName)) : Meteor._get.apply(null,[window].concat(firstToUpper(collectionName).split('.'))))\n    // For user defined collections where the user has typical upper-case collection names\n    // but they've put actual mongodb collection names into the Mongol config instead of Meteor's Mongo.Collection names as strings\n\n    || null;\n    // If the user has gone for unconventional casing of collection names,\n    // they'll have to get them right (i.e. Meteor's Mongo.Collection names as string) in the Mongol config manually\n\n    // Changes the first character of a string to upper case\n\n    function firstToUpper(text) {\n\n      return text.charAt(0).toUpperCase() + text.substr(1);\n\n    }\n  },\n  'insertDoc': function (MongolCollection, documentData) {\n\n    check(MongolCollection, Match.Any);\n    check(documentData, Match.Any);\n\n    if (!!Package['aldeed:simple-schema'] && !!Package['aldeed:collection2'] && _.isFunction(MongolCollection.simpleSchema) && MongolCollection._c2) {\n      // This is to nullify the effects of SimpleSchema/Collection2\n      newId = MongolCollection.insert(documentData, {\n        filter: false,\n        autoConvert: false,\n        removeEmptyStrings: false,\n        validate: false\n      });\n    }\n    else {\n      newId = MongolCollection.insert(documentData);\n    }\n    return newId;\n  }\n}\n\n\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/msavin_mongol/client/row_header/template.header.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"Mongol_header\");\nTemplate[\"Mongol_header\"] = new Template(\"Template.Mongol_header\", (function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return {\n      name: Spacebars.call(\"mongol_618\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"Mongol_Component\"), function() {\n      return [ \"\\n\\n    \", HTML.STRONG(\"Mongol\"), HTML.BR(), \"\\n    \", HTML.DIV({\n        class: \"Mongol_contentView\"\n      }, \"\\n    \", HTML.Comment(\"  \"), \"\\n      \", HTML.DIV({\n        class: \"Mongol_docMenu\",\n        style: \"text-indent: 8px\"\n      }, \"\\n        In-App MongoDB Editor\\n      \"), \"\\n      \", HTML.DIV({\n        class: \"Mongol_documentViewer \"\n      }, \"\\n\", HTML.PRE({\n        class: \"MeteorToys-off\"\n      }, \"{ \\n  \", HTML.SPAN({\n        class: \"MeteorToys_key\"\n      }, '\"created_by\"'), ': \"', HTML.A({\n        href: \"http://maxsavin.com\"\n      }, \"Max Savin\"), '\",\\n  ', HTML.SPAN({\n        class: \"MeteorToys_key\"\n      }, '\"docs_at\"'), ':    \"', HTML.A({\n        href: \"https://meteor.toys\"\n      }, \"Meteor Toys\"), '\",\\n  ', HTML.SPAN({\n        class: \"MeteorToys_key\"\n      }, '\"license\"'), ':    \"', HTML.A({\n        href: \"https://github.com/MeteorToys/allthings/blob/master/LICENSE.md\"\n      }, \"MT License\"), '\",\\n}\\n'), \"\\n      \"), \"\\n    \", HTML.Comment(\"  \"), \"\\n    \"), \"\\n\\n  \" ];\n    });\n  });\n}));\n\nTemplate.__checkName(\"Mongol_header_pro\");\nTemplate[\"Mongol_header_pro\"] = new Template(\"Template.Mongol_header_pro\", (function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return {\n      name: Spacebars.call(\"cmongol_618\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"Mongol_Component\"), function() {\n      return [ \"\\n    \", HTML.STRONG(\"Mongol Pro\"), HTML.BR(), \"\\n    \", HTML.DIV({\n        class: \"Mongol_contentView\"\n      }, \"\\n      \", HTML.Comment(\"  \"), \"\\n      \", HTML.DIV({\n        class: \"Mongol_docMenu\",\n        style: \"text-indent: 8px\"\n      }, \"\\n        Reset a Collection\\n      \"), \"\\n      \", HTML.DIV({\n        class: \"Mongol_documentViewer \",\n        style: \"padding-top: 0px\"\n      }, \"\\n        \", HTML.Comment(' <div class=\"MeteorToys_row Mongol_Impersonation MeteorToys_row_hoverable\" style=\"margin-top: 0px\">\\n          Reset All Collections\\n        </div> '), \"\\n        \", HTML.DIV({\n        class: \"MeteorToys_row Mongol_All MeteorToys_row_hoverable\",\n        style: \"margin-top: 0px; line-height: 20px\"\n      }, \"\\n          All Collections + localStorage\\n        \"), \"\\n        \", HTML.DIV({\n        class: \"MeteorToys_row Mongol_MeteorToys MeteorToys_row_hoverable\",\n        style: \"margin-top: 0px; line-height: 20px\"\n      }, \"\\n          Meteor Toys\\n        \"), \"\\n        \", HTML.DIV({\n        class: \"MeteorToys_row Mongol_Impersonation MeteorToys_row_hoverable\",\n        style: \"margin-top: 0px; line-height: 20px\"\n      }, \"\\n          Authenticate Toy\\n        \"), \"\\n        \", Blaze.Each(function() {\n        return Spacebars.call(view.lookup(\"collection\"));\n      }, function() {\n        return [ \"\\n          \", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\".\"));\n        }, function() {\n          return [ \"\\n            \", HTML.DIV({\n            class: \"MeteorToys_row MeteorToys_row_reset MeteorToys_row_hoverable\",\n            style: \"margin-top: 0px; line-height: 20px\"\n          }, \"\\n              \", Blaze.View(\"lookup:.\", function() {\n            return Spacebars.mustache(view.lookup(\".\"));\n          }), \" \\n            \"), \"\\n          \" ];\n        }), \"\\n        \" ];\n      }), \"\\n      \"), \"\\n    \"), \"\\n  \" ];\n    });\n  });\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/msavin_mongol/client/row_header/header.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.Mongol_header_pro.events({\n  'click .MeteorToys_row_reset': function () {\n    self = String(this);\n    if (confirm('This will permanently remove all the documents in ' + self  + '.')) {\n      Meteor.call('Mongol_resetCollection', self, function (e, r) {\n        if (e) {\n          alert(\"Sorry, there was an error removing \" + self + '.')\n        }\n      })\n    }\n  },\n  'click .MeteorToys_row_reset_all': function () {\n    // self = String(this);\n    if (confirm('This will permanently remove all the documents in your collections.')) {\n      Meteor.call('Mongol_resetCollections', self, function (e, r) {\n        if (e) {\n          alert(\"Sorry, there was an error removing your collections.\");\n        }\n      })\n    }\n  },\n  'click .Mongol_Impersonation': function () {\n    self = \"MeteorToys.Impersonate\";\n    if (confirm('This will reset your Authentication recents list')) {\n      Meteor.call('Mongol_resetCollection', self, function (e, r) {\n        if (e) {\n          alert(\"Sorry, there was an error removing \" + self + '.')\n        }\n      })\n    }\n  },\n  'click .Mongol_MeteorToys': function (){\n    if (confirm('This will reset all your Meteor Toys data.')) {\n      Meteor.call('Mongol_resetMeteorToys', self, function (e, r) {\n        if (e) {\n          alert(\"Sorry, there was an error removing \" + self + '.')\n        }\n      })\n    }\n  },\n  'click .Mongol_All': function () {\n    if (confirm('This will reset all your Meteor collections and localStorage.')) {\n      Meteor.call('Mongol_resetAll', function (e, r) {\n        if (e) {\n          alert(\"Sorry, there was an error removing \" + self + '.')\n        }\n        if (r) {\n          MeteorToys.clear();\n          window.location.reload()\n        }\n      })\n    }\n  }\n});\n\nTemplate.Mongol_header_pro.helpers({\n  collection: function () {\n    var x = MeteorToysDict.get(\"Mongol\");\n    return x.collections;\n  }\n});\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/msavin_mongol/client/doc_editor/template.docViewer.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"Mongol_docViewer\");\nTemplate[\"Mongol_docViewer\"] = new Template(\"Template.Mongol_docViewer\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"notEmpty\"));\n  }, function() {\n    return [ \"\\n    \", Spacebars.include(view.lookupTemplate(\"Mongol_docControls\")), \"\\n    \", Spacebars.With(function() {\n      return Spacebars.call(view.lookup(\"activeDocument\"));\n    }, function() {\n      return [ \"\\n      \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"editStyle\"));\n      }, function() {\n        return [ \"\\n        \", HTML.DIV({\n          class: function() {\n            return [ \"Mongol_documentViewer \", Spacebars.mustache(view.lookup(\"editStyle\")) ];\n          },\n          id: function() {\n            return [ \"MongolDoc_\", Spacebars.mustache(view.lookup(\"..\")) ];\n          },\n          contenteditable: function() {\n            return Spacebars.mustache(view.lookup(\"editContent\"));\n          }\n        }, \"  \\n          \", HTML.PRE({\n          spellcheck: \"false\"\n        }, Blaze.View(\"lookup:normalJSON\", function() {\n          return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"normalJSON\")));\n        })), \"\\n        \"), \"\\n      \" ];\n      }, function() {\n        return [ \"\\n        \", HTML.DIV({\n          class: function() {\n            return [ \"Mongol_documentViewer \", Spacebars.mustache(view.lookup(\"editStyle\")) ];\n          },\n          id: function() {\n            return [ \"MongolDoc_\", Spacebars.mustache(view.lookup(\"..\")) ];\n          },\n          contenteditable: function() {\n            return Spacebars.mustache(view.lookup(\"editContent\"));\n          }\n        }, \"  \\n            \", HTML.PRE({\n          spellcheck: \"false\"\n        }, Blaze.View(\"lookup:editableJSON\", function() {\n          return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"editableJSON\")));\n        })), \"\\n        \"), \"\\n      \" ];\n      }), \"\\n    \" ];\n    }, function() {\n      return [ \"\\n      \", HTML.DIV({\n        class: \"Mongol_documentViewer\",\n        id: function() {\n          return [ \"MongolDoc_\", Spacebars.mustache(view.lookup(\".\")) ];\n        }\n      }, \"  \\n        \", HTML.PRE(\"No document found\"), \"\\n      \"), \"\\n    \" ];\n    }), \"\\n  \" ];\n  }, function() {\n    return [ \"\\n    \", Spacebars.include(view.lookupTemplate(\"Mongol_docInsert\")), \"\\n  \" ];\n  });\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/msavin_mongol/client/doc_editor/docViewer.js                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.Mongol_docViewer.helpers({\n  activeDocument: function () {\n    var collectionName = String(this);\n    var currentCollection = Mongol.Collection(collectionName);\n    var documents = currentCollection.find({}, {transform: null}).fetch();\n    var sessionKey = \"Mongol_\" + String(this);\n    var docNumber = MeteorToysDict.get(sessionKey);\n    var docCurrent = documents[docNumber];\n    return docCurrent;\n  },\n  editableJSON: function () {\n    var docCurrent = this;\n    var json_output = JSON.stringify(docCurrent, null, 2), colorize;\n\n    if (!(json_output === undefined)) {\n      colorize = Package[\"meteortoys:toykit\"].MeteorToys_JSON.colorizeEditable(json_output);\n    } else {\n      colorize = json_output;\n    }\n\n    return colorize;\n  },\n  normalJSON: function () {\n    var docCurrent  = this,\n        json_output = JSON.stringify(docCurrent, null, 2);\n\n    return json_output;\n  },\n  editContent: function () {\n    var editMode = MeteorToysDict.get(\"Mongol_editMode\");\n\n    if (editMode) {\n      return \"true\";\n    }\n  },\n  editStyle: function () {\n    var editMode = MeteorToysDict.get(\"Mongol_editMode\");\n\n    if (editMode) {\n      return \"Mongol_editable\";\n    }\n  },\n  notEmpty: function () {\n    var documentCount = Mongol.Collection(String(this)) && Mongol.Collection(String(this)).find().count() || 0;\n    \n    if (documentCount >= 1) {\n      return true;\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/msavin_mongol/client/doc_editor/inline.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n// There are four actions that the inline editor leverages:\n//  - focus in         - set editing state\n//  - focus out        - save update\n//  - enter key        - focus out\n//  - escape key       - cancel\n\n// Loop for empty keys, if present remove it \n// toggle true and false\n\nMongolEditingStatus = false; \n\nMongol_InlineEditor = {\n  createBackup: function () {\n    current = MeteorToysDict.get(\"Mongol_currentCollection\");\n    content = $(\"#MongolDoc_\" + current).html();\n    MeteorToysDict.set(\"Mongol_backup\", content);\n  },\n  restoreBackup: function () {\n    // Mongol_InlineEditor.removeTextSelection\n    current = MeteorToysDict.get(\"Mongol_currentCollection\");\n    content = MeteorToysDict.get(\"Mongol_backup\");\n    $(\"#MongolDoc_\" + current).html(content);\n  },\n  clearBackup: function () {\n    MeteorToysDict.set(\"Mongol_backup\", null);\n  },\n  getData: function () {\n    var target = MeteorToysDict.get(\"Mongol_currentCollection\"),\n        data   = $(\"#Mongol_c\" + target + \" pre\").text();\n\n    var newObject = null;\n\n    try { \n      var reISO = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*))(?:Z|(\\+|-)([\\d|:]*))?$/;\n      var dateParser = function (key, value) {\n        if (_.isString(value)) {\n          var a = reISO.exec(value);\n          if (a) {\n            return new Date(value);\n          }\n        }\n        return value;\n      }\n      newObject = JSON.parse(data, dateParser);\n    }\n    catch (error) {\n      Mongol_InlineEditor.restoreBackup();\n    }\n\n    return newObject;\n  },\n  updateData: function () {\n    \n    var collectionName = (MeteorToysDict.equals(\"Mongol_currentCollection\", \"account_618\")) ? \"users\" : MeteorToysDict.get(\"Mongol_currentCollection\"),\n      oldObject,\n      newObject,\n      newData;\n    if (MeteorToysDict.equals(\"Mongol_currentCollection\", \"account_618\")) {\n      newData = Mongol.getDocumentUpdate(\"account_618\");\n      // var newObject = Mongol.parse(newData);\n      newObject = Mongol_InlineEditor.getData();\n      oldObject = Meteor.user();\n      // console.log(targetCollection);\n      // console.log(newData);\n      // console.log(newObject);\n    } else {\n      var sessionKey = \"Mongol_\" + collectionName;\n      DocumentPosition = MeteorToysDict.get(sessionKey),\n      CurrentCollection = Mongol.Collection(collectionName).find({}, {transform: null}).fetch();\n      newData   = Mongol.getDocumentUpdate(collectionName);\n      // var newObject = Mongol.parse(newData);\n      newObject = Mongol_InlineEditor.getData();\n      oldObject = CurrentCollection[DocumentPosition];\n    }\n\n    // \n    delete newObject[\"\"];\n    delete newObject[\" \"];\n\n    if (newObject) {\n      Meteor.call(\"Mongol_update\", collectionName, newObject, Mongol.validateDocument(oldObject), function(error, result) {\n        if (!error) {\n          // MeteorToysDict.set('Mongol_editMode', null);\n          // Mongol_InlineEditor.removeTextSelection();\n        } else {\n          Mongol.error('update');\n          Mongol_InlineEditor.restoreBackup();\n        }\n      });\n    }\n  },\n  bindHotkeys: function () {\n    $('.MeteorToys_inline').keydown(function(event) {\n      if (event.keyCode == 10 || event.keyCode == 13) {\n        event.preventDefault();\n        $('.MeteorToys_inline:focus').blur();\n      }\n\n      if (event.keyCode == 27) {\n        Mongol_InlineEditor.restoreBackup();\n        $('.MeteorToys_inline:focus').blur();\n      }\n    });\n  },\n  removeTextSelection: function () {\n    if (window.getSelection) {\n      if (window.getSelection().empty) {  // Chrome\n        window.getSelection().empty();\n      } else if (window.getSelection().removeAllRanges) {  // Firefox\n        window.getSelection().removeAllRanges();\n      }\n    } else if (document.selection) {  // IE?\n      document.selection.empty();\n    }\n  }\n}\n\nTemplate.Mongol_docViewer.events({\n  'dblclick .Mongol_documentViewer': function () {\n    MeteorToysDict.set(\"Mongol_editMode\", true);\n  },\n  'focusout .MeteorToys_inline': function () {\n    a = Mongol_InlineEditor.updateData();\n    b = Mongol_InlineEditor.removeTextSelection();\n    // console.log(\"focusedout\");\n  },\n  'focusin .MeteorToys_inline': function () {\n    a = Mongol_InlineEditor.bindHotkeys();\n    b = Mongol_InlineEditor.createBackup();\n    // console.log(\"focusedin\");\n  },\n  'dblclick .MeteorToys_inline': function (e,t) {\n    e.stopPropagation();\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/msavin_mongol/client/row_account/template.account.js                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"Mongol_account\");\nTemplate[\"Mongol_account\"] = new Template(\"Template.Mongol_account\", (function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return {\n      name: Spacebars.call(\"account_618\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"Mongol_Component\"), function() {\n      return [ \"\\n\\n\\t\\t\\t\", HTML.Comment(\" Display sign in status \"), \"\\n\\t\\t\\t\", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"currentUser\"));\n      }, function() {\n        return [ \"\\n\\t\\t\\t\\t\", HTML.DIV({\n          class: \"Mongol_account_state MeteorToys-background-green\"\n        }), \"\\n\\t\\t\\t\" ];\n      }, function() {\n        return [ \"\\n\\t\\t\\t\\t\", HTML.DIV({\n          class: \"Mongol_account_state MeteorToys-background-red\"\n        }), \"\\n\\t\\t\\t\" ];\n      }), \"\\n\\n\\t\\t\\t\", HTML.Comment(\" Row Name \"), \"\\n\\t\\t\\t\", HTML.DIV({\n        class: \"Mongol_icon Mongol_icon_user\"\n      }), \"\\n\\t\\t\\tAccount\\n     \\n        \", HTML.DIV({\n        class: \"Mongol_contentView\"\n      }, \"\\n\\n\\t\\t\\t\", HTML.Comment(\" Document Viewer \"), \"\\n\\t\\t\\t\", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"currentUser\"));\n      }, function() {\n        return [ \"\\n\\t\\t\\t\\t\", Spacebars.include(view.lookupTemplate(\"Mongol_accountViewer\")), \"\\n\\t\\t\\t\" ];\n      }, function() {\n        return [ \"\\n\\t\\t\\t\\t\", Spacebars.include(view.lookupTemplate(\"Mongol_accountViewer_notSignedIn\")), \"\\n\\t\\t\\t\" ];\n      }), \"\\n\\n\\t\\t\"), \"\\n\\n\\t\" ];\n    });\n  });\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/msavin_mongol/client/row_account/account.js                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/msavin_mongol/client/row_account/template.accountViewer.js                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"Mongol_accountViewer\");\nTemplate[\"Mongol_accountViewer\"] = new Template(\"Template.Mongol_accountViewer\", (function() {\n  var view = this;\n  return [ Spacebars.include(view.lookupTemplate(\"Mongol_docControls\")), \"\\n\\n\\t\", HTML.DIV({\n    class: function() {\n      return [ \"Mongol_documentViewer \", Spacebars.mustache(view.lookup(\"editStyle\")) ];\n    },\n    id: \"MongolDoc_account_618\",\n    contenteditable: function() {\n      return Spacebars.mustache(view.lookup(\"editContent\"));\n    }\n  }, \"\\t\\n\\t\\t\", HTML.PRE(Blaze.View(\"lookup:accountData\", function() {\n    return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"accountData\")));\n  })), \"\\n\\t\") ];\n}));\n\nTemplate.__checkName(\"Mongol_accountViewer_notSignedIn\");\nTemplate[\"Mongol_accountViewer_notSignedIn\"] = new Template(\"Template.Mongol_accountViewer_notSignedIn\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"Mongol_docMenu\">\\n\\t\\t\\t<div class=\"Mongol_docBar1\" style=\"text-indent: 8px\">\\n\\t\\t\\t\\tNot Signed In\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t<div class=\"Mongol_documentViewer\">\\t\\n\\t\\t<!-- Nothing -->\\n\\t</div>');\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/msavin_mongol/client/row_account/accountViewer.js                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.Mongol_accountViewer.helpers({\n  accountData: function () {\n    \n    var docCurrent  = Meteor.user(),\n        json_output = JSON.stringify(docCurrent, null, 2);\n\n        if (MeteorToysDict.get(\"Mongol_editMode\")) {\n          colorized = json_output\n        } else {\n          colorized = Package[\"meteortoys:toykit\"].MeteorToys.colorizeEditable(json_output);\n        }\n    return colorized;\n\n  },\n  editContent: function () {\n\n    var editMode = MeteorToysDict.get(\"Mongol_editMode\");\n\n    if (editMode) {\n      return \"true\";\n    }\n\n  },\n  editStyle: function () {\n\n    var editMode = MeteorToysDict.get(\"Mongol_editMode\");\n\n    if (editMode) {\n      return \"Mongol_editable\";\n    }\n\n  },\n  usercode: function () {\n    \n    return Meteor.userId();\n\n  },\n});\n\n\nTemplate.Mongol_accountViewer.events({\n    'dblclick .Mongol_documentViewer': function () {\n    MeteorToysDict.set(\"Mongol_editMode\", true);\n  },\n  'focusout .MeteorToys_inline': function () {\n    a = Mongol_InlineEditor.updateData();\n    b = Mongol_InlineEditor.removeTextSelection();\n    // console.log(\"focusedout\");\n  },\n  'focusin .MeteorToys_inline': function () {\n    a = Mongol_InlineEditor.bindHotkeys();\n    b = Mongol_InlineEditor.createBackup();\n    // console.log(\"focusedin\");\n  },\n  'dblclick .MeteorToys_inline': function (e,t) {\n    e.stopPropagation();\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/msavin_mongol/client/row_collection_notFound/template.notFound.js                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"Mongol_collection_notFound\");\nTemplate[\"Mongol_collection_notFound\"] = new Template(\"Template.Mongol_collection_notFound\", (function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return {\n      name: Spacebars.call(\"no_collections\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"Mongol_Component\"), function() {\n      return [ \"\\n\\n    \", HTML.DIV({\n        class: \"Mongol_icon Mongol_icon_collection\"\n      }), \"No Collections\", HTML.BR(), \"\\n    \", HTML.DIV({\n        class: \"Mongol_contentView\"\n      }, \"\\n    \", HTML.Comment(\"  \"), \"\\n      \", HTML.DIV({\n        class: \"Mongol_docMenu\",\n        style: \"text-indent: 8px\"\n      }, \"\\n        None Detected\\n      \"), \"\\n      \", HTML.DIV({\n        class: \"Mongol_documentViewer \"\n      }, \"\\n\\n        If you think this is an error,\", HTML.BR(), \"\\n        please report it on \", HTML.A({\n        href: \"https://github.com/msavin/Mongol\",\n        style: \"color: #cc0000\"\n      }, \"GitHub\"), \".\\n        \\n      \"), \"\\n    \", HTML.Comment(\"  \"), \"\\n    \"), \"\\n\\n  \" ];\n    });\n  });\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/msavin_mongol/client/row_collection_notFound/notFound.js                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/msavin_mongol/client/row_collection/template.collections.js                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"Mongol_collection\");\nTemplate[\"Mongol_collection\"] = new Template(\"Template.Mongol_collection\", (function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return {\n      name: Spacebars.call(view.lookup(\".\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"Mongol_Component\"), function() {\n      return [ \"\\n\\n\\t\\t\", HTML.Comment(\" Collection Count \"), \"\\n\\t\\t\", HTML.DIV({\n        class: \"Mongol_counter\"\n      }, \"\\n\\t\\t\\t\", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"collectionCount\"));\n      }, function() {\n        return [ \"\\n\\t\\t\\t\", HTML.SPAN({\n          class: \"MongolHide\"\n        }, Blaze.View(\"lookup:currentPosition\", function() {\n          return Spacebars.mustache(view.lookup(\"currentPosition\"));\n        }), \"/\") ];\n      }), Blaze.View(\"lookup:collectionCount\", function() {\n        return Spacebars.mustache(view.lookup(\"collectionCount\"));\n      }), \"\\n\\t\\t\"), \"\\n\\n\\t\\t\", HTML.Comment(\" Collection Name \"), \"\\n\\t\\t\", HTML.DIV({\n        class: \"Mongol_row_name\"\n      }, HTML.DIV({\n        class: \"Mongol_icon Mongol_icon_collection\"\n      }), Blaze.View(\"lookup:.\", function() {\n        return Spacebars.mustache(view.lookup(\".\"));\n      }), Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"xf\"));\n      }, function() {\n        return Blaze.View(\"lookup:xf\", function() {\n          return Spacebars.mustache(view.lookup(\"xf\"));\n        });\n      })), \"\\n    \\t    \\n\\t\\t\", HTML.Comment(\" Document Viewer \"), \"\\n\\t\\t\", HTML.DIV({\n        class: \"Mongol_contentView\"\n      }, \"\\n\\t\\t\\t\", Spacebars.include(view.lookupTemplate(\"Mongol_docViewer\")), \"\\n\\t\\t\"), \"\\n\\t\\t\\n\\t\" ];\n    });\n  });\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/msavin_mongol/client/row_collection/collections.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.Mongol_collection.events({\n  'click': function () {\n\n    var targetCollection = String(this),\n        sessionKey       = \"Mongol_\" + targetCollection;\n\n    if (MeteorToysDict.equals(\"Mongol_currentCollection\", targetCollection)) {\n      \n      // do nothing\n    \n    } else {\n      \n      // If the collection doesn't have an index key set,\n      // start it from the first document\n      \n      if (!MeteorToysDict.get(String(sessionKey))) {\n        MeteorToysDict.set(String(sessionKey), 0);\n      }\n      \n    }\n\n  },\n});\n\nTemplate.Mongol_collection.helpers({\n  collectionCount: function () {\n\n    var collectionName = String(this);\n    var collectionVar = Mongol.Collection(collectionName);\n\n    var count = collectionVar && collectionVar.find().count() || 0;\n\n    return count;\n\n  },\n  currentPosition: function () {\n\n    var targetCollection = String(this);\n    var sessionKey = \"Mongol_\" + targetCollection;\n\n    var current = MeteorToysDict.get(sessionKey);\n    var count = current + 1;\n\n    return count;\n\n  }\n});\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/msavin_mongol/client/row_trash/template.main.js                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"Mongol_trash\");\nTemplate[\"Mongol_trash\"] = new Template(\"Template.Mongol_trash\", (function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return {\n      name: Spacebars.call(\"trash\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"Mongol_Component\"), function() {\n      return [ \"\\n\\t  \\n\\t\\t\", HTML.DIV({\n        class: \"Mongol_counter\"\n      }, \"\\n\\t\\t\\t\", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"collectionCount\"));\n      }, function() {\n        return [ \"\\n\\t\\t\\t\\t\", HTML.SPAN({\n          class: \"MongolHide\"\n        }, Blaze.View(\"lookup:currentPosition\", function() {\n          return Spacebars.mustache(view.lookup(\"currentPosition\"));\n        }), \"/\") ];\n      }), Blaze.View(\"lookup:collectionCount\", function() {\n        return Spacebars.mustache(view.lookup(\"collectionCount\"));\n      }), \"\\n\\t\\t\"), \"\\n\\n\\t\\t\", HTML.DIV({\n        class: \"Mongol_row_name\"\n      }, HTML.DIV({\n        class: \"Mongol_icon Mongol_icon_trash\"\n      }), \"Trash\"), \"\\n\\n\\t\\t\", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"collectionCount\"));\n      }, function() {\n        return [ \"\\n\\t\\t\\t\", Spacebars.include(view.lookupTemplate(\"Mongol_trash_viewer\")), \"\\n\\t\\t\" ];\n      }, function() {\n        return [ \"\\n\\t\\t\\t\", Spacebars.include(view.lookupTemplate(\"Mongol_trash_empty\")), \"\\n\\t\\t\" ];\n      }), \"\\n\\n\\t\" ];\n    });\n  });\n}));\n\nTemplate.__checkName(\"Mongol_trash_menu\");\nTemplate[\"Mongol_trash_menu\"] = new Template(\"Template.Mongol_trash_menu\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"Mongol_docMenu\"\n  }, HTML.Raw('\\n\\t\\t<div class=\"Mongol_m_edit MeteorToys_action\">Restore</div>\\n\\t\\t'), HTML.DIV({\n    class: function() {\n      return [ Spacebars.mustache(view.lookup(\"disable_right\")), \" Mongol_m_right MeteorToys_action\" ];\n    }\n  }, HTML.Raw(\"&rsaquo;\")), \"\\n\\t\\t\", HTML.DIV({\n    class: function() {\n      return [ Spacebars.mustache(view.lookup(\"disable_left\")), \" Mongol_m_left MeteorToys_action\" ];\n    }\n  }, HTML.Raw(\"&lsaquo;\")), \"\\n\\t\");\n}));\n\nTemplate.__checkName(\"Mongol_trash_viewer\");\nTemplate[\"Mongol_trash_viewer\"] = new Template(\"Template.Mongol_trash_viewer\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"Mongol_contentView\"\n  }, \"\\n\\t\\t\", Spacebars.include(view.lookupTemplate(\"Mongol_trash_menu\")), \"\\n\\t    \", HTML.DIV({\n    class: \"Mongol_documentViewer\"\n  }, \"\\n\", HTML.PRE(\"From \", Blaze.View(\"lookup:collectionName\", function() {\n    return Spacebars.mustache(view.lookup(\"collectionName\"));\n  }), \" \", Blaze.View(\"lookup:currentDocument\", function() {\n    return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"currentDocument\")));\n  })), \"\\n\\t    \"), \"\\n\\t\");\n}));\n\nTemplate.__checkName(\"Mongol_trash_empty\");\nTemplate[\"Mongol_trash_empty\"] = new Template(\"Template.Mongol_trash_empty\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"Mongol_contentView\">\\n\\t\\t<div class=\"Mongol_docMenu\" style=\"text-indent: 8px\">Empty</div>\\n\\t\\t<div class=\"Mongol_documentViewer\">\\n<pre>When you remove documents,\\nthey will appear here.</pre></div>\\n\\t</div>');\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/msavin_mongol/client/row_trash/main.js                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _0x92fe=[\"\\x4D\\x6F\\x6E\\x67\\x6F\\x6C\\x5F\\x54\\x72\\x61\\x73\\x68\\x5F\\x43\\x6F\\x75\\x6E\\x74\",\"\\x67\\x65\\x74\",\"\\x73\\x65\\x74\",\"\\x65\\x76\\x65\\x6E\\x74\\x73\",\"\\x4D\\x6F\\x6E\\x67\\x6F\\x6C\\x5F\\x74\\x72\\x61\\x73\\x68\",\"\\x4D\\x65\\x74\\x65\\x6F\\x72\\x54\\x6F\\x79\\x73\\x2E\\x4D\\x6F\\x6E\\x67\\x6F\\x6C\",\"\\x4D\\x6F\\x6E\\x67\\x6F\\x6C\",\"\\x6D\\x73\\x61\\x76\\x69\\x6E\\x3A\\x6D\\x6F\\x6E\\x67\\x6F\\x6C\",\"\\x63\\x6F\\x75\\x6E\\x74\",\"\\x66\\x69\\x6E\\x64\",\"\\x54\\x72\\x61\\x73\\x68\\x5F\\x43\\x6F\\x75\\x6E\\x74\",\"\\x4D\\x6F\\x6E\\x67\\x6F\\x6C\\x5F\",\"\\x68\\x65\\x6C\\x70\\x65\\x72\\x73\",\"\\x66\\x65\\x74\\x63\\x68\",\"\\x4D\\x6F\\x6E\\x67\\x6F\\x6C\\x5F\\x6F\\x72\\x69\\x67\\x69\\x6E\",\"\\x4D\\x6F\\x6E\\x67\\x6F\\x6C\\x5F\\x64\\x61\\x74\\x65\",\"\\x73\\x74\\x72\\x69\\x6E\\x67\\x69\\x66\\x79\",\"\\x63\\x6F\\x6C\\x6F\\x72\\x69\\x7A\\x65\",\"\\x4D\\x65\\x74\\x65\\x6F\\x72\\x54\\x6F\\x79\\x73\",\"\\x6D\\x65\\x74\\x65\\x6F\\x72\\x74\\x6F\\x79\\x73\\x3A\\x74\\x6F\\x79\\x6B\\x69\\x74\",\"\\x4D\\x6F\\x6E\\x67\\x6F\\x6C\\x5F\\x74\\x72\\x61\\x73\\x68\\x5F\\x76\\x69\\x65\\x77\\x65\\x72\",\"\\x5F\\x69\\x64\",\"\\x4D\\x6F\\x6E\\x67\\x6F\\x6C\\x5F\\x69\\x6E\\x73\\x65\\x72\\x74\",\"\\x54\\x68\\x65\\x72\\x65\\x20\\x77\\x61\\x73\\x20\\x61\\x6E\\x20\\x65\\x72\\x72\\x6F\\x72\\x20\\x72\\x65\\x73\\x74\\x6F\\x72\\x69\\x6E\\x67\\x20\\x79\\x6F\\x75\\x72\\x20\\x64\\x6F\\x63\\x75\\x6D\\x65\\x6E\\x74\\x2E\",\"\\x63\\x61\\x6C\\x6C\",\"\\x4D\\x6F\\x6E\\x67\\x6F\\x6C\\x5F\\x72\\x65\\x6D\\x6F\\x76\\x65\",\"\\x54\\x68\\x65\\x72\\x65\\x20\\x77\\x61\\x73\\x20\\x61\\x6E\\x20\\x65\\x72\\x72\\x6F\\x72\\x20\\x72\\x65\\x6D\\x6F\\x76\\x69\\x6E\\x67\\x20\\x64\\x6F\\x63\\x75\\x6D\\x65\\x6E\\x74\\x20\\x66\\x72\\x6F\\x6D\\x20\\x74\\x72\\x61\\x73\\x68\\x2C\",\"\\x63\\x6C\\x69\\x63\\x6B\",\"\\x2E\\x4D\\x6F\\x6E\\x67\\x6F\\x6C\\x5F\\x6D\\x5F\\x6C\\x65\\x66\\x74\",\"\\x4D\\x6F\\x6E\\x67\\x6F\\x6C\\x5F\\x6D\\x5F\\x64\\x69\\x73\\x61\\x62\\x6C\\x65\\x64\",\"\\x68\\x61\\x73\\x43\\x6C\\x61\\x73\\x73\",\"\\x2E\\x4D\\x6F\\x6E\\x67\\x6F\\x6C\\x5F\\x6D\\x5F\\x72\\x69\\x67\\x68\\x74\",\"\\x4D\\x6F\\x6E\\x67\\x6F\\x6C\\x5F\\x74\\x72\\x61\\x73\\x68\\x5F\\x6D\\x65\\x6E\\x75\"];Template[_0x92fe[4]][_0x92fe[3]]({\"\\x63\\x6C\\x69\\x63\\x6B\":function(){if(!MeteorToysDict[_0x92fe[1]](_0x92fe[0])){MeteorToysDict[_0x92fe[2]](_0x92fe[0],0)}}});Template[_0x92fe[4]][_0x92fe[12]]({collectionCount:function(){var _0x1e90x1=_0x92fe[5];var _0x1e90x2=Package[_0x92fe[7]][_0x92fe[6]].Collection(_0x1e90x1);var _0x1e90x3=_0x1e90x2&&_0x1e90x2[_0x92fe[9]]()[_0x92fe[8]]()||0;return _0x1e90x3},currentPosition:function(){var _0x1e90x4=_0x92fe[10];var _0x1e90x5=_0x92fe[11]+_0x1e90x4;var _0x1e90x6=MeteorToysDict[_0x92fe[1]](_0x1e90x5);var _0x1e90x3=_0x1e90x6+1;return _0x1e90x3}});Template[_0x92fe[20]][_0x92fe[12]]({currentDocument:function(){var _0x1e90x1=_0x92fe[5],_0x1e90x7=MeteorToysDict[_0x92fe[1]](_0x92fe[0]),_0x1e90x8=Package[_0x92fe[7]][_0x92fe[6]].Collection(_0x92fe[5])[_0x92fe[9]]()[_0x92fe[13]]()[_0x1e90x7];if(_0x1e90x8){delete _0x1e90x8[_0x92fe[14]];delete _0x1e90x8[_0x92fe[15]];var _0x1e90x9=Package[_0x92fe[19]][_0x92fe[18]][_0x92fe[17]](JSON[_0x92fe[16]](_0x1e90x8,undefined,2));return _0x1e90x9}},collectionName:function(){var _0x1e90x1=_0x92fe[5],_0x1e90x7=MeteorToysDict[_0x92fe[1]](_0x92fe[0]),_0x1e90x8=Package[_0x92fe[7]][_0x92fe[6]].Collection(_0x92fe[5])[_0x92fe[9]]()[_0x92fe[13]]()[_0x1e90x7];if(_0x1e90x8){return _0x1e90x8[_0x92fe[14]]}}});Template[_0x92fe[32]][_0x92fe[3]]({\"\\x63\\x6C\\x69\\x63\\x6B\\x20\\x2E\\x4D\\x6F\\x6E\\x67\\x6F\\x6C\\x5F\\x6D\\x5F\\x65\\x64\\x69\\x74\":function(){var _0x1e90x1=_0x92fe[5],_0x1e90x7=MeteorToysDict[_0x92fe[1]](_0x92fe[0]),_0x1e90x8=Package[_0x92fe[7]][_0x92fe[6]].Collection(_0x92fe[5])[_0x92fe[9]]()[_0x92fe[13]]()[_0x1e90x7];var _0x1e90x4=_0x1e90x8[_0x92fe[14]];var _0x1e90xa=_0x1e90x8[_0x92fe[21]];delete _0x1e90x8[_0x92fe[14]];delete _0x1e90x8[_0x92fe[15]];Meteor[_0x92fe[24]](_0x92fe[22],_0x1e90x4,_0x1e90x8,function(_0x1e90xb,_0x1e90xc){if(_0x1e90xb){alert(_0x92fe[23])}});Meteor[_0x92fe[24]](_0x92fe[25],_0x92fe[5],_0x1e90xa,true,function(_0x1e90xb,_0x1e90xc){if(_0x1e90xb){alert(_0x92fe[26])}});var _0x1e90x5=_0x92fe[0];var _0x1e90xd=MeteorToysDict[_0x92fe[1]](_0x1e90x5);var _0x1e90x2=Package[_0x92fe[7]][_0x92fe[6]].Collection(_0x92fe[5]);var _0x1e90xe=_0x1e90x2[_0x92fe[9]]()[_0x92fe[8]]()-1;if(_0x1e90xe===_0x1e90xd){$(_0x92fe[28])[_0x92fe[27]]()}},\"\\x63\\x6C\\x69\\x63\\x6B\\x20\\x2E\\x4D\\x6F\\x6E\\x67\\x6F\\x6C\\x5F\\x6D\\x5F\\x72\\x69\\x67\\x68\\x74\":function(){if(!$(_0x92fe[31])[_0x92fe[30]](_0x92fe[29])){var _0x1e90x5=_0x92fe[0];var _0x1e90xd=MeteorToysDict[_0x92fe[1]](_0x1e90x5);var _0x1e90x2=Package[_0x92fe[7]][_0x92fe[6]].Collection(_0x92fe[5]);var _0x1e90xe=_0x1e90x2[_0x92fe[9]]()[_0x92fe[8]]()-1;if(_0x1e90xd>_0x1e90xe){MeteorToysDict[_0x92fe[2]](_0x1e90x5,0);return};if(_0x1e90xe===_0x1e90xd){MeteorToysDict[_0x92fe[2]](_0x1e90x5,0)}else {var _0x1e90xf=MeteorToysDict[_0x92fe[1]](_0x1e90x5)+1;MeteorToysDict[_0x92fe[2]](_0x1e90x5,_0x1e90xf)}}},\"\\x63\\x6C\\x69\\x63\\x6B\\x20\\x2E\\x4D\\x6F\\x6E\\x67\\x6F\\x6C\\x5F\\x6D\\x5F\\x6C\\x65\\x66\\x74\":function(){if(!$(_0x92fe[28])[_0x92fe[30]](_0x92fe[29])){var _0x1e90x5=_0x92fe[0];var _0x1e90xd=MeteorToysDict[_0x92fe[1]](_0x1e90x5);var _0x1e90x2=Package[_0x92fe[7]][_0x92fe[6]].Collection(_0x92fe[5]);var _0x1e90xe=_0x1e90x2[_0x92fe[9]]()[_0x92fe[8]]()-1;if(_0x1e90xd>_0x1e90xe){MeteorToysDict[_0x92fe[2]](_0x1e90x5,_0x1e90xe);return};if(MeteorToysDict[_0x92fe[1]](_0x1e90x5)===0){MeteorToysDict[_0x92fe[2]](_0x1e90x5,_0x1e90xe)}else {var _0x1e90xf=MeteorToysDict[_0x92fe[1]](_0x1e90x5)-1;MeteorToysDict[_0x92fe[2]](_0x1e90x5,_0x1e90xf)}}}})\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/msavin_mongol/client/row_subscriptions/template.main.js                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"Mongol_subscriptions\");\nTemplate[\"Mongol_subscriptions\"] = new Template(\"Template.Mongol_subscriptions\", (function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return {\n      name: Spacebars.call(\"subscriptions_618\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"Mongol_Component\"), function() {\n      return [ \"\\n\\n\\t\\t\\n        \", HTML.DIV({\n        class: \"Mongol_toggle_selected_collection\"\n      }, \"\\n\\t\\t\\t\", HTML.Comment(\" Name \"), \"\\n\\t\\t\\t\", HTML.DIV({\n        class: \"Mongol_icon Mongol_icon_sub\"\n      }), \"Subscriptions\\n        \"), \"\\n\\n\\t\\t\", HTML.DIV({\n        class: \"Mongol_contentView\"\n      }, \"\\n\\t\\t\", HTML.DIV({\n        class: \"Mongol_docMenu\",\n        style: \"text-indent: 8px\"\n      }, \"\\n\\t\\t\\t\", Blaze.View(\"lookup:subType\", function() {\n        return Spacebars.mustache(view.lookup(\"subType\"));\n      }), \"\\n\\t\\t\"), \"\\n\\t\\t\", HTML.Comment(\" Document Viewer \"), \"\\n\\t\\t\", HTML.DIV({\n        class: \"Mongol_documentViewer\",\n        style: \"Padding: 0px 7px !important\"\n      }, \"\\n\\t\\t\\t\", Blaze.Each(function() {\n        return Spacebars.call(view.lookup(\"subscription\"));\n      }, function() {\n        return [ \"\\n\\t\\t\\t\\t\", HTML.DIV({\n          class: \"Mongol_pubsub_row\"\n        }, \"\\n\\t\\t\\t\\t\\t\", HTML.DIV({\n          class: \"Mongol_pubsub_row_toggle\"\n        }, HTML.CharRef({\n          html: \"&times;\",\n          str: \"×\"\n        })), \"\\n\\t\\t\\t\\t\\t\", HTML.DIV({\n          class: \"Mongol_pubsub_row_name\"\n        }, Blaze.View(\"lookup:name\", function() {\n          return Spacebars.mustache(view.lookup(\"name\"));\n        })), \"\\n\\t\\t\\t\\t\\tParams: \", Blaze.View(\"lookup:params\", function() {\n          return Spacebars.mustache(view.lookup(\"params\"));\n        }), \" \\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\" ];\n      }, function() {\n        return \"\\n\\t\\t\\t\\tNo subscriptions available\\n\\t\\t\\t\";\n      }), \"\\n\\t\\t\"), \"\\n\\t\\t\", HTML.Comment(\"  \"), \"\\n\\t\"), \"\\n\\t\\t\\n\\n\\t\" ];\n    });\n  });\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/msavin_mongol/client/row_subscriptions/main.js                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _0x93de=[\"\\x6D\\x65\\x74\\x65\\x6F\\x72\\x74\\x6F\\x79\\x73\\x3A\\x73\\x75\\x62\",\"\\x4D\\x65\\x74\\x65\\x6F\\x72\\x54\\x6F\\x79\\x73\",\"\\x6D\\x65\\x74\\x65\\x6F\\x72\\x74\\x6F\\x79\\x73\\x3A\\x74\\x6F\\x79\\x6B\\x69\\x74\",\"\\x72\\x75\\x6E\\x50\\x75\\x62\\x53\\x75\\x62\",\"\\x64\\x65\\x66\\x61\\x75\\x6C\\x74\\x5F\\x63\\x6F\\x6E\\x6E\\x65\\x63\\x74\\x69\\x6F\\x6E\",\"\\x6F\\x62\\x73\\x65\\x72\\x76\\x65\",\"\\x6D\\x73\\x61\\x76\\x69\\x6E\\x3A\\x73\\x75\\x62\",\"\\x6D\\x73\\x61\\x76\\x69\\x6E\\x3A\\x6D\\x6F\\x6E\\x67\\x6F\\x6C\",\"\\x5F\\x73\\x75\\x62\\x73\\x63\\x72\\x69\\x70\\x74\\x69\\x6F\\x6E\\x73\",\"\\x6B\\x65\\x79\\x73\",\"\\x4D\\x65\\x74\\x65\\x6F\\x72\\x54\\x6F\\x79\\x73\\x2F\\x50\\x75\\x62\\x53\\x75\\x62\",\"\\x73\\x65\\x74\",\"\\x67\\x65\\x74\",\"\\x6E\\x61\\x6D\\x65\",\"\\x70\\x61\\x72\\x61\\x6D\\x73\",\"\\x6C\\x65\\x6E\\x67\\x74\\x68\",\"\\x6E\\x6F\\x6E\\x65\",\"\\x50\\x6F\\x6C\\x6C\\x69\\x6E\\x67\\x20\\x65\\x76\\x65\\x72\\x79\\x20\\x33\\x20\\x73\\x65\\x63\\x6F\\x6E\\x64\\x73\",\"\\x68\\x65\\x6C\\x70\\x65\\x72\\x73\",\"\\x4D\\x6F\\x6E\\x67\\x6F\\x6C\\x5F\\x73\\x75\\x62\\x73\\x63\\x72\\x69\\x70\\x74\\x69\\x6F\\x6E\\x73\",\"\\x73\\x74\\x6F\\x70\",\"\\x65\\x76\\x65\\x6E\\x74\\x73\"];if(!Package[_0x93de[0]]){MeteorToysDict=Package[_0x93de[2]][_0x93de[1]];MeteorToys_Sub={observe:function(){MeteorToys_Sub[_0x93de[3]]();thisishack=true;if(thisishack){setInterval(function(){MeteorToys_Sub[_0x93de[3]]()},3000)}else {Object[_0x93de[5]](Meteor[_0x93de[4]]._subscriptions,function(){MeteorToys_Sub[_0x93de[3]]()})}},runPubSub:function(){if(Package[_0x93de[6]]||Package[_0x93de[7]]){var _0x8721x1=Meteor[_0x93de[4]][_0x93de[8]],_0x8721x2=Object[_0x93de[9]](_0x8721x1);MeteorToysDict[_0x93de[11]](_0x93de[10],_0x8721x2)}}};MeteorToys_Sub[_0x93de[5]]()};Template[_0x93de[19]][_0x93de[18]]({subscription:function(){var _0x8721x3=MeteorToysDict[_0x93de[12]](_0x93de[10]);return _0x8721x3},name:function(){var _0x8721x4=Meteor[_0x93de[4]][_0x93de[8]][this]&&Meteor[_0x93de[4]][_0x93de[8]][this][_0x93de[13]];return _0x8721x4},params:function(){var _0x8721x5=Meteor[_0x93de[4]][_0x93de[8]][this]&&Meteor[_0x93de[4]][_0x93de[8]][this][_0x93de[14]];if(_0x8721x5&&_0x8721x5[_0x93de[15]]>0){return _0x8721x5}else {return _0x93de[16]}},subType:function(){return _0x93de[17]}});Template[_0x93de[19]][_0x93de[21]]({\"\\x63\\x6C\\x69\\x63\\x6B\\x20\\x2E\\x4D\\x65\\x74\\x65\\x6F\\x72\\x54\\x6F\\x79\\x73\\x5F\\x70\\x75\\x62\\x73\\x75\\x62\\x5F\\x72\\x6F\\x77\\x5F\\x74\\x6F\\x67\\x67\\x6C\\x65\":function(){Meteor[_0x93de[4]][_0x93de[8]][this][_0x93de[20]]()}})\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/msavin_mongol/client/doc_insert/template.docInsert.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"Mongol_docInsert\");\nTemplate[\"Mongol_docInsert\"] = new Template(\"Template.Mongol_docInsert\", (function() {\n  var view = this;\n  return [ HTML.Raw('<div class=\"Mongol_docMenu\">\\n\\t\\t<div class=\"MeteorToys_action Mongol_docMenu_insert\" style=\"float: right\">Submit</div>\\n\\t\\t&nbsp;Insert a Document\\n\\t</div>\\n\\n\\t'), HTML.DIV({\n    class: \"Mongol_documentViewer \",\n    id: function() {\n      return [ \"Mongol_\", Spacebars.mustache(view.lookup(\".\")), \"_newEntry\" ];\n    },\n    tabindex: \"-1\",\n    contenteditable: \"true\"\n  }, \"\\t\\n\", HTML.Raw(\"<pre>{\\n\\n}</pre>\"), \"\\n\\n\\t\") ];\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/msavin_mongol/client/doc_insert/docInsert.js                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.Mongol_docInsert.events({\n  'click .Mongol_docMenu_insert': function (e, t) {\n\n    var CollectionName = String(this),\n        newDataID      = \"Mongol_\" + String(this) + \"_newEntry\",\n        newData        = document.getElementById(newDataID).textContent,\n        newObject      = Mongol.parse(newData);\n\n    if (newObject) {\n      Meteor.call('Mongol_insert', CollectionName, newObject, function (error, result) {\n        if (!error) {\n          sessionKey = \"Mongol_\" + CollectionName;\n          MeteorToysDict.set(sessionKey, 0);\n          alert(\"Document successfully inserted.\");\n          t.$(\"#Mongol_\" + CollectionName + \"_newEntry\").html(\"{<br><br>}\");\n        } else {\n          Mongol.error(\"insert\");\n        }\n      });\n    }\n\n  }\n});\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/msavin_mongol/client/_component/template.component.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"Mongol_Component\");\nTemplate[\"Mongol_Component\"] = new Template(\"Template.Mongol_Component\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: function() {\n      return [ \"Mongol_row \", Spacebars.mustache(view.lookup(\"active\")) ];\n    },\n    id: function() {\n      return [ \"Mongol_c\", Spacebars.mustache(view.lookup(\"name\")) ];\n    }\n  }, \"\\n\\t\\t\", Blaze._InOuterTemplateScope(view, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(view.templateContentBlock);\n    });\n  }), \"\\n\\t\");\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/msavin_mongol/client/_component/component.js                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _0x34af=[\"\\x4D\\x6F\\x6E\\x67\\x6F\\x6C\",\"\\x63\\x6C\\x6F\\x73\\x65\",\"\\x4D\\x6F\\x6E\\x67\\x6F\\x6C\\x5F\\x63\\x75\\x72\\x72\\x65\\x6E\\x74\\x43\\x6F\\x6C\\x6C\\x65\\x63\\x74\\x69\\x6F\\x6E\",\"\\x67\\x65\\x74\",\"\\x73\\x65\\x74\",\"\\x4D\\x6F\\x6E\\x67\\x6F\\x6C\\x5F\\x65\\x64\\x69\\x74\\x4D\\x6F\\x64\\x65\",\"\\x77\\x68\\x69\\x63\\x68\",\"\\x6E\\x61\\x6D\\x65\",\"\\x65\\x71\\x75\\x61\\x6C\\x73\",\"\\x73\\x74\\x6F\\x70\\x50\\x72\\x6F\\x70\\x61\\x67\\x61\\x74\\x69\\x6F\\x6E\",\"\\x4D\\x6F\\x6E\\x67\\x6F\\x6C\\x5F\\x70\\x72\\x65\\x76\\x69\\x65\\x77\",\"\\x65\\x76\\x65\\x6E\\x74\\x73\",\"\\x4D\\x6F\\x6E\\x67\\x6F\\x6C\\x5F\\x43\\x6F\\x6D\\x70\\x6F\\x6E\\x65\\x6E\\x74\",\"\\x4D\\x6F\\x6E\\x67\\x6F\\x6C\\x5F\\x72\\x6F\\x77\\x5F\\x65\\x78\\x70\\x61\\x6E\\x64\",\"\\x68\\x65\\x6C\\x70\\x65\\x72\\x73\"];window[_0x34af[0]]={};window[_0x34af[0]][_0x34af[1]]=function(){if(MeteorToysDict[_0x34af[3]](_0x34af[2])){MeteorToysDict[_0x34af[4]](_0x34af[2],null);MeteorToysDict[_0x34af[4]](_0x34af[5],false)}else {MeteorToys[_0x34af[1]]()}};Template[_0x34af[12]][_0x34af[11]]({\"\\x63\\x6C\\x69\\x63\\x6B\\x20\\x2E\\x4D\\x6F\\x6E\\x67\\x6F\\x6C\\x5F\\x72\\x6F\\x77\":function(_0x8b35x1,_0x8b35x2){if(_0x8b35x1[_0x34af[6]]===1){if(MeteorToysDict[_0x34af[8]](_0x34af[2],this[_0x34af[7]])){MeteorToysDict[_0x34af[4]](_0x34af[2],null)}else {MeteorToysDict[_0x34af[4]](_0x34af[2],this[_0x34af[7]])};MeteorToysDict[_0x34af[4]](_0x34af[5],false)}},\"\\x63\\x6C\\x69\\x63\\x6B\\x20\\x2E\\x4D\\x6F\\x6E\\x67\\x6F\\x6C\\x5F\\x63\\x6F\\x6E\\x74\\x65\\x6E\\x74\\x56\\x69\\x65\\x77\":function(_0x8b35x1){_0x8b35x1[_0x34af[9]]()},\"\\x6D\\x6F\\x75\\x73\\x65\\x6F\\x76\\x65\\x72\\x20\\x2E\\x4D\\x6F\\x6E\\x67\\x6F\\x6C\\x5F\\x72\\x6F\\x77\":function(){MeteorToysDict[_0x34af[4]](_0x34af[10],this[_0x34af[7]])}});Template[_0x34af[12]][_0x34af[14]]({active:function(){if(MeteorToysDict[_0x34af[8]](_0x34af[2],this[_0x34af[7]])){return _0x34af[13]}}})\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/msavin_mongol/client/template.main.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"Mongol\");\nTemplate[\"Mongol\"] = new Template(\"Template.Mongol\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: \"Mongol\",\n    class: function() {\n      return [ Spacebars.mustache(view.lookup(\"active\")), \" MeteorToys MeteorToys_hide_Mongol MeteorToysReset\" ];\n    },\n    oncontextmenu: \"Mongol.close(); return false;\"\n  }, \"\\n\\n\\t\\t\", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"MeteorToys_Pro\"));\n  }, function() {\n    return [ \"\\n\\t\\t\\n\\t\\t\\t\", Spacebars.include(view.lookupTemplate(\"Mongol_header_pro\")), \"\\n\\t\\t\\t\", Spacebars.include(view.lookupTemplate(\"Mongol_account\")), \"\\n\\n\\t\\t\\t\", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"Mongol_collections\"));\n    }, function() {\n      return [ \"\\n\\t\\t\\t\\t\", Spacebars.include(view.lookupTemplate(\"Mongol_collection\")), \"\\n\\t\\t\\t\" ];\n    }, function() {\n      return [ \"\\n\\t\\t\\t\\t\", Spacebars.include(view.lookupTemplate(\"Mongol_collection_notFound\")), \"\\n\\t\\t\\t\" ];\n    }), \"\\n\\n\\t\", HTML.Comment(' \\t\\t{{#each Mongol_local}}\\n\\t\\t\\t\\t{{> Mongol_collection xf=\"local\"}}\\n\\t\\t\\t{{/each}} '), \"\\n\\n\\n\\t\\t\\t\", Spacebars.include(view.lookupTemplate(\"Mongol_trash\")), \"\\n\\n\\t\\t\" ];\n  }, function() {\n    return [ \"\\n\\n\\t\\t\\t\", Spacebars.include(view.lookupTemplate(\"Mongol_header\")), \"\\n\\t\\t\\t\", Spacebars.include(view.lookupTemplate(\"Mongol_account\")), \"\\n\\t\\t\\t\", Spacebars.include(view.lookupTemplate(\"Mongol_subscriptions\")), \"\\n\\t\\t\\t\", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"Mongol_collections\"));\n    }, function() {\n      return [ \"\\n\\t\\t\\t\\t\", Spacebars.include(view.lookupTemplate(\"Mongol_collection\")), \"\\n\\t\\t\\t\" ];\n    }, function() {\n      return [ \"\\n\\t\\t\\t\\t\", Spacebars.include(view.lookupTemplate(\"Mongol_collection_notFound\")), \"\\n\\t\\t\\t\" ];\n    }), \"\\n\\n\\n\\n\\n\\t\\t\" ];\n  }), \"\\n\\n\\t\");\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/msavin_mongol/client/main.js                                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nMeteor.startup(function() {\n    \n  // Detect collections\n    Mongol.detectCollections();\n\n  // Initialize Reactive-Dict\n    MeteorToysDict = Package[\"meteortoys:toykit\"].MeteorToys;\n\n  // Hide background collections\n    Mongol.hideMeteor();\n    Mongol.hideVelocity();\n    Mongol.hideMeteorToys();\n\n  // For use outside of Mongol package scope:\n  // Package[\"msavin:mongol\"].Mongol.hideCollection(\"mongoName\");\n  // Package[\"msavin:mongol\"].Mongol.showCollection(\"localCollection\");\n\n});\n\nTemplate.Mongol.helpers({\n  Mongol_collections: function () {\n    // returns Mongo names of collections\n    var    MongolConfig = MeteorToysDict.get(\"Mongol\");\n    return MongolConfig && _.without(MongolConfig.collections, null) || [];\n  },\n  active: function () {\n    var MongolCollection = MeteorToysDict.get(\"Mongol_currentCollection\");\n    if (MongolCollection) {\n      return \"Mongol_expand\";\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/msavin_mongol/client/doc_controls/template.docControls.js                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"Mongol_docControls\");\nTemplate[\"Mongol_docControls\"] = new Template(\"Template.Mongol_docControls\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"active\"));\n  }, function() {\n    return [ \"\\n\\t\\t\\n\\t\\t\", HTML.DIV({\n      class: function() {\n        return [ \"Mongol_docMenu \", Spacebars.mustache(view.lookup(\"Mongol_docMenu_editing\")) ];\n      }\n    }, \"\\n\\t\\t\\t\", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"account\"));\n    }, function() {\n      return [ \"\\n\\t\\t\\t\\t\", HTML.DIV({\n        class: \"Mongol_docBar1\"\n      }, \"\\n\\t\\t\\t\\t\\t\", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"editing\"));\n      }, function() {\n        return [ \"\\n\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n          class: \"Mongol_edit_title\"\n        }, \"Update Document\"), \"\\n\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n          class: \"MeteorToys_action Mongol_edit_save\"\n        }, \"Save\"), \"\\n\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n          class: \"MeteorToys_action Mongol_edit_cancel\"\n        }, \"Cancel\"), \"\\n\\t\\t\\t\\t\\t\" ];\n      }, function() {\n        return [ \"\\t\\n\\t\\t\\t\\t\\t\\t\\n                        \", HTML.Comment(\"For some reason, the method in place does not work for this\\n                        Commenting out for now\"), \"\\n                        \", HTML.DIV({\n          class: \"MeteorToys_action Mongol_m_edit Mongol_m_updateAccount\"\n        }, \"Update\"), \"\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\", HTML.Comment(\" &nbsp;Currently Read-Only \"), \"\\n\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n          class: \"MeteorToys_action Mongol_m_signout\"\n        }, \"Sign Out\"), \"\\n                        \\n\\t\\t\\t\\t\\t\" ];\n      }), \"\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\" ];\n    }, function() {\n      return [ \"\\n\\t\\t\\t\\t\", HTML.DIV({\n        class: \"Mongol_docBar1\"\n      }, \"\\n\\t\\t\\t\\t\\t\", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"editing\"));\n      }, function() {\n        return [ \"\\n\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n          class: \"Mongol_edit_title\"\n        }, \"Update Document\"), \"\\n\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n          class: \"MeteorToys_action Mongol_edit_save\"\n        }, \"Save\"), \"\\n\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n          class: \"MeteorToys_action Mongol_edit_cancel\"\n        }, \"Cancel\"), \"\\n\\t\\t\\t\\t\\t\" ];\n      }, function() {\n        return [ \"\\n\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n          class: \"MeteorToys_action Mongol_m_edit\"\n        }, \"Update\"), \"\\n\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n          class: \"MeteorToys_action Mongol_m_new\"\n        }, \"Duplicate\"), \"\\n\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n          class: \"MeteorToys_action Mongol_m_delete\"\n        }, \"Remove\"), \"\\n\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n          class: function() {\n            return [ \"MeteorToys_action \", Spacebars.mustache(view.lookup(\"disable\")), \" Mongol_m_right\" ];\n          }\n        }, HTML.CharRef({\n          html: \"&rsaquo;\",\n          str: \"›\"\n        })), \"\\n\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n          class: function() {\n            return [ \"MeteorToys_action \", Spacebars.mustache(view.lookup(\"disable\")), \" Mongol_m_left\" ];\n          }\n        }, HTML.CharRef({\n          html: \"&lsaquo;\",\n          str: \"‹\"\n        })), \"\\n\\t\\t\\t\\t\\t\" ];\n      }), \"\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\" ];\n    }), \"\\t\\n\\t\\t\"), \"\\n\\n\\t\" ];\n  }, function() {\n    return [ \"\\n\\n\\t\\t\", HTML.DIV({\n      class: \"Mongol_docMenu\"\n    }, \"\\n\\t\\t\\t\", HTML.DIV({\n      class: \"Mongol_docBar1\"\n    }, \"\\n\\t\\t\\t\\t\", HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\"), \"\\n\\n\\t\" ];\n  });\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/msavin_mongol/client/doc_controls/docControls.js                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\n// needs to be re-thought\n\n// Strip out functions in case documents have had methods added to them\n\nMongol.validateDocument = function (doc) {\n  var validatedDoc = {};\n  _.each(doc, function (val, key) {\n    if (_.isFunction(val)) {\n      return;\n    }\n    validatedDoc[key] = val;\n  });\n  return validatedDoc;\n}\n\nMongol.inlineEditingTimer = null;\n\nMongol.resetInlineEditingTimer = function() {\n  if (Mongol.inlineEditingTimer) {\n\tMeteor.clearTimeout(Mongol.inlineEditingTimer);\n  }\n  MeteorToysDict.set('Mongol_noInlineEditing', true);\n  Mongol.inlineEditingTimer = Meteor.setTimeout(function () {\n    MeteorToysDict.set('Mongol_noInlineEditing', false);  \n  },300);\n}\n\nTemplate.Mongol_docControls.events({\n  'click .Mongol_m_new': function() {\n\n    CollectionName    = MeteorToysDict.get(\"Mongol_currentCollection\"),\n    DocumentPosition  = MeteorToysDict.get(\"Mongol_\" + String(this)),\n    CurrentCollection = Mongol.Collection(CollectionName).find({}, {transform: null}).fetch(),\n    CollectionCount   = Mongol.Collection(CollectionName).find().count(),\n    CurrentDocument   = CurrentCollection[DocumentPosition],\n    DocumentID        = CurrentDocument._id,\n    sessionKey        = \"Mongol_\" + String(this),\n    ValidatedCurrentDocument = Mongol.validateDocument(CurrentDocument);\n\n    Meteor.call(\"Mongol_duplicate\", CollectionName, ValidatedCurrentDocument._id, function(error, result) {\n      if (!error) {\n\n        if (Mongol.Collection(CollectionName).findOne(result)) {\n\n          // Get position of new document\n          list  = Mongol.Collection(CollectionName).find({}, {transform: null}).fetch(),\n          docID = result,\n          currentDoc;\n\n          docIndex = _.map(list, function(obj, index) {\n            if (obj._id === docID) {\n              currentDoc = index;\n            }\n          })\n\n          MeteorToysDict.set(sessionKey, Number(currentDoc));\n        }\n\n      } else {\n        Mongol.error(\"duplicate\");\n      }\n    });\n\n\n\n  },\n  'click .Mongol_m_edit': function() {\n    MeteorToysDict.set(\"Mongol_editMode\", true);\n  },\n  'click .Mongol_m_delete': function() {\n\n    var CollectionName = MeteorToysDict.get(\"Mongol_currentCollection\"),\n      sessionKey = \"Mongol_\" + String(this);\n    DocumentPosition = MeteorToysDict.get(sessionKey),\n      CurrentCollection = Mongol.Collection(CollectionName).find({}, {transform: null}).fetch(),\n      CollectionCount = Mongol.Collection(CollectionName).find().count();\n\n    var CurrentDocument = CurrentCollection[DocumentPosition],\n      DocumentID = CurrentDocument._id;\n\n\n\n    Meteor.call('Mongol_remove', CollectionName, DocumentID, function(error, result) {\n\n      if (!error) {\n        // Log the action\n        if (MeteorToysDict.shouldLog()) {\n          console.log(\"Removed \" + DocumentID + \" from \" + CollectionName + \". Back-up below:\");\n          console.log(CurrentDocument);\n        }\n        \n        // Adjust the position\n        if (DocumentPosition >= CollectionCount - 1) {\n          newPosition = DocumentPosition - 1;\n          MeteorToysDict.set(sessionKey, newPosition);\n        }\n\n        if (MeteorToysDict.get(sessionKey) === -1) {\n          MeteorToysDict.set(sessionKey, 0);\n        }\n\n\n      } else {\n        Mongol.error(\"remove\");\n      }\n\n    });\n\n\n\n  },\n  'click .Mongol_m_right': function(e,t) {\n    // Verify that the button is not disabled\n    if (!t.$('.Mongol_m_right').hasClass('Mongol_m_disabled')) {\n      \n      // Disable inline editing for 0.3s for quick flick to next doc\n      Mongol.resetInlineEditingTimer();\n\t  \n      // Grab the key\n\n      var sessionKey = \"Mongol_\" + String(this);\n      var CurrentDocument = MeteorToysDict.get(sessionKey);\n      var collectionName = String(this);\n      var collectionVar = Mongol.Collection(collectionName);\n      var collectionCount = collectionVar.find().count() - 1;\n\n      if (CurrentDocument > collectionCount) {\n        MeteorToysDict.set(sessionKey, 0)\n        return;\n      }\n\n      if (collectionCount === CurrentDocument) {\n        // Go back to document 1 \n        MeteorToysDict.set(sessionKey, 0);\n      } else {\n        // Go to next document\n        var MongolDocNumber = MeteorToysDict.get(sessionKey) + 1;\n        MeteorToysDict.set(sessionKey, MongolDocNumber);\n      }\n      \n    }\n  },\n  'click .Mongol_m_left': function(e,t) {\n\n    // Verify that the button is not disabled\n    if (!t.$('.Mongol_m_left').hasClass('Mongol_m_disabled')) {\n\n      // Disable inline editing for 0.3s for quick flick to next doc\n      Mongol.resetInlineEditingTimer();\n      \n      // Grab the key\n      sessionKey = \"Mongol_\" + String(this);\n      // Get the document count\n      var CurrentDocument = MeteorToysDict.get(sessionKey);\n      var collectionName  = String(this);\n      var collectionVar   = Mongol.Collection(collectionName);\n      var collectionCount = collectionVar.find().count() - 1;\n\n      if (CurrentDocument > collectionCount) {\n        MeteorToysDict.set(sessionKey, collectionCount)\n        return;\n      }\n\n      if (MeteorToysDict.get(sessionKey) === 0) {\n        \n\n        // Set the key to last\n        MeteorToysDict.set(sessionKey, collectionCount)\n      } else {\n        var MongolDocNumber = MeteorToysDict.get(sessionKey) - 1;\n        MeteorToysDict.set(sessionKey, MongolDocNumber);\n      }\n\n    }\n\n  },\n  'click .Mongol_edit_save': function() {\n\n    // Get current document to get its current state\n    // We need to send this to the server so we know which fields are up for change\n    // when applying the diffing algorithm\n\n    var collectionName = (MeteorToysDict.equals(\"Mongol_currentCollection\", \"account_618\")) ? \"users\" : String(this);\n\n    if (MeteorToysDict.equals(\"Mongol_currentCollection\", \"account_618\")) {\n      var newData = Mongol.getDocumentUpdate(\"account_618\");\n      var newObject = Mongol.parse(newData);\n      var oldObject = Meteor.user();\n      // console.log(targetCollection);\n      // console.log(newData);\n      // console.log(newObject);\n    } else {\n      var sessionKey = \"Mongol_\" + collectionName;\n      DocumentPosition = MeteorToysDict.get(sessionKey),\n      CurrentCollection = Mongol.Collection(collectionName).find({}, {transform: null}).fetch();\n      var newData =   Mongol.getDocumentUpdate(collectionName);\n      var newObject = Mongol.parse(newData);\n      var oldObject = CurrentCollection[DocumentPosition];\n    }\n\n    // console.log(newData);\n    // console.log(newObject);\n    // console.log(oldObject);\n    \n    if (newObject) {\n      Meteor.call(\"Mongol_update\", collectionName, newObject, Mongol.validateDocument(oldObject), function(error, result) {\n        if (!error) {\n          MeteorToysDict.set('Mongol_editMode', null);\n\n        } else {\n          Mongol.error('update')\n        }\n      });\n    }\n  },\n  'click .Mongol_edit_cancel': function() {\n    MeteorToysDict.set('Mongol_editMode', null);\n  },\n  'click .Mongol_m_signout': function() {\n    Meteor.logout();\n    MeteorToysDict.set(\"Mongol_currentCollection\", null);\n  },\n});\n\n\nTemplate.Mongol_docControls.helpers({\n  disable: function() {\n    var sessionKey = \"Mongol_\" + String(this);\n    var CurrentDocument = MeteorToysDict.get(sessionKey);\n    var collectionName = String(this);\n    var collectionVar = Mongol.Collection(collectionName);\n    var collectionCount = collectionVar.find().count();\n    \n    if (CurrentDocument >= 1) {\n      return;\n    }\n\n    if (collectionCount === 1) {\n      return \"MeteorToys_disabled\";\n    }\n\n  },\n  editing: function() {\n    var editing = MeteorToysDict.get('Mongol_editMode');\n    return editing;\n  },\n  editing_class: function() {\n    var edit = MeteorToysDict.get('Mongol_editMode');\n    if (edit) {\n      return \"Mongol_m_wrapper_expand\"\n    }\n  },\n  Mongol_docMenu_editing: function() {\n    var editMode = MeteorToysDict.get(\"Mongol_editMode\");\n\n    if (editMode) {\n      return \"Mongol_docMenu_editing\";\n    }\n\n  },\n  active: function() {\n\n    var current = MeteorToysDict.get(\"Mongol_currentCollection\");\n\n    // return true if collection name matches\n    if (current === String(this)) {\n      return true;\n    }\n\n    // return true if it's a user account\n    if (current === \"account_618\") {\n      return true;\n    }\n\n  },\n  account: function() {\n\n    var currentCollection = MeteorToysDict.get(\"Mongol_currentCollection\");\n    if (currentCollection === \"account_618\") {\n      return true\n    } else {\n      return false\n    }\n  },\n\n});\n\n// Will possibly be used in augmented document udpate UI\n/*Template.Mongol_docViewer.events({\n'click .Mongol_string' : function (evt,tmpl) {\nvar field = $(evt.target).prevAll(\".Mongol_key:first\").text().slice(1,-2);\nMeteorToysDict.set('Mongol_inlineEdit',true);\nTracker.flush();\n// Do something to trigger the editable text element\n}\n});*/\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nPackage._define(\"msavin:mongol\", {\n  Mongol: Mongol\n});\n\n})();\n","servePath":"/packages/msavin_mongol.js"}]